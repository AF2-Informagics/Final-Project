<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0505.1445                               -->
<workbook source-build='10.2.2 (10200.17.0505.1445)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='US_Superstore_Rev' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='datagrid.autoupdate.max.filesize' value='100000000000' />
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.registrationform.stagingWebContentSwitch' value='1' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.2'>
      <aliases enabled='yes' />
      <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
        <calculation class='tableau' formula='50000' />
        <range granularity='1000' min='0' />
      </column>
      <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
        <calculation class='tableau' formula='18.400000000000002' />
        <range granularity='0.10000000000000001' max='100.0' min='1.0' />
      </column>
      <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
        <calculation class='tableau' formula='500000' />
        <range granularity='25000' min='100000' />
      </column>
      <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
        <calculation class='tableau' formula='&quot;Names&quot;' />
        <members>
          <member value='&quot;\% quota ascending&quot;' />
          <member value='&quot;\% quota descending&quot;' />
          <member value='&quot;Names&quot;' />
        </members>
      </column>
      <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
        <calculation class='tableau' formula='0.59999999999999998' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
        <calculation class='tableau' formula='0.064000000000000001' />
        <range granularity='0.001' max='0.25' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Sales Target' inline='true' name='dataengine.42019.622799629629' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Target' name='dataengine.42019.622799629629leaf'>
            <connection class='dataengine' dbname='Data/en_US-US/Sales Target.tde' password='' schema='Extract' tablename='Extract' workgroup-auth-mode='as-is'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.622799629629leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>4603.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4603.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <family>Sheet1</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-03#</statistic>
              <statistic aggregation='Max' datatype='date'>#2016-12-30#</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='Median' datatype='date'>#2015-05-03#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Target</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Sales Target]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Target</remote-alias>
            <ordinal>3</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1342</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2240401.0</statistic>
              <statistic aggregation='Avg' datatype='real'>486.72626547903542</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>25729</statistic>
              <statistic aggregation='Stdev' datatype='real'>985.11439154410641</statistic>
              <statistic aggregation='StdevP' datatype='real'>985.00737786810294</statistic>
              <statistic aggregation='Var' datatype='real'>970450.36442731495</statistic>
              <statistic aggregation='VarP' datatype='real'>970239.53445459565</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>5556474589.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>4</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.319565' measure-ordering='alphabetic' measure-percentage='0.267391' parameter-percentage='0.413043' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sales Commission' inline='true' name='Sales Planning new' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Commission' name='Sales Planning newleaf'>
            <connection class='dataengine' dbname='Data/Extracts/Sales Planning new.tde' schema='Extract' server-oauth='' tablename='Extract' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='Sales Planning newleaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <family>DATA$</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='datetime'>#2002-01-01 00:00:00#</statistic>
              <statistic aggregation='Max' datatype='datetime'>#2002-01-01 00:00:00#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <family>DATA$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sales Person]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Person</remote-alias>
            <ordinal>3</ordinal>
            <family>DATA$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>41</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Barbara Davis&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;William Taylor&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>4</ordinal>
            <family>DATA$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>43</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10297.020000000002</statistic>
              <statistic aggregation='Max' datatype='real'>1144600.6499999994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
      </column>
      <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
      </column>
      <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary]' />
      </column>
      <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
      </column>
      <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Estimate Compensation label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Estimated Compensation:&quot;' />
        <aliases>
          <alias key='&quot;Estimated Compensation:&quot;' value='Estimated total compensation' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
      </column>
      <column datatype='datetime' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
      </column>
      <column datatype='string' name='[Total Sales label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total Sales:&quot;' />
        <aliases>
          <alias key='&quot;Total Sales:&quot;' value='Total' />
        </aliases>
      </column>
      <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Call Center)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Next Button)' hidden='true' name='[Action (Next Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2310128142449424]' />
        </groupfilter>
      </group>
      <group caption='Action (Previous Button)' hidden='true' name='[Action (Previous Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Next (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.372629' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.294038' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#5f9ed1'>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Achievement (variable) (copy):nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;50-75\%&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Below 50\%&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;100\% +&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;75-100\%&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
          <calculation class='tableau' formula='50000' />
          <range granularity='1000' min='0' />
        </column>
        <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
          <calculation class='tableau' formula='18.400000000000002' />
          <range granularity='0.10000000000000001' max='100.0' min='1.0' />
        </column>
        <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
          <calculation class='tableau' formula='500000' />
          <range granularity='25000' min='100000' />
        </column>
        <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
          <calculation class='tableau' formula='&quot;Names&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='dataengine.42019.618651678240' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='dataengine.42019.618651678240leaf'>
            <connection class='dataengine' dbname='Data/en_US-US 1/Sample - Superstore.tde' password='' schema='Extract' tablename='Extract' workgroup-auth-mode='as-is'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.618651678240leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>531</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yuma&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>3</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AA-10315&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;ZD-21925&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>5</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.80000000000000004</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>9994.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>9994.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>7</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-03#</statistic>
              <statistic aggregation='Max' datatype='date'>#2016-12-30#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='date'>#2015-06-27#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5009</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;CA-2011-100006&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;US-2014-169551&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>9</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>631</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>551572652.0</statistic>
              <statistic aggregation='Avg' datatype='real'>55190.379427656597</statistic>
              <statistic aggregation='Min' datatype='integer'>1040</statistic>
              <statistic aggregation='Max' datatype='integer'>99301</statistic>
              <statistic aggregation='Stdev' datatype='real'>32063.693350364487</statistic>
              <statistic aggregation='StdevP' datatype='real'>32062.089163078908</statistic>
              <statistic aggregation='Var' datatype='real'>1028080431.2662077</statistic>
              <statistic aggregation='VarP' datatype='real'>1027977561.501222</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>40715111695442.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>10</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1862</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;FUR-BO-10000112&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;TEC-PH-10004977&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1850</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7545</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>286397.02169999923</statistic>
              <statistic aggregation='Avg' datatype='real'>28.656896307784592</statistic>
              <statistic aggregation='Min' datatype='real'>-6599.978000000001</statistic>
              <statistic aggregation='Max' datatype='real'>8399.9759999999987</statistic>
              <statistic aggregation='Stdev' datatype='real'>234.26010769095728</statistic>
              <statistic aggregation='StdevP' datatype='real'>234.24838736035878</statistic>
              <statistic aggregation='Var' datatype='real'>54877.798055378902</statistic>
              <statistic aggregation='VarP' datatype='real'>54872.30698092869</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>556601085.72111654</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>37873.0</statistic>
              <statistic aggregation='Avg' datatype='real'>3.7895737442465478</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>14</statistic>
              <statistic aggregation='Stdev' datatype='real'>2.2251096911413999</statistic>
              <statistic aggregation='StdevP' datatype='real'>2.2249983660786095</statistic>
              <statistic aggregation='Var' datatype='real'>4.9511131376113768</statistic>
              <statistic aggregation='VarP' datatype='real'>4.9506177290524809</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>192999.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>15</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9994</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>49945015.0</statistic>
              <statistic aggregation='Avg' datatype='real'>4997.5</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>9994</statistic>
              <statistic aggregation='Stdev' datatype='real'>2885.1636290974325</statistic>
              <statistic aggregation='StdevP' datatype='real'>2885.0192806981377</statistic>
              <statistic aggregation='Var' datatype='real'>8324169.166666667</statistic>
              <statistic aggregation='VarP' datatype='real'>8323336.25</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>332783634945.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6144</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2297200.8602999486</statistic>
              <statistic aggregation='Avg' datatype='real'>229.85800083049315</statistic>
              <statistic aggregation='Min' datatype='real'>0.44399999999999995</statistic>
              <statistic aggregation='Max' datatype='real'>22638.48</statistic>
              <statistic aggregation='Stdev' datatype='real'>623.245100508684</statistic>
              <statistic aggregation='StdevP' datatype='real'>623.21391876504924</statistic>
              <statistic aggregation='Var' datatype='real'>388434.4553080796</statistic>
              <statistic aggregation='VarP' datatype='real'>388395.58854248945</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4409655509.1482744</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>17</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>18</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1334</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-07#</statistic>
              <statistic aggregation='Max' datatype='date'>#2017-01-05#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>19</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>20</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>49</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>21</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' value='Count of Customers' />
        </aliases>
      </column>
      <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
        <desc>
          <formatted-text>
            <run>Was shipment early, ontime or late based on ship mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
      </column>
      <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
        <aliases>
          <alias key='false' value='Unprofitable' />
          <alias key='true' value='Profitable' />
        </aliases>
        <desc>
          <formatted-text>
            <run>A level of detail expression that calculates profitability for each Order</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Profit per Customer' datatype='real' default-format='C1033%' hidden='true' name='[Calculation_9321103144526191 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/countD([Customer Name])' />
      </column>
      <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([dataengine.42019.622799629629].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
        <desc>
          <formatted-text>
            <run>Used with &quot;Sales Target&quot; data source</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
      <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Row ID]' role='measure' type='quantitative' />
      <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' hidden='true' name='[Sales est (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
      </column>
      <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,MONTH(Order Date))' hidden='true' name='[Action (Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (Category,YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Customer Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Segment:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?)' hidden='true' name='[Action (Delayed?)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment) 1' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment)' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Segment)' hidden='true' name='[Action (MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,Category,MONTH(Order Date))' hidden='true' name='[Action (Order Profitable?,Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,MONTH(Order Date),Segment)' hidden='true' name='[Action (Order Profitable?,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State) 1' hidden='true' name='[Action (Postal Code,State) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Postal Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State)' hidden='true' name='[Action (Postal Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Postal Code:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Category,ProductSub-Category,Segment)' hidden='true' name='[Action (Product Category,ProductSub-Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,Region,Segment)' hidden='true' name='[Action (ProductSub-Category,Region,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,State)' hidden='true' name='[Action (ProductSub-Category,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status)' hidden='true' name='[Action (Ship Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)' hidden='true' name='[Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Order Date]' />
          <groupfilter function='level-members' level='[Order ID]' />
          <groupfilter function='level-members' level='[Product Name]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Transaction Profit,MONTH(Order Date),Segment)' hidden='true' name='[Action (Transaction Profit,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Product Category)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Segment)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
        <drill-path name='Product'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <folder name='Customer' role='dimensions'>
        <folder-item name='[Customer ID]' type='field' />
        <folder-item name='[Customer Name]' type='field' />
        <folder-item name='[Segment]' type='field' />
      </folder>
      <folder name='Order' role='dimensions'>
        <folder-item name='[Order Date]' type='field' />
        <folder-item name='[Order ID]' type='field' />
        <folder-item name='[Ship Date]' type='field' />
        <folder-item name='[Ship Mode]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.561201' measure-ordering='alphabetic' measure-percentage='0.270208' parameter-percentage='0.168591' show-aliased-fields='true' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Calculation_9921103144103743]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6401103171259723:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Shipped Early&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shipped On Time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_9951107165644870:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;Above Target&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Below Target&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9060122104947471:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>true</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
          <calculation class='tableau' formula='0.59999999999999998' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
        <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
          <calculation class='tableau' formula='0.064000000000000001' />
          <range granularity='0.001' max='0.25' min='0.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='dataengine.42019.622799629629'>
        <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='dataengine.42019.622799629629'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='dataengine.42019.618651678240' target='dataengine.42019.622799629629'>
      <column-mapping>
        <map key='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='[dataengine.42019.622799629629].[mn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[none:Category:nk]' value='[dataengine.42019.622799629629].[none:Category:nk]' />
        <map key='[dataengine.42019.618651678240].[none:Segment:nk]' value='[dataengine.42019.622799629629].[none:Segment:nk]' />
        <map key='[dataengine.42019.618651678240].[tmn:Order Date:ok]' value='[dataengine.42019.622799629629].[tmn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[tyr:Order Date:ok]' value='[dataengine.42019.622799629629].[tyr:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='[dataengine.42019.622799629629].[yr:Order Date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight Customer Name (Hover)' name='[Action10]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Customers' type='sheet'>
        <exclude-sheet name='CustomerOverview' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='CustomerOverview' />
        <param name='field-captions' value='Customer Name' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Commission Model' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sales Person' />
        <param name='target' value='Commission Model' />
      </command>
    </action>
    <action caption='State Filter' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Sale Map' />
      <link caption='State Filter' delimiter=',' escape='\' expression='tsl:Overview?%5Bdataengine.42019.618651678240%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sale Map' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter Details' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Shipping' type='sheet' worksheet='ShippingTrend' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='ShipSummary' />
        <param name='special-fields' value='all' />
        <param name='target' value='Shipping' />
      </command>
    </action>
    <action caption='Filter Product Sales' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Product' type='sheet' worksheet='ProductView' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Product' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Shipping' type='sheet' worksheet='ShipSummary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Shipping' />
      </command>
    </action>
    <action caption='Month Highlight' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sale Map' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sale Map' />
        <param name='field-captions' value='MONTH(Order Date)' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='State Highlight (map)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sales by Product' />
        <exclude-sheet name='Sales by Segment' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sales by Product,Sales by Segment' />
        <param name='field-captions' value='State' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter Region' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' worksheet='CustomerOverview' />
      <link caption='Filter Region' delimiter=',' escape='\' expression='tsl:Customers?%5Bdataengine.42019.618651678240%5D.%5BRegion%5D~s0=&lt;[Region]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='CustomerOverview' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AdhocCluster:1,Clusters,AdhocCluster:2,Customer Segments' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <datasources>
      <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
    </datasources>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='CommissionProjection'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Total Compensation with These Assumptions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
              <range granularity='1000' min='0' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
            <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
              <calculation class='tableau' formula='&quot;Names&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary]' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Max' name='[max:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Person]' derivation='None' name='[none:Sales Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Achievement (copy)]' derivation='Sum' name='[sum:Achievement (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base (Variable)]' derivation='Sum' name='[sum:Base (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4120925132203686]' derivation='User' name='[usr:Calculation_4120925132203686:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_8140925133029303]' derivation='User' name='[usr:Calculation_8140925133029303:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Compensation]' derivation='User' name='[usr:Total Compensation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[sum:Base (Variable):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[Sales Planning new].[none:Sales Person:nk]' direction='ASC' using='[Sales Planning new].[usr:Calculation_8140925133029303:ok]' />
          <sort class='manual' column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 50\%&quot;</bucket>
              <bucket>&quot;50-75\%&quot;</bucket>
              <bucket>&quot;75-100\%&quot;</bucket>
              <bucket>&quot;100\% +&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='Compensation ($)' />
            <format attr='subtitle' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[none:Sales Person:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sales Planning new].[usr:Calculation_4120925132203686:ok]' value='false' />
            <format attr='text-format' field='[Sales Planning new].[sum:Achievement (copy):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline2' value='#acacac' />
            <format attr='color' id='refline2' value='#000000' />
            <format attr='color' id='refline3' value='#000000' />
            <format attr='stroke-color' id='refline4' value='#acacac' />
            <format attr='color' id='refline4' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='col-width' field='[Sales Planning new].[:Measure Names]' value='240' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sales Planning new].[:Measure Names]' />
              <lod column='[Sales Planning new].[sum:Achievement (copy):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[max:OTE (Variable):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' />
            </encodings>
            <reference-line axis-column='[Sales Planning new].[Multiple Values]' enable-instant-analytics='false' formula='max' id='refline2' label='OTE &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[Sales Planning new].[max:OTE (Variable):qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[Sales Planning new].[none:Sales Person:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[Sales Planning new].[usr:Achievement (variable) (copy):nk]&gt; Quota Achieved</run>
                <run fontcolor='#000000' fontsize='9'>Æ </run>
                <run fontcolor='#666666' fontsize='9'>&#10;Total Sales: </run>
                <run fontcolor='#000000' fontsize='9'>Æ        </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[sum:Achievement (copy):qk]&gt;</run>
                <run fontcolor='#555555' fontsize='9'>&#10;Compensation:</run>
                <run fontcolor='#000000' fontsize='9'>Æ </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[usr:Total Compensation:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2537499666213989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sales Planning new].[usr:Calculation_4120925132203686:ok] / [Sales Planning new].[none:Sales Person:nk])</rows>
        <cols>[Sales Planning new].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerOverview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6861103170623145]' derivation='Sum' name='[sum:Calculation_6861103170623145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9321103144526191]' derivation='User' name='[usr:Calculation_9321103144526191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Region:nk]' direction='DESC' using='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]'>
            <groupfilter from='1' function='range' level='[qr:Order Date:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Profit:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Quantity:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' value='22' />
            <format attr='display' class='0' field='[dataengine.42019.618651678240].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Region:nk]' value='23' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[sum:Quantity:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Region:nk]' value='60' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[dataengine.42019.618651678240].[:Measure Names]' value='left' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[:Measure Names]' value='9' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Regular' />
            <format attr='font-weight' field='[dataengine.42019.618651678240].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[dataengine.42019.618651678240].[sum:Profit:qk]' max='200000.0' min='0.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9c0824</color>
                <color>#bd1316</color>
                <color>#d11719</color>
                <color>#df513f</color>
                <color>#fc8375</color>
                <color>#cacaca</color>
                <color>#95aebb</color>
                <color>#6795ac</color>
                <color>#3e7d9d</color>
                <color>#1c688d</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Year' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Quantity:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Region:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Customers:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales/Customer:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Quantity:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Quantity:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:&#9;</run>
                <run fontcolor='#000000' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5162431001663208' />
                <format attr='mark-color' value='#4a76a1' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Region:nk]</rows>
        <cols>([dataengine.42019.618651678240].[:Measure Names] * [dataengine.42019.618651678240].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerRank'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Customer Ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Customer Name:nk]' direction='DESC' using='[dataengine.42019.618651678240].[sum:Sales:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (Region)]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#f0f0f0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='text-align' id='refline0' value='center' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-visibility' scope='cols' value='on' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <lod column='[dataengine.42019.618651678240].[rank:sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales Rank:&#9;</run>
                <run fontcolor='#353535' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Customer Name:nk]</rows>
        <cols>[dataengine.42019.618651678240].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerScatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Sales and Profit by Customer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (Region)]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Profit:qk]' value='84' />
            <format attr='tick-color' scope='cols' value='#f0f0f0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Profit:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9c0824</color>
                <color>#bd1316</color>
                <color>#d11719</color>
                <color>#df513f</color>
                <color>#fc8375</color>
                <color>#cacaca</color>
                <color>#95aebb</color>
                <color>#6795ac</color>
                <color>#3e7d9d</color>
                <color>#1c688d</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='dotted' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Customer Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Region:nk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.1534254550933838' />
                <format attr='mark-transparency' value='198' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern-only' value='dashed' />
                <format attr='stroke-color' value='#c0c0c0' />
                <format attr='line-visibility' value='on' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[sum:Profit:qk]</rows>
        <cols>[dataengine.42019.618651678240].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DaystoShip'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Days to Ship by Product for </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[qr:Order Date:ok]</run>
            <run>&gt;</run>
            <run> of </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[yr:Order Date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Min' name='[min:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Delayed?)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[twk:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_6401103171259723:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Customer Name:nk]' direction='ASC' using='[dataengine.42019.618651678240].[min:Order Date:qk]' />
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Product Name:nk]' direction='DESC' using='[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Delayed?)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' field-type='quantitative' major-origin='#2014-09-28#' major-spacing='1.0' major-units='weeks' scope='cols' type='space' />
            <format attr='height' field='[dataengine.42019.618651678240].[none:Order Date:qk]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Product Name:nk]' value='300' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Customer Name:nk]' value='116' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order ID:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
              <size column='[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Order ID:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Customer Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#666666' fontname='Tableau Bold' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Ship Mode:nk]&gt;</run>
                <run bold='true' fontcolor='#898989' fontname='Tableau Medium' fontsize='11'>Æ </run>
                <run bold='true' fontcolor='#686868' fontname='Tableau Medium' fontsize='11'>- </run>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='11'>&#10;&lt;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&gt; days to ship</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Product Name:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Product Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Customer Name:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order Date:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order Date:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order ID:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order ID:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Product Name:nk]</rows>
        <cols>[dataengine.42019.618651678240].[none:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='Order Date' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='height' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='43' />
            <format attr='width' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='true' />
            <format attr='text-orientation' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='-90' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='10' />
            <format attr='text-orientation' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Segment:nk]' />
              <color column='[dataengine.42019.618651678240].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Forecast Indicator:nk]&gt; Sales</run>
                <run fontcolor='#555555' fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;, &lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;&#10;Sales:</run>
                <run fontcolor='#555555'>Æ </run>
                <run fontname='Tableau Bold'>&lt;[dataengine.42019.618651678240].[fVal:sum:Sales:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='244' />
                <format attr='maxheight' value='244' />
                <format attr='minwidth' value='1483' />
                <format attr='maxwidth' value='1483' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[fVal:sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='OTE'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#906800'>Estimated Compensation:</run>
            <run bold='true' fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
              <range granularity='1000' min='0' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Avg' name='[avg:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[OTE (Variable)]' derivation='Sum' name='[sum:OTE (Variable):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:OTE (Variable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[avg:OTE (Variable):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:OTE (Variable):qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[avg:OTE (Variable):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='173' />
            <format attr='font-weight' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='font-weight' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[Multiple Values]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='font-weight' field='[Sales Planning new].[Multiple Values]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[Multiple Values]' value='16' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[:Measure Names]' value='260' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='height-header' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value='#cc721e' />
            <format attr='font-weight' field='[Sales Planning new].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[:Measure Names]' value='12' />
            <format attr='text-align' field='[Sales Planning new].[:Measure Names]' value='right' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sales Planning new].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Sales Performance vs Target</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
            <datasource caption='Sales Target' name='dataengine.42019.622799629629' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='SUM([Sales])-SUM([Sales Target].[Sales Target])' datatype='real' name='[Calculation_5144658905056067585]' role='measure' type='quantitative' user:unnamed='Performance'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([dataengine.42019.622799629629].[Sales Target])' />
            </column>
            <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
              <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([dataengine.42019.622799629629].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
              <desc>
                <formatted-text>
                  <run>Used with &quot;Sales Target&quot; data source</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5144658905056067585]' derivation='User' name='[usr:Calculation_5144658905056067585:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.622799629629'>
            <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
            <column-instance column='[Sales Target]' derivation='Sum' name='[sum:Sales Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Category:nk]' value='20' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='false' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='9' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Category:nk]' value='9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='0' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='palette' id='refline1' value='gray80' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' value='Sales above Budget?' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' />
              <lod column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_5144658905056067585:qk]' />
            </encodings>
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' z-order='2' />
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' z-order='1'>
              <reference-line-value percentage='80' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'> - </run>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>Æ </run>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;</run>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium'>Æ </run>
                <run fontcolor='#666666' fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales Target:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.622799629629].[sum:Sales Target:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Difference:</run>
                <run bold='true' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>$&lt;[dataengine.42019.618651678240].[usr:Calculation_5144658905056067585:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[yr:Order Date:ok] / ([dataengine.42019.618651678240].[mn:Order Date:ok] / [dataengine.42019.618651678240].[none:Segment:nk]))</rows>
        <cols>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='ProductDetailSheet'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='None' name='[none:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6861103170623145]' derivation='Sum' name='[sum:Calculation_6861103170623145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Discount:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State) 1]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Postal Code]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:City:nk]'>
            <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:City:nk]' to='&quot;Yuma&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' included-values='in-range-or-null'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:State:nk]</column>
            <column>[dataengine.42019.618651678240].[none:City:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State) 1]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[sum:Discount:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order ID:nk]' value='120' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Ship Mode:nk]' value='116' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Ship Date:ok]' value='88' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order Date:ok]' value='88' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Customer Name:nk]' value='140' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Tableau Medium' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[dataengine.42019.618651678240].[:Measure Names]' value='#333333' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Medium' />
            <format attr='font-weight' field='[dataengine.42019.618651678240].[:Measure Names]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>Customer Name:&#9;&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[:Measure Names]&gt;</run>
                <run fontcolor='#555555' fontsize='9'>: </run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[Multiple Values]&gt;</run>
                <run fontname='Tableau Semibold' fontsize='9'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order Date:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order ID:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order ID:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Ship Date:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Ship Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Ship Mode:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Ship Mode:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Order ID:nk] / ([dataengine.42019.618651678240].[none:Customer Name:nk] / ([dataengine.42019.618651678240].[none:Order Date:ok] / ([dataengine.42019.618651678240].[none:Ship Date:ok] / [dataengine.42019.618651678240].[none:Ship Mode:nk]))))</rows>
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='ProductDetails'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Sales and Profit by Product Names</run>
            <run fontsize='9'>&#10;Year: &lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;, Month: &lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;, Product Category: &lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Category,YEAR(Order Date),MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[mn:Order Date:ok]'>
            <groupfilter function='level-members' level='[mn:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[mn:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[Action (Category,YEAR(Order Date),MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='true' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='45' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Sub-Category:nk]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Sub-Category:nk]' value='99' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='131' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='2' />
            <format attr='stroke-color' id='refline1' value='#555555' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#f0f0f0' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Product Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Category:nk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[dataengine.42019.618651678240].[sum:Sales:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Regular' fontsize='8'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt; &gt; &lt;[dataengine.42019.618651678240].[none:Category:nk]&gt; &gt; &lt;[dataengine.42019.618651678240].[none:Sub-Category:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Regular' fontsize='11'>&#10;&lt;[dataengine.42019.618651678240].[none:Sub-Category:nk]&gt;: &lt;[dataengine.42019.618651678240].[none:Product Name:nk]&gt;</run>
                <run fontcolor='#de934c' fontname='Tableau Bold' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Tableau Regular' fontsize='9'>&#10;Sales:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Regular' fontsize='9'>&#10;Profit:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#686868' fontname='Tableau Regular' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='229' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] / [dataengine.42019.618651678240].[none:Sub-Category:nk])</rows>
        <cols>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='ProductView'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Sales by Product Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='40' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='98' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='normal' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Sales:qk]' palette='blue_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[dataengine.42019.618651678240].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='4' />
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Order Year' />
            <format attr='title' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='Order Year' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <text column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Medium' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt; &lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Medium' fontsize='9'>&#10;Sales:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Medium' fontsize='9'>&#10;Profit:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f0f0f0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] / [dataengine.42019.618651678240].[yr:Order Date:ok])</rows>
        <cols>[dataengine.42019.618651678240].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='QuotaAttainment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Estimated Quota Attainment Results with These Assumptions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
              <range granularity='1000' min='0' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary]' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Max' name='[max:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Person]' derivation='None' name='[none:Sales Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Achievement (copy)]' derivation='Sum' name='[sum:Achievement (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0440925131659539]' derivation='User' name='[usr:Calculation_0440925131659539:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4120925132203686]' derivation='User' name='[usr:Calculation_4120925132203686:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Total Compensation]' derivation='User' name='[usr:Total Compensation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 50\%&quot;</bucket>
              <bucket>&quot;50-75\%&quot;</bucket>
              <bucket>&quot;75-100\%&quot;</bucket>
              <bucket>&quot;100\% +&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='Sales ($)' />
            <format attr='subtitle' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sales Planning new].[usr:Calculation_4120925132203686:ok]' value='false' />
            <format attr='text-format' field='[Sales Planning new].[sum:Achievement (copy):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[usr:Calculation_0440925131659539:qk]' />
              <color column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' />
              <lod column='[Parameters].[New Quota]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[max:OTE (Variable):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
            </encodings>
            <reference-line axis-column='[Sales Planning new].[sum:Achievement (copy):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='New quota &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[New Quota]' z-order='1' />
            <reference-line axis-column='[Sales Planning new].[sum:Achievement (copy):qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[Parameters].[New Quota]' z-order='2'>
              <reference-line-value percentage='50' />
              <reference-line-value percentage='75' />
              <reference-line-value percentage='100' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[Sales Planning new].[none:Sales Person:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[Sales Planning new].[usr:Achievement (variable) (copy):nk]&gt; Quota Achieved</run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='9'>&#10;Total Sales:         </run>
                <run fontcolor='#000000' fontname='Tableau Bold' fontsize='9'>$</run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[sum:Achievement (copy):qk]&gt;</run>
                <run fontcolor='#666666' fontsize='9'>&#10;Compensation: </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[usr:Total Compensation:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sales Planning new].[usr:Calculation_4120925132203686:ok] / [Sales Planning new].[none:Sales Person:nk])</rows>
        <cols>[Sales Planning new].[sum:Achievement (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sale Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Sales by Geography</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_9060122104947471:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_9060122104947471:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Postal Code:ok]' direction='ASC' using='[dataengine.42019.618651678240].[sum:Profit:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' included-values='in-range-or-null'>
            <min>-2.7000000000000011</min>
            <max>0.5</max>
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</column>
            <column>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Sales:qk]' palette='tableau-blue' type='interpolated' />
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' min='-0.5' num-steps='6' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Book' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='Sales' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f7f7f7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Postal Code:ok]' />
              <lod column='[dataengine.42019.618651678240].[none:State:nk]' />
              <size column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:State:nk]&gt; - &lt;[dataengine.42019.618651678240].[none:Postal Code:ok]&gt;</run>
                <run fontcolor='#555555' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit Ratio:</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Tableau Light' indent='1170'>Æ &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Sales: &#9;</run>
                <run fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit: &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#898989' indent='1170'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3314917087554932' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[Latitude (generated)]</rows>
        <cols>[dataengine.42019.618651678240].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#906800'>Estimated Sales:</run>
            <run bold='true' fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0440925131659539]' derivation='User' name='[usr:Calculation_0440925131659539:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[usr:Calculation_0440925131659539:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[usr:Calculation_0440925131659539:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='171' />
            <format attr='font-weight' field='[Sales Planning new].[sum:Sales:qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[sum:Sales:qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='font-size' field='[Sales Planning new].[Multiple Values]' value='16' />
            <format attr='font-weight' field='[Sales Planning new].[Multiple Values]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[:Measure Names]' value='228' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value='#cc721e' />
            <format attr='font-size' field='[Sales Planning new].[:Measure Names]' value='12' />
            <format attr='text-align' field='[Sales Planning new].[:Measure Names]' value='right' />
            <format attr='font-weight' field='[Sales Planning new].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sales Planning new].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sales by Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Product Category - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;Florida&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_9060122104947471:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_9060122104947471:nk]' member='true' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='true' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#d3872a' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Segment - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;Florida&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_9060122104947471:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_9060122104947471:nk]' member='true' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run fontcolor='#555555'>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.790607750415802' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='ShipSummary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_6401103171259723:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Early&quot;</bucket>
              <bucket>&quot;On Time&quot;</bucket>
              <bucket>&quot;Delayed&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Shipped Late&quot;</bucket>
              <bucket>&quot;Shipped On Time&quot;</bucket>
              <bucket>&quot;Shipped Early&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
            <format attr='border-width' scope='cols' value='1' />
            <format attr='border-color' scope='cols' value='#ffffff' />
            <format attr='text-align' value='center' />
            <format attr='border-style' value='none' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='true' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
              <text column='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' />
              <text column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='12'>&lt;[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]&gt;</run>
                <run fontsize='12'> &lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='normal' />
                <format attr='font-family' value='Tableau Book' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='ShippingTrend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Shipments by Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Delayed?)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Shipped Late&quot;</bucket>
              <bucket>&quot;Shipped On Time&quot;</bucket>
              <bucket>&quot;Shipped Early&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Delayed?)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status)]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' value='29' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='Number of Shipments' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='true' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' value='48' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='On Time?' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Order Year' />
            <format attr='title' field='[dataengine.42019.618651678240].[qr:Order Date:ok]' value='Order Quarter' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
                <run fontcolor='#666666'>&#10;Week of</run>
                <run fontcolor='#555555'>Æ </run>
                <run fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[twk:Order Date:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Shipments:&#9;</run>
                <run fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='211' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[sum:Number of Records:qk]</rows>
        <cols>([dataengine.42019.618651678240].[yr:Order Date:ok] * [dataengine.42019.618651678240].[twk:Order Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='18'>Executive Overview - Profitability </run>
            <run fontsize='14'>(&lt;[dataengine.42019.618651678240].[State]&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
              <calculation class='tableau' formula='0.59999999999999998' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
              <calculation class='tableau' formula='0.064000000000000001' />
              <range granularity='0.001' max='0.25' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' hidden='true' name='[Sales est (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
            </column>
            <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9321103144526191]' derivation='User' name='[usr:Calculation_9321103144526191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales per Customer (copy)]' derivation='User' name='[usr:Sales per Customer (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;Florida&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42019.618651678240].[:Measure Names]' value='23' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[:Measure Names]' value='8' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Regular' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='false' fontname='Tableau Medium'>&lt;</run>
                <run bold='false' fontname='Tableau Medium'>[dataengine.42019.618651678240].[Multiple Values]</run>
                <run bold='false' fontname='Tableau Medium'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='What If Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What if Forecast Based on </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[yr:Order Date:ok]</run>
            <run>&gt;</run>
            <run> Sales (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;</run>
            <run> Growth, </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> Churn)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#353535'>Change the Growth Rate and Churn Rate to better understand their impact on sales forecasts</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
              <calculation class='tableau' formula='0.59999999999999998' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
              <calculation class='tableau' formula='0.064000000000000001' />
              <range granularity='0.001' max='0.25' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='SUM([Sales])-SUM([Sales Forecast])' datatype='real' name='[Calculation_9330126204734562]' role='measure' type='quantitative' user:unnamed='WhatIfForecast'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([Calculation_5421109230915137])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9330126204734562]' derivation='User' name='[usr:Calculation_9330126204734562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[:Measure Names]' value='124' />
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-width' data-class='total' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='1' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-width' data-class='total' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='1' />
            <format attr='border-width' data-class='total' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[:Measure Names]' />
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Region:nk]&gt; &lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;</run>
                <run fontcolor='#353535' fontname='Tableau Medium'>Æ </run>
                <run fontcolor='#898989' fontsize='9'>&#10;Actual:&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Forecast:</run>
                <run fontcolor='#555555' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Difference:</run>
                <run fontcolor='#555555' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>$&lt;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([dataengine.42019.618651678240].[none:Region:nk] / ([dataengine.42019.618651678240].[none:Segment:nk] / [dataengine.42019.618651678240].[:Measure Names]))</rows>
        <cols total='true'>([dataengine.42019.618651678240].[qr:Order Date:ok] / [dataengine.42019.618651678240].[mn:Order Date:ok])</cols>
        <subtotals>
          <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
          <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Commission Model'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Sales Commission Model</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_12' value='solid' />
          <format attr='border-color' id='dash-zone_12' value='#d7d7d7' />
          <format attr='border-style' id='dash-zone_66' value='solid' />
          <format attr='background-color' id='dash-zone_66' value='#00000000' />
          <format attr='border-color' id='dash-zone_66' value='#acacac' />
        </style-rule>
      </style>
      <size minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='63' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5257' id='62' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='1036' h='77778' id='54' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='5257'>
              <zone fixed-size='1004' h='77778' id='2' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='5257'>
                <zone h='3465' id='4' type='text' w='100000' x='0' y='5257'>
                  <formatted-text>
                    <run fontalignment='0' fontsize='11'>Enter new quota, commission rate and base salary to estimate sales and compensation</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='57' h='6810' id='72' is-fixed='true' type='layout-basic' w='100000' x='0' y='8722'>
                  <zone h='6810' id='5' param='horz' type='layout-flow' w='66667' x='0' y='8722'>
                    <zone custom-title='true' h='6810' id='9' mode='type_in' param='[Parameters].[New Quota]' type='paramctrl' w='22442' x='0' y='8722'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>New quota</run>
                      </formatted-text>
                    </zone>
                    <zone custom-title='true' h='6810' id='11' mode='slider' param='[Parameters].[Commission Rate]' type='paramctrl' w='22112' x='22442' y='8722'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>Commission rate</run>
                      </formatted-text>
                    </zone>
                    <zone custom-title='true' h='6810' id='10' mode='type_in' param='[Parameters].[Base Salary]' type='paramctrl' w='22112' x='44554' y='8722'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>Base salary</run>
                      </formatted-text>
                    </zone>
                  </zone>
                  <zone h='6810' id='73' param='horz' type='layout-flow' w='17577' x='82423' y='8722'>
                    <zone fixed-size='309' h='6810' id='71' is-fixed='true' type='empty' w='17577' x='82423' y='8722' />
                  </zone>
                  <zone custom-title='true' fixed-size='175' h='6810' id='57' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1 1]' type='paramctrl' w='15756' x='66667' y='8722'>
                    <formatted-text>
                      <run fontcolor='#555555' fontsize='10'>Sort by</run>
                    </formatted-text>
                  </zone>
                </zone>
                <zone h='67503' id='64' param='horz' type='layout-flow' w='100000' x='0' y='15532'>
                  <zone h='67503' id='74' name='QuotaAttainment' w='49339' x='0' y='15532'>
                    <layout-cache fixed-size-h='935' minwidth='222' type-h='fixed' type-w='scalable' />
                  </zone>
                  <zone h='67503' id='6' name='CommissionProjection' w='50330' x='49339' y='15532'>
                    <layout-cache fixed-size-h='915' minwidth='238' type-h='fixed' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='38' h='4540' id='68' is-fixed='true' type='layout-basic' w='100000' x='0' y='83035'>
              <zone h='4540' id='69' param='horz' type='layout-flow' w='49314' x='0' y='83035'>
                <zone h='4540' id='75' name='QuotaAttainment' pane-specification-id='0' param='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' show-title='false' type='color' w='49314' x='0' y='83035' />
              </zone>
              <zone fixed-size='565' h='4540' id='55' is-fixed='true' leg-item-layout='horz' name='CommissionProjection' pane-specification-id='3' param='[Sales Planning new].[:Measure Names]' show-title='false' type='color' w='50686' x='49314' y='83035' />
            </zone>
            <zone fixed-size='104' h='12425' id='66' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='87575'>
              <zone fixed-size='358' h='11469' id='14' is-fixed='true' name='Sales' w='30222' x='495' y='87814'>
                <layout-cache cell-count-h='2' non-cell-size-h='43' type-h='cell' type-w='cell' />
              </zone>
              <zone fixed-size='380' h='11469' id='13' is-fixed='true' name='OTE' w='32039' x='30717' y='87814'>
                <layout-cache cell-count-h='2' non-cell-size-h='43' type-h='cell' type-w='cell' />
              </zone>
              <zone h='11469' id='70' type='empty' w='36749' x='62756' y='87814' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Customer Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_15' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_15' value='solid' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='6729' id='9' type='title' w='100000' x='0' y='0' />
          <zone h='93271' id='4' type='layout-basic' w='100000' x='0' y='6729'>
            <zone h='93271' id='21' param='vert' type='layout-flow' w='100000' x='0' y='6729'>
              <zone h='14337' id='1' name='CustomerOverview' show-title='false' w='100000' x='0' y='6729'>
                <layout-cache fixed-size-h='112' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='78934' id='22' param='horz' type='layout-flow' w='100000' x='0' y='21066'>
                <zone h='78934' id='3' name='CustomerScatter' w='40834' x='0' y='21066'>
                  <layout-cache minheight='197' minwidth='184' type-h='scalable' type-w='scalable' />
                </zone>
                <zone h='78934' id='8' name='CustomerRank' w='45128' x='40834' y='21066'>
                  <layout-cache fixed-size-h='15957' minwidth='240' type-h='fixed' type-w='scalable' />
                </zone>
                <zone fixed-size='170' h='78934' id='15' is-fixed='true' param='vert' type='layout-flow' w='14038' x='85962' y='21066'>
                  <zone h='6213' id='14' mode='dropdown' name='CustomerOverview' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' w='13378' x='86127' y='21305' />
                  <zone h='12903' id='18' name='CustomerOverview' param='[dataengine.42019.618651678240].[none:Category:nk]' type='filter' w='13378' x='86127' y='27518' />
                  <zone h='12903' id='17' name='CustomerOverview' param='[dataengine.42019.618651678240].[none:Segment:nk]' type='filter' w='13378' x='86127' y='40421' />
                  <zone h='7766' id='27' name='CustomerScatter' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='13378' x='86127' y='53324' />
                  <zone h='38193' id='19' type='empty' w='13378' x='86127' y='61090' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Tablet' />
      </devicelayouts>
    </dashboard>
    <dashboard name='Order Details'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>Sheet Name</run>
            <run fontalignment='0'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_10' value='solid' />
          <format attr='border-color' id='dash-zone_10' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='600' minwidth='800' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5496' id='17' type='title' w='100000' x='0' y='0' />
            <zone h='94026' id='7' param='horz' type='layout-flow' w='100000' x='0' y='5496'>
              <zone h='94026' id='5' param='vert' type='layout-flow' w='100000' x='0' y='5496'>
                <zone fixed-size='77' h='9200' id='10' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='5496'>
                  <zone h='8722' id='13' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='29650' x='495' y='5735' />
                  <zone h='8722' id='14' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='13872' x='30145' y='5735' />
                  <zone h='8722' id='15' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:State:nk]' type='filter' values='relevant' w='13872' x='44017' y='5735' />
                  <zone h='8722' id='16' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:City:nk]' type='filter' values='relevant' w='13872' x='57889' y='5735' />
                  <zone h='8722' id='8' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Category:nk]' type='filter' values='relevant' w='13872' x='71761' y='5735' />
                  <zone h='8722' id='9' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Segment:nk]' type='filter' values='relevant' w='13872' x='85633' y='5735' />
                </zone>
                <zone h='84826' id='3' type='layout-basic' w='100000' x='0' y='14696'>
                  <zone h='84826' id='1' name='ProductDetailSheet' w='100000' x='0' y='14696' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview'>
      <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
        <title>
          <formatted-text>
            <run>Executive Overview - Profitability</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_18' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_18' value='solid' />
          <format attr='border-color' id='dash-zone_18' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
        </column>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='17096' id='32' name='Total Sales' w='100000' x='0' y='0'>
              <layout-cache type-h='fixed' type-w='fixed' />
            </zone>
            <zone fixed-size='352' h='56774' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='17096'>
              <zone h='56774' id='1' name='Sale Map' show-title='false' w='81292' x='0' y='17096'>
                <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
              </zone>
              <zone fixed-size='197' h='56774' id='18' is-fixed='true' param='vert' type='layout-flow' w='18708' x='81292' y='17096'>
                <zone h='10000' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='17948' x='81482' y='17419' />
                <zone h='12742' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='17948' x='81482' y='27419' />
                <zone h='12742' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='17948' x='81482' y='40161' />
                <zone h='10484' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='17948' x='81482' y='52903' />
                <zone h='7742' id='23' name='Sales by Segment' pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' show-title='false' type='color' w='17948' x='81482' y='63387' />
              </zone>
            </zone>
            <zone h='26130' id='22' param='horz' type='layout-flow' w='100000' x='0' y='73870'>
              <zone h='26130' id='8' name='Sales by Segment' w='49810' x='0' y='73870'>
                <layout-cache minheight='367' minwidth='242' type-h='scalable' type-w='scalable' />
              </zone>
              <zone h='26130' id='10' name='Sales by Product' w='49810' x='49810' y='73870'>
                <layout-cache minheight='367' minwidth='246' type-h='scalable' type-w='scalable' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
            <title>
              <formatted-text>
                <run fontsize='11'>Executive Overview - Profitability</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='320' minheight='320' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='36' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='10313' id='33' type='title' w='100000' x='0' y='0' />
                <zone h='89687' id='12' param='vert' type='layout-flow' w='100000' x='0' y='10313'>
                  <zone fixed-size='386' h='89687' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='10313'>
                    <zone h='89687' id='1' name='Sale Map' show-title='false' w='72714' x='0' y='10313'>
                      <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                    </zone>
                    <zone fixed-size='182' h='89687' id='18' is-fixed='true' param='vert' type='layout-flow' w='27286' x='72714' y='10313'>
                      <zone h='19375' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='26086' x='73014' y='10938' />
                      <zone h='23749' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='26086' x='73014' y='30313' />
                      <zone h='23749' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='filter' w='26086' x='73014' y='54062' />
                      <zone h='20314' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='26086' x='73014' y='77811' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Product Drilldown</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_13' value='solid' />
          <format attr='background-color' id='dash-zone_13' value='#f7f7f7' />
          <format attr='background-color' id='dash-zone_20' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_20' value='solid' />
          <format attr='border-color' id='dash-zone_20' value='#c0c0c0' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='14' param='horz' type='layout-flow' w='99670' x='0' y='0'>
              <zone h='100000' id='12' param='horz' type='layout-flow' w='99670' x='0' y='0'>
                <zone h='100000' id='10' param='vert' type='layout-flow' w='99670' x='0' y='0'>
                  <zone h='5496' id='9' type='title' w='99670' x='0' y='0' />
                  <zone h='94504' id='5' param='horz' type='layout-flow' w='99670' x='0' y='5496'>
                    <zone h='94504' id='3' type='layout-basic' w='99670' x='0' y='5496'>
                      <zone h='43593' id='1' name='ProductView' w='86794' x='0' y='5496' />
                      <zone h='50911' id='8' name='ProductDetails' w='86794' x='0' y='49089' />
                      <zone h='94504' id='20' param='vert' type='layout-flow' w='12876' x='86794' y='5496'>
                        <zone h='6213' id='26' mode='dropdown' name='ProductDetails' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='12546' x='86959' y='5735' />
                        <zone h='7766' id='22' name='ProductView' pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='color' w='12546' x='86959' y='11948' />
                        <zone h='7766' id='23' name='ProductDetails' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='12546' x='86959' y='19714' />
                        <zone h='71803' id='24' type='empty' w='12546' x='86959' y='27480' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='12'>Product &#10;Drilldown</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='380' minheight='380' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='14' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                  <zone h='100000' id='12' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                    <zone h='100000' id='10' param='vert' type='layout-flow' w='99400' x='0' y='0'>
                      <zone fixed-size='76' h='20000' id='27' is-fixed='true' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                        <zone fixed-size='222' h='20000' id='9' is-fixed='true' type='title' w='35083' x='0' y='0' />
                        <zone h='20000' id='26' mode='dropdown' name='ProductDetails' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='25188' x='35083' y='0' />
                        <zone h='20000' id='23' name='ProductDetails' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='39129' x='60271' y='0' />
                      </zone>
                      <zone h='80000' id='5' param='horz' type='layout-flow' w='99400' x='0' y='20000'>
                        <zone h='80000' id='3' type='layout-basic' w='99400' x='0' y='20000'>
                          <zone h='80000' id='8' name='ProductDetails' show-title='false' w='99400' x='0' y='20000' />
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Shipping'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>On-Time Shipment Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_22' value='solid' />
          <format attr='border-color' id='dash-zone_22' value='#f7f7f7' />
          <format attr='background-color' id='dash-zone_22' value='#00000000' />
          <format attr='border-color' id='dash-zone_26' value='#c0c0c0' />
          <format attr='border-style' id='dash-zone_26' value='none' />
          <format attr='background-color' id='dash-zone_31' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_31' value='solid' />
          <format attr='border-color' id='dash-zone_31' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92459' id='35' param='vert' type='layout-flow' w='88947' x='0' y='7541'>
            <zone fixed-size='53' h='7288' id='19' is-fixed='true' name='ShipSummary' show-title='false' w='88947' x='0' y='7541'>
              <layout-cache type-h='cell' type-w='fixed' />
            </zone>
            <zone fixed-size='270' h='33214' id='1' is-fixed='true' name='ShippingTrend' show-title='false' w='88947' x='0' y='14829'>
              <layout-cache minheight='130' type-h='scalable' type-w='fixed' />
            </zone>
            <zone h='51957' id='3' name='DaystoShip' w='88947' x='0' y='48043'>
              <layout-cache fixed-size-h='30300' type-h='fixed' type-w='fixed' />
            </zone>
          </zone>
          <zone h='92459' id='37' param='horz' type='layout-flow' w='11053' x='88947' y='7541'>
            <zone fixed-size='80' h='92459' id='31' is-fixed='true' param='vert' type='layout-flow' w='11053' x='88947' y='7541'>
              <zone h='12903' id='15' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' show-all='false' type='filter' w='10393' x='89112' y='7780' />
              <zone h='15173' id='16' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[qr:Order Date:ok]' type='filter' w='10393' x='89112' y='20683' />
              <zone h='15173' id='34' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='10393' x='89112' y='35856' />
              <zone h='6213' id='27' mode='checkdropdown' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Ship Mode:nk]' type='filter' w='10393' x='89112' y='51029' />
              <zone h='42041' id='33' type='empty' w='10393' x='89112' y='57242' />
            </zone>
          </zone>
          <zone h='7541' id='10' type='title' w='100000' x='0' y='0' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='0'>On-Time Shipment Trends</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='330' minheight='330' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83333' id='35' param='vert' type='layout-flow' w='78861' x='0' y='16667'>
                <zone fixed-size='270' h='83333' id='1' is-fixed='true' name='ShippingTrend' show-title='false' w='78861' x='0' y='16667'>
                  <layout-cache minheight='130' type-h='scalable' type-w='fixed' />
                </zone>
              </zone>
              <zone fixed-size='80' h='83333' id='31' is-fixed='true' param='vert' type='layout-flow' w='21139' x='78861' y='16667'>
                <zone h='15757' id='15' mode='dropdown' name='ShippingTrend' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' show-all='false' type='filter' w='19939' x='79161' y='17273' />
                <zone h='15757' id='16' mode='dropdown' name='ShippingTrend' param='[dataengine.42019.618651678240].[qr:Order Date:ok]' type='filter' w='19939' x='79161' y='33030' />
                <zone h='15757' id='34' mode='dropdown' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='19939' x='79161' y='48787' />
                <zone h='15757' id='27' mode='checkdropdown' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Ship Mode:nk]' type='filter' w='19939' x='79161' y='64544' />
                <zone h='17881' id='33' type='empty' w='19939' x='79161' y='80301' />
              </zone>
              <zone fixed-size='53' h='16667' id='19' is-fixed='true' name='ShipSummary' show-title='false' w='100000' x='0' y='0'>
                <layout-cache type-h='cell' type-w='fixed' />
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='dashboard' maximized='true' name='Overview'>
      <viewpoints>
        <viewpoint name='Sale Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[dataengine.42019.618651678240].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[dataengine.42019.618651678240].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
                    <field>[dataengine.42019.618651678240].[none:State:nk]</field>
                    <field>[dataengine.42019.618651678240].[sum:Profit:qk]</field>
                    <field>[dataengine.42019.618651678240].[sum:Sales:qk]</field>
                    <field>[dataengine.42019.618651678240].[Latitude (generated)]</field>
                    <field>[dataengine.42019.618651678240].[Longitude (generated)]</field>
                    <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>32216</value>
                  <value>&quot;Florida&quot;</value>
                  <value>-2445.6608000000024</value>
                  <value>39133.327999999994</value>
                  <value>30.273900000000001</value>
                  <value>-81.582999999999998</value>
                  <value>-0.062495599658684862</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
              <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sales by Product'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Segment'>
          <zoom type='entire-view' />
          <highlight field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Sales'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='dashboard' name='Product'>
      <viewpoints>
        <viewpoint name='ProductDetails'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42016.671153020834].[usr:Calculation_0561103150105895:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='ProductView'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42016.671153020834].[sum:Sales:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='dashboard' name='Customers'>
      <viewpoints>
        <viewpoint name='CustomerOverview'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='CustomerRank' />
        <viewpoint name='CustomerScatter'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device name='iPad' type='Tablet' />
      </device-preview>
    </window>
    <window class='dashboard' name='Shipping'>
      <viewpoints>
        <viewpoint name='DaystoShip' />
        <viewpoint name='ShipSummary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ShippingTrend'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='worksheet' name='Performance'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[usr:Calculation_9951107165644870:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Calculation_812899745105993729:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Commission Model'>
      <viewpoints>
        <viewpoint name='CommissionProjection'>
          <highlight field='[Sales Planning new].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='OTE'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='QuotaAttainment' />
        <viewpoint name='Sales'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Order Details'>
      <viewpoints>
        <viewpoint name='ProductDetailSheet'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='70'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='188'>
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[none:Segment:nk]&#10;[dataengine.42019.618651678240].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[none:Forecast Indicator:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Forecast Indicator:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='What If Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='radiolist' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card type='caption' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CommissionProjection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[Sales Planning new].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[New Quota]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerOverview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerRank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:AdhocCluster:2:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerScatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[Customer Name &amp; Region (clusters)]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='DaystoShip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Customer Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order ID:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Mode:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_1331103172136889:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:RowID:ok]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='OTE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductDetailSheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:City:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Customer Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[none:Order ID:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
            <field>[dataengine.42019.618651678240].[none:Product Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Segment:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Date:qk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Mode:nk]</field>
            <field>[dataengine.42019.618651678240].[none:State:nk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[dataengine.42019.618651678240].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductDetails'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[:Measure Names]</field>
            <field>[excel-direct.41946.598980972223].[mn:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductSub-Category:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductView'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductSub-Category:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:State:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='QuotaAttainment'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[New Quota]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sales Planning new].[none:Sales Person:nk]</field>
            <field>[Sales Planning new].[usr:Achievement (variable) (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sale Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:PostalCode:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales by Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_0351103145857149:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:State:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ShipSummary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.41946.598980972223].[:Measure Names]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ShippingTrend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ShipMode:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[tmn:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[tyr:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='275'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Commission Model' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V4xkWXrn97v+3vARGSa9q6rOqmo3Pd3jSc6IS4orCZLAlYDVg1YQBAkQ
      BD0JelhJkMBXaR8kyEBagTMExSV2KQlcLrB0S5FckkN2T8+0qerymZU+MyLDu+udHrJsV1VW
      ZJbvih9Q6M6Ic+/94sY5N87/fOYIcRzHjBnzmiK+aAPGjHmRjAfAmNea+wZAHMd3/n2ZVqs1
      0gmPOseoHHnsqOe+Y8f9dj2UKKDTHdz/WujR6gwe3n7MV4Y7AyCOY/7sj/+ATz/9hItXVh9o
      +NFPPnrsycz2Pn/8J3/Op598Qntgn9ioS5e+ePSbocsXVx+07wGCIf/d3/+vORi4QMw//j//
      AX/+6doj235+8UvndDp8dOHGyDaPeTWR7/2j2erwnX/lVzA0GWfQ4eLVNbrdPj/4pb8FQOSZ
      /MVff4wAvP+dn+PiT/4KNZHm9Nm3yad1PvrJ5/zgV/51dBHiOOKnH/6YWBDJVhYw91bxk1ma
      1SozU1N0hg4fnCnzZxd2SYs2Rq7MsNPkuz/4JYZDi2F7n48vrpPL5zm3PMmHP71ENpfj3XdW
      sIYmw84Bn15agyji/W9/k3/5R3/I1OwMTqTy3W+8C8D733yPa5evkX+zQrK0iCLCztpVdlsD
      olji2994mw//+m8wdBE3TLBz8wq7jQHIOt8+N/ncv4wxz587vwCCIPB3/p1f5eInH/Hnf/UR
      CBDFEU5jndqtmcDa539DL9DQBIuPPrmGaZogKSQTKgBeFKMIh23dwT6DMM03v/0dtlavMuhZ
      vPnee+gJja+99x52v03oWBRnlzm3UCY7tUw5AV0rpN1uE7gutueSSmeIAw/TcTHSGSRC2p0u
      n/30M977znf5+rlZLlxdB8Xg6+9/A7vfufPh1PQk/uCA61dXOf/2eQAurW7y7W99kxRDLnzy
      Mem5N3n/a++gSSIffvQxiiJz/YtPsf3x4tjrwH1ToM2dPT74xjfotep8+uGHLL75DilDvdO4
      ODnNRLHEu1//Dl87N8/5d95juazx4SfXAXj37Dx//cllHKuPFepY/Tpmv00kqg9e+TFIeprv
      fvs77Fz5GYNY59vf+Q6drcvUBz4A5VKGnd0DtrZ3KRYLjzzPXDHJhd0+5dShDYYMnYFFvTNg
      crJMY3+PbqeFG0ZUKpOcWjnPL//yL6FJwrFtHvPqIdzrB+i16mzsHrBy7hy6FHPlyjUqkxVS
      +TJWv02hkKe+v0Nz4HH2jVO0D/aodWzOnz2DeKu/dBpV9uo9Vs6+gW92ublT59y5FYbdDulC
      gUG3Sy6Xo91uk0lomKGMIfj4kk7sDFCSWcx+l3wuy9qNaxi5CjOVAhtr1xGNPIszJdqdAYVC
      lp2NNdBzzE0Vabe7FAp5urfOTxTQ7plkkyqtvkMho2F6ApmEwvVrVynPnqKQSVDf38YMBPLZ
      PNm0zvWrV8mWZ5kqJGkPXAq59Iv6bsY8B4SxI2zM68zYDzDmtWY8AMa81owHwJjXmvtWgT7/
      5GN2qnXiKCKKIpqNOtGt/z/0pEZ3PKq3X7v73v3/oij80t8RURzTaDSIorvH3br6A+e7fd0o
      iu/YE0URjjUkCO9vZw2HRI+wKYqiO8d3mg288O7n4SHXi+OYZn0fL4RarXrntfAh9t1/Lw6P
      r+5tE0QPtr/9r1Gv3/f6vTaEYUjk9Kn3HIbD4QN2hWFIFIU0ms077x1+d9F9n3N3d/tBW+HO
      +/e+5zs2jVb7oZ8tekj7+Nb3eOeaX/pvp9HAj6JD+++0vWvDy8Z9jjDXdRAFgS8+/5RA1Ajs
      Ln4U8PnHPyM3vYAc2Lzx1rs09zbwbQshkePG9atMlSukc3k8BNKaQd6AnWYPiEimigR2C8v2
      iEUFq9+Cc++weukT1PwsH7xzlsC1uHR1jUImQdf2MRSZ7qCP5/hkcgWE0KI7sEjpOulMGlGC
      asemaAiYsU5aERDlGNu0UVQFyw3JFqfIyjY7dZusFvDFjT1mSkkKMz5rFz9HyVX4hW+9y4d/
      +ReohRkUvwdqmqQC/eGQNwvTdNsNqvtVJidLfPzRp6y8eYZWP2A6I/LF1TW+9Yt/m/bmJSKj
      SAqTi2tVzp2ZQ2tW+fGPP+KNt94hQEQTQiRJZHF+jitXLrO8sEDXcTGMFHkt5KNPvmBhfo5a
      x+adxTyXGwKzaRFR8GkdtEkWk6Sys1y/8DGTc6fotOsUcylurm/zC3/732Lr0k9IFOeRnBaX
      t1qcXZ7m5tULXFndYn5pCT+Sef9r59levcyFjQbnFsu4loWen8S3BiTzRQ72tujZIYQevuci
      oWJHJlGokMtn6Xa7GLpOY2+TUC9QSst4sYKBg5iZJBkNuHCjysxEgolIwOvVsS2PSFTQpADP
      DXjj7fcxlBfU0x/BfVMgQRCI4pjcRJliIUOxOEEcxZQqMyzOzVCemiWbNFD0JKcWZ/ADgYXl
      M5xeWaHRaCMOG2RKFaIwJoojYkSatR0Gtn/rAiLFQgHfHSIbeWQhYDgcIggCwqEBxFGEIAhM
      zc5TKZfJpgzSuQkqlTKzk0ViBFK5IjgDjOwEZqdJyOHxURQjSgpLy4uIcQyizNLSIkPToZxP
      kZsoEkcR+VKF00vzBPYAOV1AEiIKpUny2RRRFIJwuKYrCgIIIp1Oj/mZEkoiB3YfD5kzZ8+R
      0RVKlUm6zTq9ocNELgkItNpdFuZKOL7EqeUFCkkNJ5IRZZWJXAbhzucUAYn55dNMTc9SMEJ8
      OY0iHN4DRU8yV5lkfmmebu2A0vwyiiKS0BVk1WDl/JskFJHK1BSN+gFDyyWXSSAIArKq88a5
      88xOTeL2W3gR9C2XXCaJnkizOFfBC0JuP5ZFUSSO48P7GMdIisbCwizT0zOIAkRhgCTLZCfK
      nDm1SLZQojSRozQ5RatRp2c6lLIp8qUicRQjCAKHgVgCiXSO2aki4Uv4E/DMlkHj0GO/0WFm
      svLINlHoMzBdspnUszDhpaG2s0GyNEdalx/f+CUk8m1aA49SIfuiTXnqjP0AY15rxqtAY15r
      xgNgzGvNrQEQs7+/j2v1cYLRDzb7Xfzo2Rj2Iuk0a1Qb7SPb9Hs9wuju7DH0bAaWe+QxvV6P
      6BWacUaBx9XLl2h1hyO1r+9XOUb3eSm4o8ouf/JjMrkJyM7h9TvkJjIMuz0KhTxz5QwXrqyB
      IFGZmqLdswjsPma3zdT59whb26TKp1maLb7Iz/J0iByurO7xwTvLfPTRR+gydPo2siKhyDqW
      56AIkJooooYbiIk83eo6i4vzHHRdnGGXCJk49Hjrg+9w5eO/ZHphmc2tXVy7y+lTp9mv1lk6
      9x4zxZdb/Ht2l5sbu3RNj5weE4gq7a5FuZCgO/D44L1zfPjhzzh7boUbN25gKCl8MWRjq4bk
      DUkk0+jJJJW5U+QSL9n65y3uTIGylQXMdpV+u0Gj2SZ0TWLPojbwcYY9Aj9gYNncXFul0x8S
      +g7p3ASh3eeLK6u0u70X+TmeHoJM7A3Zqx7gegH9botcPkcmk6bZ6JDPZMmkDdrdAbqucu36
      daLAZmtrn25vQBj6NNsDKhNZbD9C0hJ4/To3b26SL5bwXIv17X3iOHzRn/SxCIKAKIpYZpfL
      l6/Q6lm0q1tsbO3Q6vSJBBGrV+fyF5e5ubGJE8Ssr15jc2cfUU3w5rnT3Li5S/Yl7fxwjFWg
      YFBnoydzZvbRsfdjxtyLPWiz33Y4tTD9ok15JHcGQBzHdLtdstkMQRghiyLxLYeNKEkIt9qI
      4ldfN8dxTBTHCHFMBMiSRHzLlR/FMeKtJ+PrwGH4RYwogiBIiAIEwaFTLAhDZFEkjGNkSXrR
      pp6IOxqgtnGdT9ZqLM/kCMUkkdXBE3RCu02ykMFuCyy+eYZy7uWetz4Nht0WW7U2Xr+Bjc73
      vvV1Vj/7C7adNELosTw/x+LC7KG38yvOlQufoGZLDOpVlGyRM7N5Pv3sKoph4HsuupHECSK+
      9633eRXvxp3HWK4yg2Y3CeQUu3u7qHoSXREOhXHg0Wq10ZTjpza+iiQyOVRFQJQkojjGt3vs
      1DrIWpKJTIrNKx9T7Xsv2sznQiqdYm9vByOdRyYk8D1K5Qqm7VEu5fFjmWxCfykD3UbhzhQo
      cC0uXlvn7PIMzb5HzhAJ5AT+sE2mWEGMBYLQJ5lIvGibnzm91gHbB12mS1k8NNIJlZSuYAci
      QhzQ63QoViaRxFfxmXc8eu06ViijRg6ipuN4EDhDpqYn2a81KedTdKyAqdKrqQ3HoRBjXmte
      DyU3ZswjGA+AMa814wEw5rVmPADGvNaMB8CY15rxABjzWjMeAGNea+4MgP3tdT755BM6A+fW
      K4dlOOI4oNvtP/IEYfhgVGMUeNQO6hDHNPa3uX5zi4d6G26VG/kygWezu394fBjeLblxzxXo
      do4XfXqvnWvXLnHp6o374vkfcgT7e7WHfr57sQc9HD8kDCPM1gHd2wkVgcunn/yMn/70Z6xt
      bj/mWnfpNqt0zZN5mQ/vU4zV7+C+wMD8OPS4+Nkn/PSnP6Vn3s2R+PK93N3fP2wfhVy/8gXN
      EfMORuH2tTrdzpHtpF/7tV/7NYAbq+ucO38OXfT46acXEQT4o9//F5SmZ/Fck/Vr17i5uUm9
      uo+ey3P94kX6ts9f/+m/QE0XqO+uU20N0XC4cOkypi9QSstc22ozlYbtxpAw8On3OrjDHpeu
      3kCIXH7/T/+K6cky1y5fwolk8pkUm9evcGWrxlRW4vd+/88R/T4fXlilXEhx6dIlJCODZ1ts
      b6yyub2LropcvHSF7Z096p0+WuzyxZUbpJMan31+kb5p89Ff/QWSnmYin2Vjd5+5rMR2L2Dv
      5jVMX6BV3WS/NcD3HDIa7HaG1Ld3+JsPf0w6P8HNa1fxBIVsQmRnv8vW+iqKCJblYboN/uif
      /zW5lMSl9W2iECYmChQUi0FiHrexxs7+AcgJ9jevU2sPcfpN1rZrpJSYC19cJpEvY6gSl65c
      onHQJqnGXLpynWRC4/OLl9ESCfqdAYN+l1Zjj9Ubq+zV6lhuTHXrOutbVYLuFn9+YY/pfAJB
      Vbj02WfYoUB1e43NzW0SCY2LX1whkS5gaM8uRFkQJbIG2FKGnBrw+cVLRIj88R/9IaXKFOur
      12gPXLrdFtOTk9y4dIHC3GnSusi1Sxepdy2sTp3rq6tUa3VsP2Z3/TqbuzXymQQXLlxA1NKs
      XvqU3YM2Cj6Xr90kk01w+eIX2K7Pn/3xn5CfnMF3LdoHe9zY2Mcg4OL1VdwACmmV7d3W3V8A
      xxqwubmJaZp4fkQk6aysrFDKp2g0G8SiTjKp8865ObY36/hxzPrWBounVliYzHNtdY29vV3W
      Nqt88PV3UWUIPItkeoJcsYTdb9HsdKjXD9jeb/LBu2eptnusnD1HQoEwFthYX4U45trqGm59
      i35ssLJyjqWFec6fO4cQ+gixz9r6NvV6Ay8Smauk2a21mFleIaEniCOPy5cvIQQmW9vbFKaX
      8K0hs8unOL00B0Bjf4s/+egKubBHtWOzt7eD4zj4rku1Xif2LQ46JoKicfrMGebKOWzXx3M9
      BEnnYPcK9VqDq5t7eL0uSjrPysp50rrCubffw2w37+sQomrw3tc/oFH9gquXNtnf28V2HDzX
      5YtLlxElgd3tbeLQZu3GJqub67iuQxgGWKaJH4a4nkWj0aFer9MdWLx7ZhK9chqzUydA5K35
      FN04zcr5N3HbdTZXrzPz5vt0D2o4ocCZ6RS7jSF+GOL5/jPr/F9mdWOX97/xDeoHNc6srFDM
      GgRByMb6+p02ph9TyCTAaiHmZsHqUe87nJ4tUZo/Q7fTIBQUlotJfvzxx7iRyM7uDoJqkFYD
      hqZDGHhYpkOIwMZejTNvrDBdylOv12kNbE7lBa6u1Tn19jv0W3UQNerV1bu/AN1WHdcPSaay
      2NYQRTPwrRailkEUYjRVQ9NVcpk0g8GQrumQTqfJJSW6DqhiRCZfopzVWN3cJZktUClPsbt+
      mQuff8G5r3+T6sYqli8wW8py/eY2C8tv0N7bRJREuqZHOp2mUkgjJQp884O3OWj2sbs10sVJ
      tjduIgoCThCRzuRJGRqappJKGiAqJFIphDBE01UmcmlMX2BmsoykJZCJSKsiB12bYj4Lksrb
      Z+bouhB6DuXJaRQhxLR9CkmVzZ19kvkyCVlCiBxMXyDwXWJRplycoLm/z7mvvcVBY8hMKYeS
      ylHbukYyO4GezoHvki/kiQMHT0ygEpDN5XFsH1WBzESFtCHT7ZosLE4zGHrMzc/jdRosvfcd
      FjIyjmTgmj0UPUvgWihGivbBNnYgUC4WyKWTOIKBJgRUd9dpmiJvnT/D+pWrFIt5clPT3Lx0
      kURuglRCI5vU8QSNwBygpdLk0sln2vGjwMePJYpJhS+uXKM8vYg3aBLEIq12j2QqTSGfpZDP
      k9QELnxxFSVVoL2/SagkmMimyKQSoCQQI5/q9jqDQOLts2fodPrMzM4hi5DQNWRVY9Dvgihh
      ux7JVAYVh0AykIQIMfTYbbssTZcwcjlCx6FQyNPa23k+sUChZ2P6Apmk/qwv9VpSr9col7/a
      WzodHNSpVMpP/bzjYLgxrzXjZdAxrzWvZq2+MS81URQdbqD4gvE8D1mWj0xfHU+Bxjwz7EGX
      3XqHpaVF5FvJQ47joGnaQ9NJXbPPbr3L4sLcfclGYRginSDn2DRNfvd3f/dLPqT7Gf8CjHlm
      DDodBuaAZv2AVm9IRhMYWB6yopE2RDxBwTMdDE0klBNktYiJQoqNjW1s22RyahJFEjF7LbpW
      yNmVM8fOwjs4ODhyAIw1wJhnhiAKEEU0mwfsbO0haAbZpI7r2FSrVfarVZKpPO1Gjf1anTj0
      2dreP6yztLODNezTHXoEQUBtfw8vePplCMdToDFfWUzT5MqVK0e2EeJDGA6fXhzGqIRhyN7W
      GsQnH9mqotzn2RQFAcMwRjpW1/XDuaUggfLoY7rdLuVy+UgxFUXRE9cKetJzRLc2F3mSci2j
      2hCGIYlEAlV9eSuFmKZ59zt+BDIclsBLp9P49pD1nSpLy6dQ5cObcJRoiTyL1e0ay4uLKPLd
      mzaqaPF9n8pH/w2atXfsD/c0ictvEf8b/zuXv7jIzOJp+v0eSTnCl1OkDA3P80gmk8jyoyVT
      EARHvj8KT3qOMAwRRfGJBsCoNnied+TcGsAadNitd1leOhTBt9vfHaQxnWadAJlEKk1SV2+d
      20WSFCTpyWfov/3bvz26CHa6HazApn5Qp9FqMzWRpNWzkASRQiFF1wpRQhdV17B8gaUJmWxp
      iu2tTcxBn9LMPLoiYpsDet0eyyvn0eRXQ2b47oCN9U08MYEQubSdLnuNAaXpBaaKX72dUZ4H
      w06XoTmgtr9HtzfAMvsYikJiokg+lcZIJej0XeYrCpv1BsNOm0qpwMC20WWDmbnpJy49U6/X
      RxfBgiBCDJ1Wg92tXVxRpZhL4bsOtYM6+/s19GQas9dib/+AGNje3ESMfarVPYamSb09JAgC
      Os0DTPv5BV09KXEYEgsC5qDHjatXmTvzNkvTE2xsbOG/jJtbvQKIonhHBHf6FtlMhnw+j64b
      bG5uoykqgdun2R3gWn12q1VMN6JSyNAfDJ5LKfkXKoJ932fv//0vUdzWic8hSdJ9ceaCIKCo
      o4X6KrJy+CXlFuAb/9kj2+3s7LCysjKeAt3D7SmQrh8/vivwbLpDj+Iz3nPMNE2uXbt25P14
      4X6A7fm/Q3QCESwgoEoaiUQCy7LuvC5JEoXCaFXKstksmqYd+9pjngxZNSgWRluoeFK+9rWv
      HSnq7xsAvj3k5k6VpaVTaIpIGIZ3BMtt0TLothm6MZl04k6ZxCjy8X0BTTv+ePp/dv8RLbdx
      7OOySp6/t/Afc/3KJRLZAvvbmxTLZSQtiaJqpFPPNtx3zOMJfZftvRrz8/MPzOVN0ySRMGi1
      u4cLDRGkk4mnXnD4t37rt44ngu3AprpfpdPpEIUWSVFBKhYoJNPIaoJ2u8/c3DQ7+/sMWh0K
      U9NEoYndF1laWUB9Csr9OAiEbK+v0TZ9JLFOuzdkODT54OvvIL0G1ZtfZmrVGpPT0xzsbmCj
      EjsWkiIhyAZC5FHOp9nZq1PJGfQDgQQugaLj9QYUpucpF9JPbEOz2TyGCBZFiAW67QPanT6Z
      XI5cIY8oGexsbJBMahC6VOtt8C1qzTr1tsVUpYRlDQmet1gMAyzbIRAkMkqAUZhhfrrEwf4+
      jj8Wri+apKGxublFo9Gk2WyRzOQJPQfLtpFEiVa7gxDaDJwAWZJoNurYtk2+NEnsP5/q2yOJ
      4DgOaDR6lMsTT/Xivu/zP/3R/8DAf3TS/aNISCm+X/6l56IBxiL4QY4SwS9LcIFpmty4cePI
      NiPdbUGQn3rnv833c9+Ck+6X5feRvADJv2cARBKCO1rkoODEED3EkynrR3qGxxxNHMcvRTi0
      4zgsLy+PLoLjKGRrc5Pp+aU7nuDbmOaQRCJJq9Umk9QxA8ilnly0LF/5By/cE/xl4vf+I5yV
      f5era7sszZa4vraBEPpMzi1gJDMY6qu5HdDzQhRF0un0oQjerVIql0kmE/ftIDMcDkml7u42
      FHoegSiiPeGv6Jft+J3f+Z3RRXCjuk9xeo5eY4/GMCAh+sSiQhBLqGLE3IzIxvomS9MT7NoC
      rh7RcUENHfRciZnKV2Cb1FvUdrfYvHGVrYMZ8qrDtatXWN3c4+zbX2NlaeZFm/dKUKvWmJyZ
      YWftOnIyR2i2UNMlAt9HxOXmjT7Z/AQ+CnP5FLaqUttcwxd1ht0mC2+8RT71ZHnk7XZ7dBGc
      SiXY3Fin3mzTbLbRkxnE2Me2LSRJot1ooBkyzY6JIku02y1sxyGVKyLz1doxuzw5Syqdo5KR
      2a/3+flf+Hkmckm2t3detGmvDMnEoQhO5UukdJF2p0er2aJYKSPGEe1enyAMqDebCCJsb27R
      aDZxrCHtbp8gePZbyd6JBn0RBEHA7u/+V8ju0buyH4UsywTB3TJogiCiaqNFKCqKgvSQ+WG8
      +ANY/MGdv3d3d1lZWTkywO+kWUtP8xxPIxr0OIGMJ/UEPy9M02R1dfXI+/HCw6EvXL3yRDEf
      mqbhunfL74mieN/c8igSicRIKx6NRoPZ2dkHxFRK1e4MoNdtAARBgGEYL/0A0DTt8SL4djh0
      HAVsbm5RKE2SSSePFC1xFOF4HsYT3ADf9/nxsEc/fMqFLLvNx7c5zulqNTK1XcQvdYz//Ns/
      R9o1sUni9Q7ITy6wfvUCuWIFy4epYpZcPj/y9qGv4jLokefyHLb3apRKZVKpQxHs+/7h+W/t
      wXzvL7BjWaiGgXiP/aHn4EYxlulh6DKJZJLA95EVhdhz8QQZReSRn/s3f/M3jyOCq5Rm5jjY
      Wqd2oKHjEOkZ3L6JllDYWr9OMp1n4MW8eWqBfr9Pt75Px4mJ7S4Ts6eZnHi9QodVEXbbAzI4
      9AYehXyGa9dvMLAsdjM5vv/9X3hlQsKfNge1A6ZnZ9levYaUyIE7REykCM0eiqzQ9gXSYoCm
      p+gPO8iiiodIRhOwIwnR91k8NcfW2gaRqpJVBLYDmUxCxRn2kYSYpukgSyKF4gxz08UHHjad
      Tmf0AZBOJbi5vk4mkyOtCOxv1UAPma7M4Ll9uu0OejJHs9GEUwvU9nYOT66mMDsdclNfLSE8
      Cs16jSurbWYSFrZkUt/f5Hs/+GW8wQEXL16mN/Qo517eacKzJJXQ2NjYJJsvIUsCsZHHDwL8
      0MOTdDQ5wrF9An+AG3goqSxTOYPd7W2kRIZyYQJVTRCEPllRQk3lKCg5gmEN03KQhIjlhVma
      PYeTpg288HDo/+vHf4kVnVztf1kEi4Iwcpqeqqojpf81q1UqD9EAv3xmhYnEYdDd2BN8co7v
      A4jZ3dokW5oinXj09U3TZP2eIrwP44WHQy8q8UNr58uigiE93hv7XEIhjNRjQyHGnBxJVTme
      9BeYXVgaqeXZs2cfnxN8mzgM2LglgrOZ5P2ihcMnzL2dwLMsBMNAueeJE0chlu1g2w6God8n
      WohCHC9AV2WiWy6I39v7nYeGQ59JneNfLf9rbO/WmJmc4MbNbbIpDT2VxzAMksY4jv9lx+y1
      2W/1WVqYR74nStj3fRRFwbGHiEoCq9ek70TMTVce8esVMBj4pNPHD0/5zd/8zSM3OblvANRr
      VSqz89S2bnJQ19BFHxcNHZdY0qg22kzmk4hqCrNXRxFUBnFMMZuk1XfJqDA5t0i9ukNnGFIu
      pNjd3cFIZom9ISES3U6LhKEQqiXeWHhctV8Bx7HZWr3KwJVxrQ6DjR1K0/OcP7N47Jsx5vni
      WC6TpTQbW1t02j0mSxncUCKpxFRrNdK5ApNzp+j0esSCys7mGrGiYXV6pApFWq0WaV0EwyAa
      hlzptpldmMZ0Is4szTPKTK/b7Y7uCc6kk2yu30RN5ihkkujJLAlNRogjTDcknVBxXQ/HcbBt
      m1iQWJwp0eoNCMOQZCZPQtdwbZfJiTSxqpObKCMRYpoW5tBifmGBVCaLMsLCSBR67G5tEkoG
      nt1nbuksU6UcB42Tp1COeY7EPps7NaTIxzIHCFqKXMog9D1M20UUJUThMB/btB1c18V1HSYq
      M4RWnzAWGAyGDAcmcejjBgG9bhdZeXqlWE4kgo/vA4ip7e2ipQvkM3cztXzf53/74/+RgT94
      4IiKPsXbufcee+ZxOPRdXhYRHMfxSxESbVkWm5ubTz8nWBDFYzrABCZn5h76zvnkdwnCh/9E
      dczHV5VwIh/7nuoTkhQRyc6dv2VJJJd8eYs3fRV5mcKhZ2ZmRg+H9sw+6/sNlhYX0ZS7ytn3
      PRRFJfJMrFgHp8dBx2R5YfYRoytiMLBIpx8fkvB/f1SnMXja2T93A9amCwb/xb99jssXPiVb
      mqLVbFOeyBBKBggS5dJYTD9tbodDm70W+63Bl0RwjOcFSMT4AlS31hHUJKVShaPIZykAACAA
      SURBVKTxdB9UoigerzCW2zeZXpxhd3ONg3qXucUphqZPNqXTrO2Ry6QQJ07jd7sIsUB1dxMr
      EIldEy2Vpd2ok89lMAMwBLh2+QsmZ+foDx3Or5weSbQ8C+LQp3rQQNF06nubbO/pJFToDywm
      ioVx7vAzwrG8QxG8uUmr1WVpaR5ZDBj2XHrtNlMrb5DJZlA1g6uXL1Eqlxj0BySSOsPhkGQ6
      T+z0kTSDTt+ikk9hBQKCb6KlJ5ibrjzWhn6/P7oIFiXYuLmBJEp4zhAXnWI+QxxFh/NsUUKW
      BGQhpju08DwPz3PJTpRRYg8vOAyqMy0LSYyxnQBz0EeUX/wUZCKfw/QgmUrzne9+i+W5KZr1
      A/zgxc9Vv7LEAZs7B0hxiOfaBK6JG0kEvguihCSKSJKMKEosLC8SOg5hEIKsMTU5RSapY9kW
      UQzWcIDtuHieR6ZQQh9lFWUE7kSDvgjREgQB//M//jMGzsmD4R4MhxbuE7a5pMovvTv10GNH
      FcG7u7u88cYb43Doe/B9nziOn3k0qG3bIxc7/jKmabK1tTWaCL53JeV5EYYhv7gYQHTyEoqa
      KuJ691SHFsXD6hV38KC39dBjfS9BfHvFQ8+Ann+knZZljQfAPQRB8FxCoU/a+W9z5syZ0cKh
      U6kUntm7JYKX7hHBMZ7no8gytuPQbVYZ+DKzU6U7hbFOiu/7zF/7X16KnOD43f8A++zf5eLl
      Naanihy0TRJySLEygxvE4+rQX2KUcGiz22Kv1WdpceFwpxfTJJFMPhCx6bsOsSijKjLOsIsT
      6+TSOqZpkkw+WYGz3/iN3xjdE+z2LaYX59jdXKNaa7O0chpdEnBsi353QKpQZKqYJRqorF2/
      Sn6iSL9vohs6ljlEM1Jook8oafRaTSYnJ+kOHQwlIpYSLC/MPtGHedZ0GgfU9vcoVCrUq7so
      QsD6VhUjlea9d9580ea9cji2x3Qlw40bN+j3TXJpHUU3CF0HzUjihzHuoIFi5DCHJm+8dZ5O
      s40XS3QOHNxIwGw3KEzN0et2UTUDMbKZmF6mlBst6el4IliGjZvryKJEFDjEUcjACYlDHz88
      nG8jSiiyyPTcAkrsE4QRfgRTU1MUcmksyyaOYkLPoW86BL5PIp0nnXgVlhsFFEWi3WoRCxJf
      f/8bTJXzdNpjz/PJCNjYPkCXRSRZQpZlojDAD0M8z2dyqoTrBrhewOL8HFEcYlkmtu3geT6y
      EBOEAaYbMD01RTGfQxQFBoOn52N46uHQxxEtvu+z/c9+Dcnrnvh6iizjfykcWtNGm5uqqnp3
      vjv7LVj4hYe2G3uCH+RphkM/K0zTZGdn5/lWhz6uaLlR/h7BE4hgwzCQfQVNOvwijhsKIY2r
      Q3+lOVZhrNsieHFxCV2RHilaoijAcUISCY3QNWkNQ8oTmROJlj+o/tMTVYe+l1+Z/Dc5kzrL
      zfUNSrkkIRK13S2mZ2fJ5vJ39qgd83wZdpuHnuBbIvheIt/BDERUMUQUVRqNA4r5DJ2BSzaT
      QlYVZPGWcE7cKsAWebTbQ/R0moQ22h4QP/rRj47jCbaYXppj8/plGu0BpXIRBBkFD9lIYfYt
      ZNEBLc2g0WJh5Rxev8nAj/EGDTp2AHaXTKFIoz1EVVQMHRKZCjOV0Z7KJ6Wxv83GTo25yRV6
      vR7VvT2arQ5vnH/7mV97zMNxbZ/pSpYbq2vEUUhCkwlQDgtkGSliWafbaXF25S3a9Sq2axE5
      Po1qFZI6su8TIxALMlIwIFY0Yl9gQtVHHgDD4fA4Ilhgc20dXTeQVRVZVojiiCAMCQKf8mQF
      z/XxXI+F5TMIkYftOLiWheP7qLKMF4Q4ts3s9DTlYhFRkRk8h5IrYRQjhB77+zW295u89947
      ZNMGnW7vmV97zMMRCNjYrpHSVaIoRE1kKWQTeH6E73mIcYQoK4iiQHmyjO/HpAyVdKGAJgpE
      UUwyk6dSzOGFIYqiouv6fck1T2zji84J/od/8r9i+icfILIic9o4S1mfBMbh0C+DCI7j+LE+
      gueBZVns7++/3FsknUq9gf9QESxQUAtIwtEmfjkfYMyLJ45jbNt+0Wbgui6lUukYInjY4+Z+
      ncXFJQz1/o4XxxGDgUkqpeI4It1unUqlSK3WoVjMI4oiiqIwHJqHlYAFAeKIbq+PJCuP3LLo
      D6q/90gR/PcW/hOsWhdP0HCGPcqTU2SyubGofcm5XZ1v2Gke5gR/aR/pL9Pv97Asm1QySSKV
      QgxdGn2HbCaF+gS/iIIgHK8wljuwmFleYPPaFSJBRNUT+EGEjoMnpdCw2dq2KZZXsHpN1k0b
      PwTb7NK1PPIJFS+EIIxJajF9F9K6hpZMnnjPrlarxX6zS0KVabR6LL+xwkx5LGpfBVzHZ3oy
      x/XVVYgjDFUmREEIhihGmv3tbd58/5v0Oi067R7D3ATR9k0EWcWNVZrNFnJoYqOhRBGnz648
      sJr0OCzLOoYIVgQ2126STGaI4whRSVCeyOF5PqHvoYgikSCjyCK54hRBEJBPGxipDCldJYwi
      tESauckSXhiiaxqapqEqJx/FxYkJylNzvHn+PIVsksHgwfTJMS8nAiEb2zUyCf1QLySzFHIp
      8sVJNDFCEkVcP0AhpjwzQ4SAH4QEYYhh6MgieEGMrqkUy5PH7vwj2Xg7HPpFiJYgCPjhn/4f
      mMHDRLDA+4VvYUhHB9w9LCc4n394VOeXyWazIxXRGodDP4jvH+q2l90TXK1Wj2xz59HsOM5R
      7Z4JYRiymDr1CBEMg6DPIHj0/mGGlMCIH/Q8HxX9dy+e542UBxHHMY7jHCmmoigaqcrcUTzp
      OeI4fuIde0a14XmFQz8pD6vqfS93wqGTySTusHvHE/xlEXwvvV4P27JIpVIYqRRSHNHp91FV
      g+QRpeq+jO/7/GH1n53YE/xm5l1+RfsVPv/scyqTFerNLtmkyuzCKdKZHKnE0U937dYU7XGI
      ovjYUuqv6zLoUQw7zVvh0IsPbLnleR5x5CPKxh2B7Dk2saTgWEOy2dx97V3XRdW0kStt3+aH
      P/zh6CLYG9iHIvjqZUJBRNWT+EFIQo6IJIPuwRYzZ97FN7vY/RaNQYGMuEPfkzB0EbPvkEkp
      1Ps+hYTMzNIZEifYPPs4yIpK5Frs7u4xsCwC16DbN6nMLfPO2eVneu0xR+M6PrOTOW7cuCWC
      NRlBELFcD9caUijkaPccyqUimiaTkOHm7gGyKPDF5xeYXVhAIMb0YzIJmepOlbfe/wBDGX2a
      aNv26CJYUkQ2126SSueAGFlLUinmSecmyKRUEFR81yGtKSRKs8iRjx+ExPGhQ8TQVBwvJJUw
      yE2Un3nnB/DMAQECiBKqonJm5RzzMxV6veNvvTrm6SIIt0RwSj/sI8ks+XSCOI6ZKBaRNYOF
      hVk0fHpWgKRonD7zBmldRlEO96abLE8wNT2DJEqoMjje09026YV7gn/4//3DR4jgx1PRp3i7
      /LVxYaxbvCye4OMy7PfQkumnvspjmiYHBwcvtyf422oZpBNuqhGD3lsldu56HSVRQiEz0uGi
      lwLlIUFVggjFs4dlMsY8c1KZZ7epytTU1OieYHfQZb1aZ2Fh+YHpi+d5yEKAHWok9cOOEUU+
      th0S+A7Z3MlEy+zaD1+KnOB7iZUE/Hu/x+Wr1zHyU+zcXKWcT7PbspiZnKBcKr1oE18JBp0G
      +60BxYkCKcM47A+3OsRgMCCVTiMAYeATCwK25ZJOJ2nU9kkVStSr+1QqkzhWD+QUuczxc9B/
      9KMfjZ4T7A1tZk4tsXXltghOoAhg2haW4zM3mWW7OmBiokgqpVHMJ7l25SqKoeNcuchEaQY0
      FXfYJ5XN0a7usXTuXbLJVzDpJA5ptzt0q12KGY3BYMDWzTVqewY//4NfJKW/8B/Plx57MCQE
      et0urjWk326ip7Ns7zWoTCQRZY1mdQ8tmSGRy+G0W5RmF8Fz2d/apDV0kBWFwGph+l0+/eSA
      paVZEqnDCNGRbDiWCFZFNlfXSGUOHUmylqR8a8+vUqkIksLpN5ZIqxKN9gBBlFg+s0Ipn0aW
      dUI/YHp6ksrUDIokYugqtuM+eNVXAUGiVMwzMz3JzuY6gZrj3bfPIYY29lMWYl9VFFVFBDRd
      RxQEHD8kCkN0RUFWlMMaTkaScrmMKknMLZ1GVwT0ZIaYiOlKEUkU0YwkmiKRSWdQjbt98mlw
      IhFsmwMENYF+jOWoh+H7Phv//L9H8k6+YqMoyh2vJIAoCuj6aGmZuq4/3OspKfDOvw/SoR9h
      LIIf5HHh0KM6I58llmXRbB69Y+iJ7raRTJ/IoIdxs/R9gidYiNJ1/T4vtiiKpDOj2ZdKplAe
      JoIBhhZwuLq0P+ihdloPbJN6L1EYIT5iFUMWReaz+Sf20r4qxHGM5z3tgsfHx/d9stns6KtA
      7qDDzWqD4kSJTNJA0/SHipY4DvH9CNd1SadT9Np1UDN0mjUmJydxbAtEmVz28asxn9rDJ9sn
      2HxIxtegc/LzPYRurUamVT9yABxFVtf5+9//W1y7+ClTS2e59OnHVGbm2N0/oJQ1SGSLZPMT
      r6ZWegi3PefWYICiy1ieQDap0+12yGbz9xVJru5u4kQKi3PTdzrqYDAgnU7jOM4TLbPGcXy8
      nGBvOMSPD0MdAsfGNTugJLl5c5uFxQr+nojTO0BKZAgiBQ2HVGESTYrwenvsH7RRVJXAtfCD
      kM9+9jNmFpdIJlPMTI5XTvJJFSdWUSKPzc0t2r0eBDl661vkpxb53gdvv2gTnyrDTpNatw2C
      TrPTYW52hu21a0iJPKFvMbV4Dtt2sHyHzfUbhIJC6Dj4YYSWSJFQI/oDEz9SmSrl6Xaa1Psu
      lbREqrLMZOHxxbFc1x19AEiqioh1ODcWwXI8kopB2tARVRUxilD1BLliGbM/pFisADEg4Nsm
      03OzSKKIrBvIgUcqk0PVdKYrxSe9l18BIm7e3CBuh/hBjKzIJHSdN99+l+bBDhvVr57nWk9m
      WCkX2dmpkc/lMXSdUDcwEgbZXIlQFEhnsiheiO9aIBz2Jl03mJqdZtjaZzgcIClZdnb3SGeS
      5LIqttNn4mlXh34RoiUIAv7pTz7EeYJQbEWR8f17qkOLwsg/m5qqjRT626hVmZqdRTzCMRbF
      EaLw8C9Fk2V+bnH5sT6RVy0cWhBGv9cnIo44qB2QK5bv27BlVEzTpNlsjqYBXoRoCcMQ3RYR
      n0ACqKqM590dQKIgkohvC1uBxXLykVUEUqkjRPA9HAgSi3OLT5QP4I9wf1+lARAEwcgbkp8Y
      QaQy9fDS9qNSLBZHC4dOJBK4gwGkUti9Hrlc7qGipVHbpWMGnFleeGLR4vs+v/9Z6xlskXSI
      JAr8t3/3HXbWrxAqadxeAz2Vw/YjZipFCoXCyOHQhmGMl0HvYZRwaID+oE8mfcRiSBzS7Q0Z
      Dg/7kKZJmD0TUU+SShoo8pMttR8vHHrY5ebeHpJj8tNmh+mFZQ521rGEFGpkkqssEFg2tumy
      vb2O5cao+LgRxIFANp/EHvQJEchNlOgdNNlvdVmeL4BWYGH6RQjhmF63h5qRaTabSEMHz3Xp
      NKoUp2Ypj0sjPlOG/S5XPvsZE9Pz9HoDVM1ACAbESgqz1+NrH3xAp7FHz4YgBlVysds2ke7S
      6/hs7raYq2Tomw65bJq9aotvfeuDkQPnHjdQ7xfBWpKVlRma69dxY5mUoRPGBlktSS5dBEEk
      ErPIiksQ+twq/ICuG+RzRTynT9McIigJanu76FqCwkQe03IpZl9QR4sPoz5bpomuJ8hNzZEz
      JHa31vH8F++s+SrTadYIQjBSaRAlFhcWAGi2QnQjjeBZeEGEKCnMTqexfQVJjDFSEpGk4Poe
      6YRBZqJMfgLi0KOrdvGj6KlFjj7dcOg4ptWsY6TzJPTHzw993+eHv/svMd2Td0RVUfDu9QQL
      AsatjTtEAb537tECahwOfXIbXpXq0J1O5zmGQwsCE6XH79x3L3MzOv4TrAJ92RMsSSLp1F1P
      cMOz4RESoyPEyPLjRXC110VsNY5eBTphPm9W15k8ao485onI54/2wD8wAPr9PpnMUaIlptPt
      MRwOyGQyaJqCZdoIokgikUTTjrcy8PmTeoKth6yfD06+38DD6NZqZDqNE3uCj+KDmTl+deUN
      LlxeY6GS4uJane9+820uXLpBaA2YO3WaSmXygZzaV4VH9SfHcWjUD5icmbtvOrO3s01lZu5O
      8TNr0EdNpk9cDO2HP/zh6OHQAENzyM2rF8jkJmj0XFRFxjBi+paA7Pc59dYHDHoduu0ObgSG
      DL7jEYsx3WaT1c19zpyeodsdkspkadf3efO9b5LSR6vm+zoiyTqKLDDodHCDgM8/+YSD3hDN
      9/jss085c+4dzp2af9FmnohBt8mnP/sJk9PzOJ5HKpXE9UIyCYX9Wp1GdRdJzyDpBudOz1Ov
      7uPFAr1mi1wxR7vRRpFjPFFHi2PiyEFPF/DMAbKRxHE93jx/7pED5FgieNhr4XoRqpFClGB5
      8VC09MwWBU0D+zDISVNgemGBbt9FUURkUSYWIsy+SSGTRs8WWMgWII7wzQSeH8B4ADwS3x2y
      dv06p994A7wWmak5+nbI1957l73q/ktRZ/MkdJo1QhTyhSKpVIrJlIHlQUEGPwg4c/o0rfo+
      qpYiW57Es0yy5SlCz2NpcYGe1UPTDTRFIKUnyaYy2IMGAydAEESMRJpy8cn61QvPCf7dD/8a
      N3oSEazi+Xcn+aJwGIg1CrqhI0nyYYDfEe3q+/vMLiwcHQ16Qg0wmUqzUioDXx0RHMfxfXs3
      vygsy6LX673cOcFSUEcOH500I4syc4nFR77/sMpwhfxTToqPYGVx+ZmvAn1VeFkGQBiGGIbx
      dESwbTt023VypRkM9e6TsLa7RW5yHl0+vIhn9gn1NIY02lPoLxp/cmRhrJSc5j9c/E9ZvXoZ
      JZnHtk0quSRtO2Iilxn5aT/m+XHbcw4P70+B5xKLyn0Vo6u7mwycmNOnFhGFiH7fJpMZbSvU
      RxFFEb/+679+TBE8HHLps58wUZzG9FwS2SKOOaSYz1Db36N+cIAnGBhyxMr5t2h3WpgBDFst
      krksZruFkEjQN31KSYUwCpESKbyhia6qDD2Ps2+9PfIAOUQgl8/hoRH6Lr7vc7C3S6NuUJmc
      Psm9GfOcGHSbfPLxR1SmZ7EjCdFqkSnPIIQhkqaxf/Mac+e/gWNaOB7cvPYFfV9CcC2KxTw3
      tmrMT05QmV0kmzr+rvG+74+eEzzstnCDmGx+gnQ6xelTi2hGivnZSRRVZfnMCrlclol8lpm5
      ecTIRU3kkYSY+aXT6DLIukHCSFCeyFOamqFUzBOHh5WANT3J8uIsx1Ydsc/a6ga+Z7O/u42Y
      zHNqaQExCghfnIQZ8xg6zRqhoDJRKpPLZpEFyOWyRFGMqioQBaRyBYQ4Qtc1ZFlGlDWShk6p
      VCRCpFIpky9WyCSfjcPtTjj0vXm1z4swDPknf/WPsINHr3Koosqb2Xcf+f7DNEAuN1rFgEwm
      M1JE4/7+PqdPnx5Xh74H3/cRRfGl9wT3+/3RNMCLKI8ehiGlxNnHeoJr/qOjRVWb+1eBQpHu
      cLTkEiPwD7/sxywDNTtt7OrekZ7gOIoQHrEKNJXOkB9h/+QwDEeqVv0ontYAGMWG2ytOLzvJ
      ZPLxA+DexIZer0c2e3/ZiTj0cQMB/Z5iWY3aHs2OxZmzp5EF6PUGZEfIAb4X3/e58MSe4Ie8
      NnwGnuB++8Se4F89/zZpIWCz1iMt++y2LYzYpe8ECKLK6dMLzExNEYbhK7cM+jhu9yfHGiAo
      SbR7MrkGvR7JTAbxGRYLOFZhLDj82bj06UcUyrM0TZ8JzSdVmGA4jFENlX5tk/TUadTQxHVs
      djdvsFu3yCghE8Uil66tsrCwQLE8RTH/9KpHvOoksxMIew2yE1m+uFnlnffPsnHQZWt1jQuD
      Jsi/wGThZNtIvcwMuk12treQZYmBFZDPpLBcj7fePItlWtQbNbxYJLJMFF1nY2Ob2bkpRD3H
      2eU5nnRsBEFwTE9wEFMoVsjm81h+m2wujR/GJBI6QRySSGdRZRFd0VGsgFhQyGWSFLMGgR8y
      OT1DLj/BRO7/b+/MouQ4z/P81F6978vsK/adICmZFMNIpsyIio/joySKrTjRyU2U5Pgk58jJ
      Ra7km5zkMrnNIsVyKCnhcRyZCWVZoihSFDeQ2EEAA8w+PUt3T+/dtXRV5WKEzQJmejADzADo
      5656qf67ur+q+v7//d5va1NYjxvl/CJXr13HsXvx+XyU6iaHDh4kEQmzNH9tbbX8MaNUWMKT
      dGTZwBeMkOkNYTQtUkkZ22xSbhgEVAXPFUkMjmA1S/T09hKLRqkZD0eqvuMrwX/+3ruYW8g/
      NFXFvK3c8IYlRydsVOV1g+WFBQaGh+/p+wPguh7iPfQoY/FkR4rPx2UleLfQaDSo1+udm+Pu
      BJogspWup5ok3VGMLooigQ7/RH5FRe6ggV9dUQlpOtK6AfDrUog9iRR6BzXHXR4cuq5vLgBu
      JC2e3aBmaYQDt15Sr1TQw2HkbUxazhuNrSXBrbt0jazfxSxrC9xvEvyvnn8Rb/4app6mMn8V
      wRelUVpE9UVA1ujNpOjpyWy67c+jxN0mVW7QqlcQ9TCaLKx5UTlt4rE4gtBmaS6PP5kg7Nta
      JeG3v/3tzSbBdRZmp/D5ZFZKFqFgBMtocPj4EYxmk5VSgXrTRvNsRE1jeuI6vQMDmKicOLR3
      y0nL40YmleTyik0k5Ge+3KInmaLSMFmcnyS3MM9LL30Rv/b49iGolQvMzs6gyjLFehufWwE1
      jCC56LJKzXQ4fOgws5MTNF2Z0Ox1bC2AbnoI4fCWA2DTSbDlCKiqguoLsjcTp1JsMJCN4zkW
      K+Ua8YgPyxZIJ7N4joHR20c8HqdYbWxpoI8rs7OzzCw2SfpARubTawucePY50qk4ly9P4LqP
      70p2qbAEko4iGwTCEcx2Fb+eRJFU8pUq4VScjN+PCPQPj9F22tRKBTRVx+eT0bfQX7pTdjwJ
      /j/v/RJrK3JoTcMyb6lJRVHEH+hsOtHfYRK8tLDAwMgw0iZLIo9me/FvwjvncUmCNzLH9VwX
      F5Ae8EJaq9Wi2Wzubjm0WXIw7PufBXI1F9O8zRhLBKnV2f4OH4iT7GC6ds522Nc/1JVDbxOC
      KPIwbvo8z0OSpM0mweVf69F6A7dVoS6GCWsClXIF22mTiMcRBI/8ShFJVYh3qMO5wc8ulR+Y
      MdZG9GSStFYXuHQ9RyYeQPIFKRVKjIwO09vbi7SV6aknGEEQ0DSNRqVCq20TjsTvWdO8nJuj
      XLcYHx9FEgXKlTLRcIiW6eDrwFlkPdrtNt/5znc2vxI8PzOF7vMxlSvTG5WotnUCkkVQl1lq
      eOzbd5jl+WlWGzY9kQWWm5AJBVD8vk0HwE7TNzTCar2N1ShieSJGo8rF8+doozDSn97p4T3S
      NCqrzDcsIisL5FsCQUnAsmo4agDNcYllB3BaLYyWwfTkNVqWB06Dos9P25Fo1qoEwjpNG6R2
      G01RaBgNhvYdId6hlbzjOJtPgjVNQ/OHSIZt/FE/fkFndWUefzjFgb4YogA9/UMk222MeoW4
      IhIMBJC0R2/Ou1kt0zc0TGHWouaoHDt+jJXlBZwt5CVd1vCHYwwGbMqrJeIRhVQiQb28gqfo
      hANrC4OeL0UgaGKaBo4oIDsuqi+A5sn0ZFI0rQZOuYksCeh6iJ7+HtjGdqo35dCmuX4vr+2Q
      +95tn//rLz/YUs+trbRIevZgP6noxgnz4uIiY2Nj695L7hY59FYVmpsxx5VledevBJum2VkO
      sNHMwYNI8ARBQBJhK5Y3siTg3RY/kiTy9HjijnK7exEKqB3NmNyQGK/32q3KkLdjHw9zDI9L
      u6ebcmhN0zDKZRpeGz0QI6De/SxQXFlkpVhhdO8+NEmgXC4TjURoGgb+DjTvt2PbNj//dHuT
      YEkUOL4ny9SV8wj+GI1iDjUQoWk4DPZnyGZuOdfJstyRPbogCCiK0rVGvA1BEDaUQ9fLZVqO
      jar5CQf8CIKAY7ZoOCJh/617+GqpgBZKoMkCjtXi2tQMmd5BoqGt13tvKgm2WzWu5KsMhYp8
      uFClJ6ZhWRZlUyAZkNHDSVRMbKPJ7Mw0jXoTXfFYWsmjaxKlfIlAUKdQbxP3iYiKn2a9SGZw
      Lz0d9nXdLkzLxHYKhCK9lItz1FsWn1YKKP4IidDuvWw/TjSrJeYbFumQQX5+hkqjRdjvo2Ya
      SJ7A8mqNob4koigg1ywUCXwKhCNxqvlFZnMu1YUp9EiCleUi43uGMUyHw4f2d1xD4LruugU+
      dwSA4guxf8jPaqFMJhUjm0liNqoE2iKJyA1tf4BAMEizZWJrOn4NXEnHr0nExlOYRgXTa6Ar
      AqLmJ5NJgPjw58cDgSA1W6RRzpEZ2seQ6LC0MMPmC5K73C83kmDTdklme0kCrtXCLhQJBkNo
      gTDJZAJFbGMZFiVLpCcVYeL6NJFwhJGeJMuejeYPoOtBovEk2jYmwLALVoK/9/o7W0qCNU3F
      NG/dQkmSyHOHBzry0uy6Q9//GLZbDm2ZJpKibuvaS6PRwLKs3b0SLIXmUdoGWV8vMTWx6fff
      rSj+UTWSfZJRH1Cjko3O73cEgFEuU/faIOokwmvFxJ7rUqnViN4maTVreUw1SVgT8Nw21yYm
      iKb6SMU3b/P9fvEdimaeF1NfRGk4XJ0tENQcVF+UeDL1wOwwujx46uUyeiSyrny+XC5jt9sE
      /H4azSYCHsnk9nUS2nQSfDVfZSAeZiafo1ipEQxHadWKyKLCTG6FsfER/Bg0ZZui7NGXUJF9
      cRq1CovzUxi1MqIeZHlxmaGxcWzD4MjxIx3VEMzNzdO22hiCyvLyJMVqk5NH9m39KHTZEcxW
      CyUS4sOf/xQt2ktPKkGpVCYU9HHhwiVe+MIXmZ+ZpGbBQDZF23W3PQA2K4awiwAAEXNJREFU
      lwT7wxwYDlCtWUSTYWKpNJ7nsdxuEghGEDQfiUSaiNqmYsus5Isovgzt1gS+UJyh4VHKhSUk
      zYeu+YjH44Q24Qo9MDDAp9dmGB4Zox4vsVwxNn5Tl12LrAjMzcyTzPShaAEK+QLxTJZkSGVg
      YBABGBgew263EfDwEBDWtSnefu47CW7bFojyPVuQdoJt27z28x9gOgZpvYeY2pmp7e3c1Rw3
      vs3muN0k+NdYLwl2XXdDZcHDoNVq3TTwuhf3fbRlZXt6xJrVHlqWwwwww13KGzdAVS0s6856
      gEB+7Z4vG/MxnO66UzxsBEHYFdJwSZIwTbPzW6BWqYQQjaKvcwYplUu07TaBQIBGY60KLJW6
      /3u2X1ypPAA5dAGAFw6m6fWZvHf2KgO9KaamZ4kE/UQTWTK9vdyjVLXLFrmxcl4vldCiUexW
      66ZTR6tRQVCC6KqE3axzdXqKdHaYVHz7PaRkWebVV1/tXA3aNgwE4PT7byP6g8TTfeTn8iR7
      Ilw5f5rDz75EdXmOlYrBSH+Wtuv96p5tJ/r/doZlt/Eck3Cih2zLwrPqTE1eo9Iw6M/u3nE/
      DpiGgQKsLs5wudJE9wVptmoEdR8LxTrPH92LaVuUi8sU8jlsw1hrjC0IuJKO5Jq4osqBveP3
      XWvued5mkmCVyckZIok0su6nWlgmkkrRn41Sr46iiJDtGyKZdRA8Dw92vaOBpKj4NR3HbJDp
      GyIg24TjJUqNx8+IarehKCJzswvEg2HG0v00q1U8XAJ+P72KD0lV0VUNXyBIIhEjNzNFMJ7C
      aLYQPJdINPnAx3hTDr0Tfagcx+H1t05hWPdfEqmoCrZ1pxz6RnOGZFinL3FvQVUoFOpIDLe0
      tMTIyEjXHfo2bNtGVdVdL4f2PK+zleBO/gjbjSiKtCyX1hYaZSueiH2blEIQBVxxbbuRb1Co
      WRwfid31vZIkdfRj30jq1nutIAhbDoCt7mM7AmA7vsduoqOi+BtJy40k2L0taXGtGlVLJxpU
      8FyHSxfPEU0P0pfZvGzhbvzy6oNIgm/RG/dxYiTKB++9SzLTw8pygWDYjyTrjI3vZbBv48be
      NwJgvZmN7Zj52Oo+tmMatNMxeJ63oRy6Viqh/7UkGMBu1pkrlBGsBpn+Mfz62ue1Gg0UTabt
      Sujq9swiffe73+18JfhGElwq5Lm2mkeTdQy3iSRFeWchx5e/8DkMw8BoVTlzOoeieIiKgmc5
      eCIIkoLddjl66MCuMsjyPBfXcWg0W9itEiu2h+SsUG9ZZDNpVHkXDfYxwjIMVCC/OMe1mRwD
      2QQLJZPnjuyj0azRbtVxZq5xbS7PUE8Eo2kRS8axPYdSqcGRw4fxaVsLhE1pgRS/xuTkDNlo
      kHA0imM0WC6APxhgeKAXQRQI+APoup/0eIZSIYfkC+P8ah4+Ggk/5HW8DvFcfD4//kCIVjDB
      yWNHqZeKFMqNXRWojxuKupYEx8JR+npcNJ9OnxZGUlWysRBGJI7k2Az1y/T0pBAdk2rTxqdr
      pJPZ++4Ovxl2XA792hu/wLC3IofWMc1bkglRFAkGby1++VSJvX13n/DvrgTf/xgeFXdoz/PW
      XQne0QBwHIe5ubkt/WCiKN5xLyoIQkd9v2At8b/x/vUOUrPZJBQKrTvO7ShI3+o+Nprx2M4x
      eJ6Hz+fbkcmTTjFNE9M016/l3skAuLFIsZUffTdMP+6WfTzMadBHgU6Ox45Xjmz1jLUdjdoe
      l31sh1PDo9D4rlM6crfYySsArDkILxbqZDMJLNMik13fL9/zPBbnp7FcCbNRIxxPslrIk0ik
      EWSPeDyF0oFCtZxfpGp61CurxBNJisVVkqk0eA7JVHrD0ry22eTa1DyJWJh8qUYsqFK3IBHx
      YzsC6XRyw1XyRqXI1MIKsXCQWtMmpAuYnkI0oND2FNKpe6taPc9jZuo6vYOjeGadiak5YrEw
      taZNUBOwPJlo0Iftrlm03w3baDK/ssrIYD+r+SXy5Qaq0Eb2hWlWi4RiCSRBxh8KE/I/mIqt
      B81Kbo5yyyUVD2Pe5f+14+HeMGzSQY3c0jx1s92RtMIfCKLLAuF0D6srOXqzGRZzCywVq8gd
      nMFcx+L61DSF3ALxbD/Ly0v0ZRLMz89TrLc6chxolIu0bJtCqUoy5Kdqg18VmLx6GUH1dfQ9
      bMvEMExqLZuYT8ZARhZdJi5fQgtsrGINh4N4LtQadQZ7kuRKBpGAjOUpKILL9SuXkfV7G3/J
      mg9dWbvd8fl8hAI+ZF8Eq1kmmkhTL+WZmJwn4Nse5e9OYLkQUEUWZ65iCuqv/S47fgWolQrk
      ijWyqTi2ZRFPptZtmeR5HtevXkIPJzCqJaLJDPmVZVKpDKLoEQjH0DaoCfY8l2a9Rr1pUFld
      JZHOsJLPk0ln8Lw2kWh8wzqHtm0wOTlDKByiWjeJh9auAPFwANt2SCQTG06xNqurTC+sEI+G
      qbVswrqA4alEAxp22yOZXO8K4HLt8iVUfwh/IEA+XyCZiFKpW4Q0sFCIBP1YdptU8u6Llmar
      zpWJSaLxBNgGtqCgeBZKIEqjlCeSSCFLMpKqP7KlqcWVRSoth2Q0hGlZJJOpO36XHQ+ALltj
      OxLf7djHo0o3ALo80ex4DvAkYdv27lwpf4LZ+bq1x4CpiUustuDEkQN4VpNruVX2jQzcfL5R
      Wubq9CJzC0uMj/SQ6t9LKrI5H9UuD4buLdA2kJu5xuXpFdr1HE1HR5Vdrk8tcmDvIGIwy4C/
      TahvlA9/8Q4nTx4nV23zzKHxnR52F7pXgG1BEAT8fh010I+k+NA0hUgsSyYZodx0CEV0SqUK
      sqrQbNSJhjeWYHd5OHSvAA8Bz3OoVhuEQkGq1QrhSLRjd+MuD5ZuAHR5ounOAnV5oukGQJcn
      mm4AdHmiuTkLNLM6xQ9O/+nNJ37/5D+mPzr4wAdwaTrPaz+/dHP7n/3O0x11btwq7al3sM68
      enPb98p/QNA2b+++Wc4uLvBxbv7m9tefevaxTIinp6c5derUze1XXnnljsL4zVKv1wgEgh3L
      NWzLwPEk9A1a994MgLpZ48zCxzef+J3DX2Hi4nkuzU0yPnIITZFYXZ6mf3AcRdORJRlRAM0f
      4K9+/H/ZNz7KmfOXaZkmsUiIsb2HObRvz4YDLdVafHxl8ea2YbW5cv4TlhptXKNCrWny23/r
      S5w7+zEz8wu4jkckEqTUaLFvbA+HDhzs6ID8ddzaIs70Oze3PcdmaX6GN995l3g0zMj4Afbv
      GeP1H77GsWNP8cGpD1E1P4ZhoGoyrifw3HMvkl1HsHY3is0mV/Irdzw2NzvF9GwOo1XGExXq
      5RKtVg05nGLf0CDHj53g+sRF+scOoD0iev1arcbk5OTN7Xa7zUfvvY0XjPPR2z/mS1/+CpLX
      JhCJk4zH+PDDt5idXeYzn30eQZRoGw2iiRTF1VVGhwc5e+EMoiDjuW0yyTTxVIZms4Fhmtim
      Rau+ihJM0lhdYGR0H6KqMXF9gt945rPrjnPddQDP81AUHx+9/ybBYIJEws/5i2exbJtcbhlJ
      hK/9wT8hFonyySenGNl7gmqtTKtR482f/oj+oSEi99Hu3hcKk7/yMXo4TNgnc2ViAk1TOfnM
      Z/n03GmQVDShwS/f+QmZbD/J2PacuVPpNGPje/ApIhfOnULwHPaMj9JsNNizfy8ffHCWo4f2
      4g+FOH/6FG+9/SZf/d2vbFlENjA4wuLiEoLop201SWT6cO0azWabi2ffJRjJcPrjD2mhc3jP
      2LZ8151AC0S5dOUMsXiSqdk5XNvAr+dIPv8Cruui6RqfXrzAfC5HJKjRaNlowQjpeABdDVKv
      LqEFE5w5c4qyYfHMs59jZuIiqysruJLGQF8Vx7X5yU/+H0N7DtOJb+HNAPCpfsYSt87YuuIj
      MRijalj8xlMnmZyaY3i4j2qpRCCSwLYMBDx0RSGZSLH/0HGWFuY4cewFmo06i0tLhDvoHB/0
      a+zpv3UWVRUJfyzO3v2H6cskqbYsRgYHKJZWiYXDFDO9jO7ZS9u2WFlaJBq+P/dnwRdHzB65
      tS3K2O02x44eo7iSIxJPMzTQx9kzZ4jEw1jVCl/76t9lemaesZEhhvoHWcmvbvpzw5rGQOTO
      jpm53CyCpDLa14eg+qiX8mT6T+K2TQrLexjozzD69/8RgvBonP1hzba+p6fn5rYkSQwPD5PO
      rkmsESQkUQTXplypMDKyD92/SjoRZWBoGK9tkcxkWcgt4Q8mMK0Jjhx+Ci0UIaRrBCNxerI9
      9MQj5BbmicXiVOpN+nvS1KoVbMdjtVrdcJzddYAujwSu4yBswvHCc108BMQNKvu6AdDliebR
      uaZ26fIA6AZAlyeabgB0eaLpBkCXJ5puAHR5oukGQJcnmocSAK5jUK8U1nsFtVLuYQzlCcCj
      VlrY6UE8MtwMAM8t8Bf/8Xd5//U/plq/1S9s/tx3qRlQWzpNobC87s6uf/AD7tbrxTEXuPLx
      m4DHuZ/8O957/Y+Zmjh92ytsLr37/S1+lUeLt//067z/+reYm7548zFz9RyTE2fx2hWmPn1v
      3feXZ99mcXHxLs+4XHr3fwDQyJ/lrf/5R5z6+Z9s59BvfZJV5sqZN8A1mbr4swfyGQ+a27RA
      az0fJVnFLl/gL773nxh96msUz/8Ab7LI3n39tFQ/5974N7iOiz91EMfzs//gEa6d/wn+9DMs
      fvyfWWnWSfkcFnPXSI59CSP3Fk2riRJ6BviVYangJ5kZZfr0q8xNvMfgs98AYO7sq0xdP0uk
      73mac29gK32cePHrlAvLDIyffPhH5wHieR6irCLLMj/9b38PredF+mIW58+fIxL7t+SnLpGf
      +HPAodxYE4d94Svf5Mw7f4LlBIgpOeaLHu4zX+bqub9CCw8xmIkwOXUZo7VmFz999nVO/Pa/
      J+KTmTvzKtPTl9DCYyjGDJbnUClV8No1nn3pn/Lh23+G6DY4+vzv8+lH/xs5OEg26rFcMrDb
      HtmISG4lz5EX/5Cli6+xsjTN+NGXuPDOf8EfSZOfOY/XnCS3MIU/cRihegFLVBB8e+jLJkiN
      vYSq7D7Xaelb3/rWtwDwmpQKFk+//C9QVR3HblJYnKKnr4/Bz/xLhNplTCmD4JkMjxwgsf/3
      MAoXaZsVwskRVosLxCM9HPz8HzL9yffp2/9buHaTSrnIyb/5D8gv5ukdOYgvMkpPbx/nPvwh
      jtkgHAnScoLYtWXM2hzJsRfBscn0HWB17mOiIy/T2//oCsDuxfLsp5x8+Y8IhRMInsfy9Q8Y
      O/kKrm8vo3vGWJi4hOzTePrzX6dal4n4ZWTVoS1mKC2dZe/B5/H1vQylDxAih1FlqBamOP7y
      v2Z19hMG9r9AI3+ephsn4NOYufCXHP7Nb5L79Eeoepyjn/8GjXqFdDKCGuxHCh8gplYpFRfR
      YvvwqQqS7DL67D+nMvczBva/RHN1AsuRMFtNBLtAet/fpu0KHDz5WyxcPYXZKnHsi99k7tIb
      6FqMo7/5DXJXP+LgZ38PqQPD4p3gVgAAS1d+xPz1dwklD5Cf/Yjs3i/SN/o0V97/PpnxZ9D8
      aTTdRyjWixrsQVEkgqEAhZUlMoMn6B3ez5XTP+bAyS8zc+mnJAafIxHVmZ44S2bwJOF4mqWr
      bzA18Qn7P/MHeMYChqOS6j9OIBhh8MALzF76MZHscZzmPI6SoG9wjKW5q0TivTt4mLafZvE8
      18//CLQUrcIF9NRRhvZ/npXLP0SLHkTXgoTiWULxARBUgpE4keQIuWvvkhp6hv49f4OZM9+j
      /+jXKE3/DCU0yJ7Dn+Pie98n1nuMZM840Z5jrFz+M5ZXlth/4mUu/eK/MnjsqwRD0bX9IhKM
      ZFBlgfPvvUqk/7McevbvUJh8C9HXS7p3D/5wH5LoIXom5XKZ0aNfpr5yGi0yTmbkWdqrFzDc
      AKFwksG9T3Px3f/OyFP/kEAgRDA+gOCJ1PMX0SMjuzII/j/pfoQEkvlgLgAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Customers' width='192'>
      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
      ZVVY2s1i4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecast' width='192'>
      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
      GZtaoAuEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Order Details' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Overview' width='384'>
      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
      IBAIZin/CxsexfttfxUlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9eXRl113n+znznedJ81AqlWqwy44TO3HiKU5ihyTQzWAenRDgAb16CC/9
      aKbG/cjjgUPIenS6oQfy0kATugO40yEDkAlsB2McD1V2uVyzSiWVStK9uvM8n/P+uKVZurqS
      rq6kSn3W0lq6Z9p733N+d5+99+/3/QmGYRjc5jbfo4h7XYHb3GYvuW0At/me5rYBbEAhm+L6
      THivq9EWDMMgPDtDpaaTSkTJ5bJk8qU1x9WrZWbmIugbvBWXy+XdruqOSCeiTE5dp1zTF7cZ
      9QqV+tpjK+UyBiB3rnoHi2g0hmJxks1mACjm0tSQyeUKOK1WZiPT+P3deLxuauUSiVwFk1BB
      trrxuex7XPuVxGevg2bj6pVLRGZnkFUNfzBEzeclnS+h6EXs3h7SkSmqkoV0voKsl0nFoyh2
      N+V0HIs7SC49i0n1UiqlcXu9xJM5hof6EPa6gTex2CzMhpOUswkihTomsYJRznEtLXGk30ck
      EqO7J0Q4EkMF7B77bQPYCEEQURSZ+UiYSrWOqiqoqoHTYSKTzOPyBnDIdcLzEar5LObgKJfP
      fIfgwNi+MwDDMJBlBUkxMTp2FADRKDETiXNoKMiLz51j6LiFrlA3k1evMVnTMFVimM02iol5
      VNlMKhFFluok5meYT2Wp1HRy+SLVgT7UffIeoagaJs3E1SuXMTQnFrPMoMdMj8VGeG4er9/J
      pcvTdPksxJJF8noV4fYs0PqUy2U0TSMZjVCTTDisJgBEUaBWrSNQI1eqUcxl8fq8KJqVbGIO
      Q7Hh3XcGoDM7PY2vuw/qVQAEdAzdIJbKoVBBs3sxiTUiiRw2TaQuqSTCs3QNDjEzMUH/yCgS
      VTAk4tEIdpebdLZAb09o3/QAYFAqVjDqJeLZMnZNoI6Eze6gVq2iqDL1Wp1oLInf68bQK7eG
      AdRqNbLZ7JrtgiDgcrl48cUXecc73rEHNWsP2WyWWq22a9c3mUyYzeYV2yqVCmfPnuWee+7Z
      tXIB8vk8lUql5eNdLheCIDA1NYWiKHR3d++o/DWvQIahAwKCsH/sejOK5TITN2bW7hAERs0W
      nv7i/zrQBjA/H6NUWjtobRdutxtZVldsKxSK/NVf/dWuG0A0kSSeSrV8/KjFCsDLr72Gx+ls
      vwHkUlGKNYVKrYbLqpIuVPC4HAAU0glEsxOxVsBQrJgUCc2kbdoFlrMJLk3NMTxyBJup/cOO
      16MpHv7zb2+w91v0XxjnM20vtXNcOp8nES/sYglZ4PqKLS5PZ4aHv/7yOT7/2vktnNG4z8aV
      8/zq+x7g0Ud2Vv6KVhqGQa1aJZXKMj07y0BfD6IkMzubo16vY5RzJMvzOCwabnuBcNngyKHB
      TQuZj2c4dvw4c5NXGE+kkcxWKsUKilBEtHuxyVbq5TiJXBFDr2NWTVyemOLwkVHsDg9DfaGd
      tfI2t9mAlQZQK5PI1wn6nSDJhIJ+BAEK2STZiohJk7FrNpx2K6V0FLPV3tIAKBT0cOHcOZx2
      G5JmIRAIYhIhX8ySq0A+M4/Z5mRkdBD0MsV0jtFRDa/XRygY2PT6bk3h8YH1jcRudzA7frqV
      72Lf4nDKGMbu/SKrmopJM63Yppk6MzS8w+vc8N6th93eeBuZraYJ2aw7Ln/FtyoqJg4NDQDg
      dPsXt1utVvwrz8NqGcDbYiGK2cEdJ46v2e7Ec/O/gWVb7bhdPrbyZjfstPE7D9y97r6xsTF+
      6fR3tnC1/Udvvwnf5r8D28bj8RAIrCwgm83yjW/tXpkL/G+j/XxfyNXy8UeOHEEQBP7SZmC3
      73y27ZaYBSoUCly/vvQO29vby2/8xm/wqU99CkEQqNfrSJK0hzXcGZOTk5sOgkVR5PDhw5w/
      f55Tp07x4z/+41sqY/Wkh2EY6Lq+69/b7OwsmUxmw/0+nw+v18uv/Mqv8KlPfWqxrrreWO0V
      xZ0tQnRkpGPoNa5NXKOrfxiz2sIXaujUDZBabFyppHNtvLj4eX5uhnK5tnhTD/LDD/Cf3rjC
      1Viy6TGCIOA4e43U9BSxq5eJDp/iX7/rrdsuUxCEjnxvsfkqMzeKG+6fuzGPpmUolaorjHSn
      D/4CHTGAyMwN/L0DFFPzTMSz+N1WSmWdbC5JIBAiHI4SCvpIF6vItQIiOtPJOiM9Dkq6ykBP
      sOn1a1WDeKy6+DkeS1Ov603OOFh858Y8p2bnWzrWiIZhbhbr+PUdGUCnyGXrK+7dWqpAjnpt
      d+5nRxaxTZrK3OwskXgKqVYglq/jd1hAEpm5PoNmEgmH4/iDISYnxokkszjsZsYvnmcuEu1E
      FW/zPUpHegCnvwvVWkDVVCrVOpqqUC8VCQR78DqdFItFTCYToihy3zsfRlZVapUq8lAPrRi+
      1SZx8h7b4uee7h7OnLt13Jw+9+i95IrN1wEkUWJ4eJhLFy7w+mun+fEf/UCHarcz+gdN2F22
      Dfd7vV48bg9nzv3PXSm/I0+JIAhYrI0pK1lWAJCsNvw3Z7Gs1qXpLLPFAoAiN6qmtHR9OHXq
      Zb7/+78fALvdsvj/rYBTU9AMbfGzxWLh2Wef5UMf+tDiNkEQcNssSMODeK1mXGZtvUvtO0QJ
      FGXjF5FqtUQ6k+ADH2gY9Fe/+tW23ttb4meyUKtx9s03+cmf/MnFbQ888MDeVajNFAt1CoUl
      p3ZZEjl9+gw/8RM/seZYr9eL19vqBPXeM5MvMhVPNzmisa9v6DCvzkT44te/yR0PPMSQ29mW
      8jtiAJm5OaSuLmJT1/C4PZgtFnL5IqLQ+DXLF4o47DauXjpHtljH77EQSVYpl3McPXIETRaR
      FJVypYrdZmO1m9KFRJbqLTToXc21q8VVrhB55mabPTQHh//8xviWXCH01y8gP/Nd/vCHHmtL
      +R0xAL1WYvz8eYxclnypglrJkKrbUBWBSiFFMl3i/gffiaTaGHZKzKTTuFxeyhWVRHSaYlVF
      qGaZSxZ54F33o8n7xAH9NgeejhiAyenlRJ+DXCxCLBbHHerDpzkQRagW7JhjeWRJwmaWmMtV
      GerrR5Ct1GolKpUSYiyGYg8gmCtI63ipdllNSOLB8V7dKr6AimZacoc2my24XOYmZxwcHukN
      YKltHmrpcXsQRZG/ufIqHzp6qG3l76oBGIaBYRioNhvoOi6PH5dnlVOFpQu3r/GvN9iDd9mU
      v6qYsZjNuJxugJvuEQa6vnLxustiwu10LvqVS5JEMpnE4/FwK+APKDicS746druVQNC1uBp6
      kHlPX5B7nQ1jzmQyG96z/v5+ZFnG9Mp3+IGx4ba1fVddIer1ekcCqUulEvPzSwtFfr+f3/zN
      3+Spp57a9bI7QTgcXhE0EovFmJiY4Id/+If3sFbtIR6Pk8/nURSF//gf/2PH79maHuDsa68Q
      GhzD77aTikax+v0tTUU2Q6+WuDIxRd/gISxa+zudS8ks/+IbLy5+VhSZY6X9rWCwFZ78hze4
      eNMVQgCq4Rl+8Vj/3laqTczeKDM7k0cQBKrVdeQbdpk1T2OlUqGUmuOLz3ybwyNHqM9cR1Gt
      WOUaqiNIMRvn7OtvcPSOk+iKhk3SEVU7fd2r/UWXiITnGTo8SjY6y2Q8i81mIpevYpKrqA4v
      mqBSr2aJJ1PogNPhYnr6Bj19vYiyRn93c1eIfLXGG7GVUUWHb6FZoSup7Ir2GdEEcGsYQLmk
      k881HnxjD27ZGgMYOnwUuyZyeHQUj8NGKifg9/sJODXevHAVi8XCyOgIFpuTYFeQq2++xqHj
      g00LcdjMXL54EU2RqVfL1EU3QbeJTD5JLJ7AyOcxWSz4u/pAL5KOxNARqekwFNrcD1gSBRzq
      UlMEQeRWGhNbFXlF+3RVbXL0wUKUQJJorGbuwT1bYwALg5CTdzR8tPuW7bvz5MkVxxqGTu/g
      CKZNpiWtbj8n3Gt7CC/rBUK4Cfi7ObxJxZdz0ufixSfeu/i5MQYY38IV9jd/9N771h0D3AoM
      DJnxBXQUReHlU5332t3RhLogiDidjnbVpS385V/+JYqi8NGPfnSvq7JrOBwORkdHSacbi2F/
      /Md/vMc12jm1Wo33v//9zM/PU6lUOtamzsQDGAalYhHVZN6V+fpabckd+ty5cURR5MiRI20v
      Z694fiZKNJdfs/3l/Dh2u4NnXz29rlvEQeD1aJJLkdjNTzJvXJjA4XDwTIfa1BlXiFiYWL6K
      3+MinS0Q8DrIZPIUCjlCPb2EZ2YJhYJkcnkqhQyaqjAVLXC4z0PFUPG5m/cypeJSQEx0fjfV
      E/aG3ztzmdfCsQ33D80dXJfxp69M84Wzl9dsH+xQmzriU1AqVwmGQkQjEeRqlkvXZtAkEc1q
      4s1TpzHbVC5evIKumEinU4Tno4RCQa5eGWd+/uDe3NvsfzrSAwS6u5manMLr95HMFBgZ9CBW
      SkzNpjh2153MzswxcngYzWyh4nBjc7rIZrL0Dw5Qqm++CmEyiwyNNFYT/QHLbjen4/zcyVGi
      h3rWbFdVBbvdwdfntqKrs7944nAfJx0r3TocDgff7lCbOhMPIMoMDjf8N1yuhlsDZjN33HRx
      OHRoePHYvoFBANyu1pUCZFnA62sYyvHjI5RKpcX4UbPZzKVLlw70mOCBHj+VipNoNIrb7cZm
      awSQaJqG0+mk9Na37HENt89dfjeHLY1pXUmSuHbtGvceH6HeoTbdcm6VH/zgB4nFYkSjUaLR
      xuvT5z//+T2uVXs4ffo0hUKBQCBAIBDA6Wz4xB/UAfBqTCYTX//611FVtWNt6kgPUEgmkdxu
      MtEofv/GK8Zz05OkClX6urzEs1WqpTyhUBCbtbkA0plYih98en1pRFEU8Vye5CB7Bf3Ut1/i
      jUiM6plTPHOANU7X4zdePsf/PHcFaES1vTPR2TiHjhhAtZDhyvw8QrlEJBLGaVGZTZRQFRGr
      SeTSlRu8+33vpmpI9LpVrk5NIgg2KvUKpsQ81ycLyKLB5esR3vfoI6irFt7qukGmsrF6sv2A
      u0XkqzUylRpGrfO+MrtNsVZfce/qHZap6ogByJqV0Z4B4lNXyeSKSJLE4OAQkgS55BwjI4dQ
      JAmhXmYqWmOwtw/J5KZSzlEuZJBEEUlRGDk0tG48gFWRudO3dswgAKqqUjkg8bEbcdhlp16r
      kXJsHDx+UOmzWxbvnSSKmGc7uxrcEQOw+hoO/70DawMZls/x9w2NrHC9wOwCl4uuTXQSj7jt
      /Onj678a9Pf38+SVV7da5X3FU/ffSaVS4ZvCxgpqB5V/fscIHx3uAhriCP/u2usdLX9X4wEW
      AmJ2m2KxyPT09Lr7ZFkmkUisCLQQRZHBwUEAvvzlL3P06NF9PUs0NTVFuVymUChgMplQW3CG
      M5vNdHU1HqxnnnkGu93O2972tt2u6pYJh8OL0oiCIJBOpzsayLSmB5icnKQ35OFGrMxg78oB
      a7WUoyaYMWutdVOC0Ei0YRg6szdu4Ovq3ZV43mrFYGa6mXamSjadW1YvkWx6FoAL56c5fPhw
      26T2doOnr0xzPdl6EgkAVVFxOKYAuPzd1/jnD963L9uYStSYm1t+71beq91mjQEk5ufQ61Uq
      gsqp7/4dnq5+cgUDi1hEViXm43mGR0/gdbTukhubnUZzeCimE0wlc3idJhKZEk6LhK5YsCga
      er1ENBrFEES8/hDJWBSv30uxVKV7E5foSsVgbqb1NDsAszcaBjB9vbnm5n7gf41PtyyNuB7G
      lUv88wfva2ON2kcqWdvyvWsnawzA7/OQyFdx2gwipRpiIkX/8DEi18+hmJ0cGh2iUqjAFgxA
      EARq1RqxaAyTVCeckfBqMpl8jopRIFUV0GsFHIFuqBeYuXyOWMmgWKkxMroVx+jb3GZrrDGA
      vuEjiwPRwaHRxe3eO5bp72/RA9rb1cd8eI6BwX7S2SLdrkZiDXPBjCGZqBSyWGw9qKqGgAu/
      N4QvHsfl9WGSN3/dMltEjp5oPVmCKIr09zciqrKFN7bWmD3gt955kuQ63qDNMJtNBIONeIvn
      v90Bof9t0t2roZl3nuhiu3RMGjF4cyrHbF7y1XGqNxXM7Ku+AAW6e9b6vmyEJAlYbesbitvt
      5vnnn1+hFCeKIl5fo8y33XvXvldSO+S0UdokltrpdCKK4mJbVVXF7W64mpjf9hZMJlPT8/cK
      Vdv43jXD4XAsyrevvr9b4ZaQRjQMqFbXLnYJCDgdHl566aUNFRTe+tb9LyFeqxnrtm85NpsT
      RVbWbevx42uz8+wX8tUa8W0IGNgCFuSbs2HP/f0LPPqBD+I2b93IO2IApUycy9fDrWeJrJVI
      l8Fpba1B+VydM6fWnzl4/dRrVCsHewX18oXNs0SeOfUmQEemndvJJ1+9sMUskWvRXzrD2f/+
      Fb7zsz+65XM7YgDRRJZjx48zc+0yV25mibTJColCEgUNQ6wjCwqC1Un06hk0mxtddSEX5iip
      Ph56+/r5v25zm53SEQPoCvm4eO4cTocdxawT7ApiE+okprIEQwHmozF8/gAunw+plMZid5Av
      VDF7BkDdPBGarCy5Q69AAKfDyek3DrZEhMutIAjN4yLsdjuiKPL6mwerrXf73aSHWx/vLWCz
      2RbHAK+++Q88fnhoW+V3xhfIZOPEzSyRCzNMer3OXXd6kEWRUKhr8dix43ds+fomUyMgRtf1
      FYs9giBw5MgwX/2rnUp77S3dvRoe39Krzep2Ahw6NICiKHz1rw5WPrQfHunlfYHm04oLr3XL
      c4QNDQ2haQ0fr1955Vn+zcP3bqv8WypL5Gc/+1k+85mDnBN+fZZnibRarfze7/0en/70p/e4
      Vu2hWZZIURQZHR3l/PnzvPTSS/zUT/1U28vvSA9QyecRrFZK2cxiouP1SMcjxHJV+oJuosk8
      9WqJUKgLVW3+Cz6RzvHLz79GoNws2drB5TOvXWI8lgAavk3VyMYB8geNP7t8nb+9cm2DvQL2
      01fIzEzzI57d8ejtTEBMYp6JqSJyvY4iCfg8bqbDCRRZxO/zMh9LMHb0CLFkDqdJ4vzF8+iC
      lXK1giSLFLNZzDYHyXSWsbEjyKukVZLlKt+YCvNE/WDP9mzEi3OxFa4Qd+duHeWLs/E035gK
      NzliDiMW5kfuG9uV8jviHSWIKqPHjqFSparrpGNhvP5uPP4Qs9NXuHEjTKVuUK8WmYtnCAWD
      DB8aYai/m1I+Tb6sE52b5kZ4fo00+m1usxM60gM4brrljh6/i1qtejNRXuNXvMt/P9VqDVWR
      GBkdo6YbKLIECDgsPvD5qNdrCKLE0VqjB1nNXX4XL//oe/mTP7i+Zt+twB+/7+0Uig3dI4vV
      wuf+88we16h9fOLe43xsdP1ZIFEUGRkZ4eKFC7z52uldKX9XDUDXdWq11aGKwpptDWnspff3
      anVteKNRryMIrDhusZxaDasi8+CDDxAON7pTq9XKN77xDX7gB35g5w3ZYzRRQFAat0rWdR58
      17sW2+nxePjKV75yYNspC42IvgUUReGFF17g4YcfxmQyoQnQ3xVCE+9ZoY/atvJXbyjms0ia
      dU3cbalYQjObtiTgaxjGOgbQftKlMqfmE+AL8beXG6KxToeT//XNby+m1zzIFPJ1isWF77FG
      T/cI09djCIJApSzx3HPPH9h2XkvnuB5PLH7WNI1nTr3GY489hs1mo1arYbfbsdvtu/IsrTGA
      8Ow0si2AUE4jmBxQKVAyBKRanb5DQ2xnljmXmGcykqC/r596vYZVU8iXqpgUgbogoykKhlGn
      kM+DIGCx2snnstjsdirl8oo8wutxOZnlo996ac126cIEf7iN+u43JieKpJLrB/xcPHeNWHRr
      nqL7if/vzatrpBGN1y/y2x0qf4UBGHqFcCSBnKvic9ipZGIokgVRrLKT8XI2X+Lw4VHmrk9g
      1CrMomESQNeL6KoZk2CmVkpSlzWMeoVqfoJYrojf5yPQ1cMmz/9tbrNtVvYAhsBb7nsH6FVm
      rk/R3TuEJksYN1N3bNcEgl1Brk5cweVyk8wW6Av4kAXI5dPU0Cil41hcPuwOB4JRo1Iso8QT
      eAMBPK7NXSG6bWY+ftfoim0Wi4W/O+DB8AsEgipW2/qzXy6Xi+/8/cFVvXhffwj/stcKRVF4
      9UbnpB5XGIAgKTTCfSWGD7cvSFyUNQ6PNq7nXxbdaLkp8UfQt+J4q9WO27dyWzNCFhP/9MRK
      xQmn04n66hHq9Tr1ep1cLndgs0b6AiqODcZ/oZCTvv4Q9XodSZKIRCIEg81TSu0nHu4N8Db3
      UhevaRpfGh+jXq+vGPSKoogsNx7XdrZx/0VJt4l0Os0TTzxBNptlbm6OL37xi3tdpV0hHA7z
      xBNPULw5Tfq7v/u7e1yjnVEul/nABz5AJpMhHA4v/qVSS6IA7WxjR9YB6tUiV8an6BsawdpK
      PIBeo1wHTWmteheSGX72r/5+3X2SKFFPJ/mnroNr67/4969zIZpoeowsSYiixOwbl/lX+SJ+
      68FIpD0zXWLmxuYqEKJYQJYbRlBpY3xHRwwgMhfl0NgY6cgMk4kMdpsZdJFMPoXT5iKTy+Kw
      2ykZEsXYdRSTlXRVwaOUyBlW3nJitOn1i9U6l5LZDfcbqSS49nfYYzOmMvmm7VuOXihSO0AJ
      tCtlg2KhlfrqQGMatJ3+mx0xAJfDwqULFzCpCnqtii55CDoU4pk45XIJw9CpVOp09/dwMXId
      VZKxCjLVqo7FtnlUmCKJ+DeQPxQFAb16MH4NN8JtUjds3wKiKCIIAhlVRlxHPnK/IskCirJ5
      fQVBWHQBF9rYvo4YgMXl44Rr5aC2Vi5z9OgJTMpKT8977t26+vEdXifP/dC7193ncDhIp9N8
      85vf3PJ19wuffffbNl0F9Xg82Gw2noxcJGg7OElC+gdNeP2bz/RZLBZ8NydGXnipfTEPe/Zi
      LGvamoe/bdeWZd544w2KxSI2m41gMMgHP/jBXSlrv5DJZIhEInzkIx8BGq8Jf/iHB38Z0O12
      EwgEVkxi/PRP/3Tbrt+RHkCv10GS0Gu1xams9ahVypSqOhazSqlUwTB0LBYrm/V48VKFL44v
      aYPKksSFsxf4IX+QI7KMLMt0d2+isLuPSSaqFAqb+cE09tvtHiYnErjc5gORSzibqRGPb9y2
      SqmI2yOt0H4dHh7e8Pit0hEDyEUiGH4/iZlpFFHE4/MzF46iyAI+f4D5+Tj9/T1MTU1i6Aa1
      epFE1qBcLXN87DBGpYhmdZDO5Onv7VrzDjiVyfOJ7765YpvxxiWO33mS93SigbvM3Ex5Q1eI
      tTSOO35HcznJ/UJsvsr1qWZtK3Ho8O7FeXQoT3CNmelpqsk4rq5e5q5eQHD2gQQXzr4Gsg1/
      VxBBVHCYJcqila7+IOVShkJ6nrrkIpW4Rl6XCYVCaC0Mmm5zm1bozCDY42fUbKacD5CMRfEP
      j4GkIgrgd51gJhxHkyWCPhfxfJUurwMkGU2xY7WYySbjqN39SOks8jrxAMNOG//+wSXpFFmW
      eUMtckfg4E59Lqe334TX15rRO5wOVFXF7jgY7hGBkIqibjxL53K5cLl3b1C/qwYgCAKSJCEt
      ZDV0OHE4nKuOMnPE0ZDw0zx+HCu8FRqDZMfNOOKN8ot5LSbe2x9a/CxJEsETY3Q57RQKzcMH
      rVbr4vTa2bNnueOOratS7DYOp4zJ3Nrcfk+PB1VVOXv2LHfeeeeidMh+xWaXoYnki9MpoygG
      w8PDi21p533aVQMQRXFRumI3qa+KBa7X6xw7dgyAWKx5ALnL5VocmD/99NP7UipxK7r+NpsN
      QRB4+umnD4RyxGZtS6cbSfMef/zxxWepnfdpjQG8+MILHD/cy6X5GodCDsw2B5oqU9cFlG0m
      t6gU0lyauMFQq9KIW+S1aJL3/un25vkFYUk5ufLCKf7T//27/JuH7uXfPvL2dlVvx3z4my/y
      Wov5ARbaU3nhFO+fmOaR4b5NzthbpiZKTFxtIfWTAK9+9xUAJq/F21b+mqfRZTcxGSvischc
      PP8GZkcIWTIYOnKM7c7aR+aTHD1+nMj1Ca4m0qgWC6VCBZkCmjuIWTRTLyeIZ/MYeh2rycqF
      K+OMjh3FanMy1Bdqen3dgHIbMkHquoFeq1PbZ4H31bq+5fbputHxjIvbwTAaf5sfCHWMxXPa
      xRoD6O0fIleuYVIl6tUqdruLuWgCq7L9NbOAz8X5c+ewW8wIkoLT5SXkhUIpS6pQo5SbwWyz
      Mzg8CnqJfDLDyMgoLqeD7q7mDz+AXZW5N7g9V2ez2bw4rTrutDMy1Muge4sJEHaZ414nUr21
      cECLpTFgHHfacZv2/0DYZBaxOzYfpwiCgNncGCyb2vgWseZKdpeHhYVpt9uLYRgEu0KbLkY1
      Q7O5uPPE2jSmbnys1QNw4PUE6N/C9Udddv7ovdtLATQyMrI4BvilS6/w6Z/+kW1dZzf5xH0n
      FpXhNuPIkSMIgsAvXXqFe3r2f1xAqFvFYts85E+SJA4fbmQL+vYzqydSts8tJY3YCqFQCKvV
      yqc+9Sl+8Rd/EU3TFnuAdDqN09m+L7ddLJdG3AhRFBkaGkKWZZ566il+7ud+bl+2ZTWrpRHt
      djuf//zn+YVf+IUVxwmCsPhD1c771KGFMJ3rk9cI9Q3tSpbIG7ki/+/piy0da7fNoKgKf/fm
      JU5eneb7jy/lINuvD8yfXJxkKtE8S6QgCLgnGlIppy5c4d/u07as5htTYf7h2tKPl6YoeAoF
      lCZ+Yu28T53JDzBzHUegm2IqxmQyh99jo1CoksunCYa6CM9FCAUDpAtlhEoOWTSYjFUZ7XNR
      NlR6Q+vP/y8QKZT4o/Mb6Uuuj34jzHcmb6wwgP3K1yZmtpQl0h9p3yzJbvP8bJTPL7t3Rq3K
      kx0U8+6IN6gsSeSzWcLROEq9wEw8j9tqQjGrTFwax2xVuX59FofHw9zMNOF4Gr/PzfilS0Si
      B+dm3ubg0ZEewB3qxYhF8Q0NkiuU6bNbMcpFJMnEXW99C4lEgp7jfUiyzOixO+LRtO0AACAA
      SURBVDFbbRTzBXrf8lbK9c1H38c8Dr78wXe1VJdgMIjVYuHfZ6b4+Xfes8OWdYbfeeBuUvnm
      2j+iKDI4MADAf0hvrTfcSz5+1yg/2LM0g2e32fjbP/9Cx8rvWJZI7005CJPppt+HojBoW+vi
      4PE2gh7MN7MatuIFYpYlDi+TTykWi6RSqXWTwzmdTjRN44c/8H66HLbtNKfj9Nkt+JVGxNfr
      r7/OI488suYYURQXA0b+8fe9v9NV3DYBs4Zp2b3TNI3jx48Tjy/1/Ha7HVVVeeaZZ3j3u9cP
      fNout0SWyEpdZzZfXPycTiTIR+bWfVAWeOyxxzpRtbYQLZbJForIksSz//AiP/qjzZPBvf/9
      B8cA0pUqc8vuHfkigcNHODO5NDDuCnVhtVp4+stf4R0PPIi5RbGEVuiIAWQjEaRgkMSNaUKh
      EKIoUa/rCAKIkkS9XkeWJCbHL5Iu1OjtchPL6FSKGQYHB7GaTQiiiK7rSJK8Zk3ibDzNe//i
      ucXPRmSWzz90shNN6wj/8tlXFwfBwitn+f09rk87+fSpiy1nidRfOcsPTc3w3pGBtpXfGVmU
      SoEr589j5HPEEglsYo1wTkRTBSSjwo3ZBI8+9iiCbGE4KDERjiDJTqo6RMNTTOR1JMpMhlO8
      7z3v3pWp1Nt8b9IRA9Dsbo73DZEOzxBPJHG4vbh73UgilLJRVLMLWZLQZIPpVJHDQ8MIip1a
      tUi5XMDQEyianWGLi3XCAfCbNZ44vOT0VXbvfxeArfDe/hCHrBqiIHLhfPMp4YPGvUEPpcPN
      HfZsVhuyIvPd89+lt83jtl01gIVFZpPTCYaBP9iNP7gyNtdpH2BhU6h3gBWeP5oNu82Gz7sy
      vG/14nW/3cIn7jux+DmZTDI5ObnGTXojBEFYEWZZqVRQFKWt8hs74WeOD1Mul5Ekif926dS6
      7VrehnK53BE39HbwA8M9POJrrgrR3d2NzWbj1155jmGnDV3X23ZvdtUVol6vUy6Xd+vyi5RK
      JebnW18oWo3JZCIQWDKyT37yk3z84x/fVJa9U4TD4U1lUQRBoK+v8Uv65JNP8tRTT3Wiajsm
      Ho+T32SKF5ZkXz7zmc/wkY98ZMPgqK2yNkFGLoUh27GY2hdJpNcrXLs2RXf/MGa1/RFKV9M5
      fuW5U9s+X1oVuHP53DiPRGK8Y3h/GMD0ZIlMtrkvkADcmJoC2isduNv8yYVJ/nZicz8uVVGQ
      ZZmrb1ziI20sf40BVKslrs8kcdsUKsUCiXQR2cgxX1B4z4P3bilDzALzc2G6B4YoJueZTORw
      2jUyuSpWzUC2OlFFFb2aI5ZIohvg9viIzc/j8/upIdLf3dyrMV2u8tyN7fcAqzHiKWKFVlUY
      dp9stkY6ubk7dOqmfKJePzj+jReSmS3dOyOWbGv5KwxAr5aYno1jt1m5MRdlsK8Xl8tDIh3H
      5t/+r6HVrHHt6gSSYFAvFyhYbHgdCqlMjGy+AoUCmqbh7e5BqBdIzs0wF82gWGwcPjS040be
      5jYbscIARMW0uHo6MDC4uH0rWv3rYfMEGHP7EAQRwzAWBzDeYBAEAZZtAzeBQA+juo4gitBC
      n3N3wM2Zf7L9hS2TybzinfK3jRiPDK6fuXAvOHrCSqXS3ENMEER6e3sBOHXm4Kxv/sY77uCX
      79j8R87j8WK1Wvnd/9DedFCdyRMsCIiitChwujBjIYoi4qpti/sk6eb/LVwfkEVxwz9Vlgn4
      fGTTaeZmZgj4fCv+3E4HiiQu/n3/hz60r2ZRVn836/2BQTKZIJlM8PDDDxOPxxf/lvvbA3z5
      y19eN9vmXiAJQtN7t/BXKRVRJJH3P/443/rWtza/cIscnJ+KJtTrBunUxu/IkiSiyBCdT1Eq
      Z7HZms8l33nnne2u4o44E0uRzLeSHf6mAobDy7fHpxa3qqqKy7kUkfeV7/z9vnGXKBbqTe/d
      Alkxj6Hn8Hr6OX36j/nwhz/clvI7YgCp+Dxz8wm8Xg/pbAGf20qxWCOXTxMIhoiE5wkG/GSK
      ZYRKHkmWiKSq9AdslA2V7mBzgatiQefKxc0ekBypTIpAaH/r5KzHUy+f47Vwc3mXraCfu7Jv
      3CnCsxWuT7Vi3HCJxutPdH7zhBqt0pFXIKNWxen1kUqlUPQic4kCLouGalaZGp/AbFW5cWMO
      u8tDJDzLfCyB3WFjYvwK0fjteIDb7B6dSZAR6MaIx/AO9JMrlOmxWTDKJUTJxIm7T5JMpOga
      60GSZQ6NHsdstVLMF+g+eTeVFuIBLFaJ43duPEslSRKBQIDTp5Pk8ul2Nq0j/M4Dd5MpFjc/
      cANMmgm3x734+b+kJ9tQq/bQ069hd24+wyiK4mJivO++unk+gVbpWDyAx9eYZdG0mxlfFIV+
      W6MhPt/SK477ZiZH081BaCvxAKIIZsvGrzaCIGBQpqc3RL3u5+LFi7hcLkKhzSVX9gN9dgsV
      belWZbNZstksY2NjLZ0vy/KKcc8/et979o1koqqKTe9d4xgVs9lMItmIeX7Pe9oXE3BLDIIN
      A8rl5sJRpVISh92D3W7ny1/5C8bGDh8YA4gWy+SXqUJE5iJUUwne/vbtqdc9+uij7arajkmV
      K0TzzXs3GyJOs8hLZ8/hs5h43/ve17byO5MfYH4eKRAgMTtDMBBEEkVquo5A4/VkIcft9Ykr
      ZIo1uoMuElmdcinLQH8fFlPzeIB8rs7Z11oZGOWAOV4/PcvY2P4Phl/gXz776opBsDE3zX97
      6K49rFH7+PSpi3zh7OWWjjUmLvGVH/tAW8vvWJrUq5cuYRTyJJJJbGKNSF5EVQRkKszMJXnw
      3Q8hKGYGbRKT8/NIkoOaDrHIDXJFHckocz2S5t0PP4h6Ox7gNm2iIwag2lyM9TjJzs+RSKSw
      ud04u11IIpRzcRTNiSJJaJLBTKbIof5BBNVGrVqiUi5i6EkUzcag2Ym0zsqYogj4A5traaiq
      iqqqTEwdjFjgBd7bH+KwfUlDP2/dH27a7eDeoIdaqXk8gKIoaJrGjNR+/6xdzw8AYL4pZKQF
      uvAFulYeZLeysCnY088KtzfNBjYbXm9z11eTWWJgePNUqA6HA4fDweS0b3EQaBgG1WoVVVVb
      atNe8LMnDq1wh56d9TA3N7foFy8IwoGKAVjOPzrUy3tD7qbH2Gw2XC4X3zE1vFx1XV8hq76T
      tn/PSSMuMDAwgNlsJhwO84UvfIGf//mf36Xa7Zxm0oherxe/388v/dIvHYh8AKtZLY3YKkND
      Q4sP/U7a3jQeIB6O4AwFd9xN6LUKV69eo2foEBa1/Z3O1XSOf7XFeACL+QKSJFJKJQnMtc+V
      ejf47VMXuBxNrLtPu/la58y1tpq635gPV5ie3nrdZ6evLfYCxU0zaG5M03iAWqFMplZFFQS6
      u7u3HYYWnp2lZ+gQxeQ8E7EMLoeJdLaCzQSy1YkmaujVLPPxBLoBXm+ASGSOQDBI3ZAY6G0+
      XZnaQTyAkcvwWGX7i0yd4FQksak04g/uE+e2rVLI6y3FOqwmnVzqNWq17eeGaBoPMBAKYrYK
      zCZ0enYQg2mzaFwdv4LEzXiAuh2/UyGRiZLNVSCfRzNr+Lr7EPQCiZlpZiMpNKuDI4cPbbvc
      29xmMzaNB0jGo4wM7SwewO4NcdwdQBBXxgP4urpoODMvjwfwEAr2MrY40Nnc8N6yjXiAgYFB
      TCYTkUiYP/vTP93SuZ3mTx+/n2Jp/V7K6/Xh8/n41V/55Q7Xqj0MHjLh3iQoft3zBpfGAGfO
      /c9tl7/pC7l7kxmYVhAEAeHmrMvy16il/9c+5FtZql+IB1iNpmmk02mi0Sj33nvvin1mTUWW
      RLxuN+9//PGWy9oLJFFY0z5RFHG73fzN3/wNP/ZjP7apWtx+Zjuv1vF4bHEMsHpl+Pz589Tr
      9ZYySd4SrhCZSpV/mFvrLmwymUjMzRKolTbUlDebzetqiO4nzsRSxLMrV7olScJbMbh4sZEX
      YT9mt2yF8XSO8W25ei+dY7Z7VsQ/vPbq65wMevePAWRjYSbCcQYHBiiXK7gdVgqFEqVyAY/X
      TyIWx+Nxky+WqJULKJLATKLMQJeTmqHgtDd3ibuSyvGzf/vKuvuM2ev82ePv2I1mdYynXj63
      7iDYqFb4v0x7UKE28kfnr7UsjdgqxrXLfP2j/6ilYzviU5AtlBg9coRYeIZ8fI5zV65RKRQo
      lAuceeUU5VqBc29eIF2uM3VtnKvXppBVhfNvnOHq5NTmBdzmNtukIz1AqLuL8fFx3F4PiXSe
      4R4/SrXM9el5Rk8cZebGHEOHBjHb7NQzAWxOF9lMnr6BQSpsvsLXZzPzy/esdQ1WVY1MeGcD
      +P3ATxwd4j1dK7NgipKE02Yj953t5UfeL3zfYBdd4s5S3GqahnNZyOflU5t7BSzQEQMQZY3R
      m77rS+ILNu5xN+IAHEeX0pIOj4wCENjC2DtgMfHRow1lgVgsRk9Pz2JazXg8xOzs7I7bsJd8
      YKibUmmlASiKgqIofP1K9wZnHQze2eXjDmtzNxRJklAUZXHF2OFYmcbWYrGsUPZ7Wam1LIt5
      SwyCFxBFka997Wv81m/91uIMQTAY5NixY3tcs/YjCAJf/epX+djHPrbXVdl1HA4HwWCQb3/7
      2xiGsaloweoZv2Z0xACKqRSiy0U2HsPn3fiVJHxjkkSuymCPj2i6TLWcJxQMYdskj2w+X+fs
      6zkEYPxytM2133vGLxdIJla6C6TT7QuS30s+89plvnSueTyAJIpIskz+0jkA/nP/CB8cG25L
      +R0xgHI2ycTsLGKlwtzsDG6bhRuxPKoi4LSauDR+nYcffZhSVaDXZebi1SsIgp1KvYJZi3F9
      8hqKIjJ+fZ5HH1kbD2DoUC413iPLla0vq+93KmV9sX0L5HIV5IPn/LmGWKnMZKY1sSsj3ZB+
      zJS37/uzmo4YgKRaGDs2ROTKeTKFMvVahb7+QWQJUvNTBIJBRFFEr+aZSNcZ7O1DNvsolzIU
      c0nquoFQ0wkG/YjrrJkIAmiaAAiou+Bst9eoqnizfUtYrSrlW8DWPZpKr635oFUSJSRJomBv
      vAnY1PblUe3I02K/Gc0/dHjtu3jQtzR6Hx5dtd/qBW9zTSAAq03ijrvtiKLIq6/fWgkkAEaO
      WCiVVvZ6qurlr/96fI9q1D7+9VuO8LMjXU2PcbvdK8YA7zvaPv+wXY0H0HV9U137dlAqlQiH
      G4oB8/Pz9Pf3t3SeLMuLmRUBfv/3f59/9s/+2a7UcSfMzs6u+R4FQSCVSi1KhewERVHwrvND
      04nvIxqNbpofYGEWKJ1uSNosX9UPBAKLEx5f+tKXeNe73rViRmgz1vQAqXgU1ebCom3czdRq
      NaSb2p3NMAwDXdcxDIN0MonN6UKW2r/2FskX+R+Xli2YJS+1dJ4kSTiXTal97aVTPPHRIi7T
      /nq5/sbkHHPZDYL+w6kdX1+WpDVTi9D4Pv73n6mt62fVLl6ci3F2y/EY4cX/3K7I4nP4/Eun
      uaja+emH7sdvbW0tYK0BpOIIxRoWTUUwaqSScSSzGZvZQ72SJRJNoCg6JkcXw32t/fqk5ufI
      GzJiLkMincfjMJHIlHCYJWqShlUzYdQrxOIxECQ8vgCJWBSf30exWMLva/4aNJ0t8MlXdr6c
      rk/OEM3vPwP4w/MTbZVGbBV9coaaru+qAXzt2mzLqhCbYVyc4Mu6hcffcuf2DMCoFZmLpJDN
      JVS9Tl0ASZAQ6zXmp+exOOzEwtP0HzmOtIUvpVarYXd7mL8xjVWFG3EdryaSKeSpU6CQkqkU
      M1i9AYx6gesXz5JDJV8sMjg8srVv4Ta32QIrewDJxNvfcR+wkIjO4NqVy1g8IYJjDgRBRD92
      BPGmX3+r+Lp7mZ6aItQdarhChFyIgJJNocsWStkk7t5+TGYTGA68bj/hcARfMNRSCOWIy8Z/
      eeSerbQbaIwB3O6lFdbPz7xJt31/pEVazr956zHiLeTR2i6rv4cFPj/zJoq4uwpyP3F0kAe2
      EQ+wgM/nX3wF+ut6nPseeYRh9/qev+ux4ulaz1f/0JGjK06Q1vHr3wxBEOkfbLgq2GxLjfWY
      boY6ute+fw4Nt77Q4VAVHuzZfOBjMpkQRZEzZ85w8uRJZFnG5VqahUo/9ADWNk6xtYu7A24q
      ld0zTEmS1g15HT82Rnhulp6e3UsWcsTtoLfFvHEWS8MreOH+QSN53sIgWHrHvdx9dASH1rrC
      x/eUwpTT6cTn8/HMM8/g8/lWPPwATzzxxB7VbG+p1+vo+lqHtLvuuovXX399D2q0FlEU8fl8
      K+6fz+dbIY/ynve8Z93ZrGZ0ZB2gkk8zfn2OgaERrKYWiqxXyFXAZm7Nkk/PJ3nsv3+95fo4
      X7/IwUgi2uCJv35hTwbBxvUJ/vxDD+5qGb/6D29seRCsf/cMH4kmOepvrifUCh0xgGg8zejY
      GPPT15hIZlAtFjRRJl1IYZLNVOoVNEXD0Gwkps6j2VxUJBtaOUpBcvHOt+6vjC23uXXoiAH4
      fS4uX7yAzWJBUjRcbi9OGZL5NDa7jVQ6jc3mwB0IYOQTmG02CiUdkz2E17T5gMahKTzQvfkK
      sKapCKLIzNn9N9Btxl1+N7b1fEDaiMmksVp1OFlvXyaWjRh121u6d4IAmqkR/nb5lB1bm1xe
      OqMNanFw7OjKga5eq3Hi+B0okkTPzeyGAGPHN4/jXM2I08bvv3vzmNhgMIimaTz5xgtbLmMv
      +dW3Hdv1FfWenp41QgQvvOAkldr5QlszfvLoED/Sv/kEhiguZcF88o0X6HO2J0nGrrpC1Ot1
      yuXybl1+kVKpxPx8YzVR0zQ++9nP8uSTT645biEbZbFYxGxuPWporwmHw4sG0Kx9O2Hhu1lO
      rVZD1/Vd1U2Nx+OLrhCSJPEHf/AH67ZtIaso0Nb715EeoFoqIZhMVAqFxams9ShkksRzVbr8
      DmLJHHq9Suimp2gzymWd69caujmSXCUWzTSVVTlIDz/AH56bYCrZ8IORZJn43HxHMrzI8u4/
      Hl+bmOHFqRkABFHkwpVJfm2TtrXz/nXEAArxeeaqOka5jCo25m5nIgkUWcDv9xOPpxgaGiAc
      TWLXRC5evEENC5VaBTCoFguY7U4y2QJDg/1Iq96HqxWD+ciCNGCVQuFgygRuxDem5lbMAp3M
      7P67ead4MRznC5eXhI3V+c4mRezMOoAgEwiFECoF6qJMMjyNw+XD7vQydfU8MzNhSnUdQ6+S
      LZTx+QMMDQ0z2NdNpZCmWBOJzkwxE45Q1w+8mPVt9hGdiQcIBECWsY+doFTIY7b0gyCCAAHv
      28hkClgUif6BAYqVOjazBoKEzezG7XRSKRWRlG66SmUUae1siNUmceKuRtILTVN5+XQrqfUO
      Dr/78D3kiw15dE3T+MLnJva4Ru3jF95yhI8ON+IBJEnifyQ6G+OwqwYgiiKKooBy071AUdYd
      A5jNN6clVRXLOjOUC+fY7euP/Gu1GibTzeVwyeC+++7dldkLVVXXVZgrlUq89NJLPPTQQ20v
      E6DLaqZ8MwxUlmUeePvbd312ZjVut7vpmOCb3/wmjz22NX1WAJ/FjFZvhLYJgsC733n/ltom
      SRIez5If09mzZ/F6vXR3t6aWsaZFmVQCxWzH3CQeYAG9VsWQFNb5UQYaDVKU3fetyZZKXEsv
      vRd7Ro5wZrr9Uihmi4UuY+1bYy6b5S//9lnufPv9BGzt733m8iXSy5zhdqt9zegxRLQms0Ff
      /sa3OHzf/VhUZUtTlLUalIpLEibHj93FfCTZ8vmyrGAyLU2xv/76m5w8eZyBgYHWzl/xSS9x
      6fIkw6OHmJ+J4QkGiczMIdXKlOwenEYFm9fH/PQsoqpgkw1mCgZH+oOE55MEfA6KJR2/b+US
      dSEVZfzGPEPDIygiKLJItaYjSwI6ApIoATrVShUEAUVRqVYrKKqKXq9vakTn4hk++LXnW/vG
      dgGjXIJXXoPvvMS//8Ajbb/+v/q705vmB9hr9FNv8kf/4Y95ZKiPv/npH275vJnrZSau7szT
      9fVTSz3GqVeuc/Jk61qv8uqPA/0hZq9dIJYxyFfr+Gx2ouE83UNWXn9pgn6jgqao1EWJVC5D
      0O/ipZfOYLObKJZKjK6j559I5Tl6/DgzE5cp5PNUZTNitY4oFNFNDmyyjXopRq5mYNSriDpM
      h2P0D/Tj8QXoDR18dbfb7E9WGoAgUiwUGBg9iT18A81mJRrLceTOo8zOJzky3IPJ5cWiqCAI
      1KpO5ubj3P+Ou5m+Eaarp3vdkMeu7gAXz53D5XJiVKCvK4giQC6fpmIoFJNRzA43wx4P6BXK
      +SKSyYIvECDg2/zhD1o0fnxssF3fyYYoioLdvjbDZKVQ4LXIOA8NNc92uF2+b7CbY469Hdg7
      HQ4keeP5+ecvvswD99/NiHdrDmoOl0QgtP2FNkkUcbqWxmXXb7iaHL2W79kkeQssX1DK5XLY
      bBunULVYLOv6xmezWT73uc/tWqK9Zkny1mP5qulmbWqVvr4+TKaNpah//dd/nU984hNbvu52
      k+QtIMsyw8PDi+39i7/4C4LBIPfff39L539PG4CqqgwvC7zZr5kWt2oADodjcRZkv7ZpgZ0a
      ADR8vNzupZ5nK23uyDqAXitzZfwafUMjWLQWitTrVHVQmnS5yykWdC5f2PpAShSLTIxfXPxc
      rbYmqNppfvPlc1zcwgqpLMuL6YMun73Mx1IZ+l1ro+72A5G5CtPXdzYInrw6g6xEAFCUrbmI
      dMQAwjNz9I8cJh8LMxHP4HJaqFchk0/hcXmJJ5P43G5yNahn5pEUhWhepNspUDDMHB8danr9
      et0gk97Ow1uH5JLbhL5PV5nfiKU4Fd6ei4CeypCv7l8JuWJB3+a9W86Sbqrayg/sMjriCmG3
      mbh88SLRZJpqKUe+KhFwWSlXKiQTSXS9SiqdI9QVYj46T75UwaSIROcjFEq76E0qNPzMF/72
      K6IgIG3xTxYbf6IgtJBmcA9pQ+WW38Othk10xhXCG+Kkd2Wu32qxyLETJ7GsWlx56NHlCetW
      BuRvhM0u8da3b72LXz0GOHPui1u+Rif4s/ffv/0xQGmWMf9axYf9wuCwCY9vZ69nq8cAL5/+
      s5bP3bOgeMVsXvPwdwKPx0N3dzfJZHJN4owPf/jDHa9PuwgGg3R3d/Pss8+ueBgOcps2o7u7
      m+7ubqxWK08//fRizMRW2tyRHsAwDBAEjMXcv+uj63V0HSRJpK7rYBhIkrzp60mqXOXZ6UhL
      dfEWa5hMZs5eukqfzcK7lu1bkNrYb7waSRDNZJseE6qJSJLE1YmJFf7y+7VNC1xMZrg029q9
      W4Eg0GMseQh86bnnOXTfO7lnoGdLbe6IAWRmZ5F6eohOXcNiMuFye5mPJZAl8Hi9xGJJuruC
      jF+6QKlcx2wymItXKVeK3H3nCYR6BdViJZsr0hUMrDGIq+kcH/vO6S3VyZi8wv9538EItv/0
      qQstu0L8H+vIm+xn/uTi1A6yRJ5a/E8/e4nAa+e4Z2BrGkad6QH0CpfPn0fPpqmHuslcOkPV
      HEKRBaZPv0JVV3H6vEiKhR67RLpWZWwsRKmUIZ2YpYodfW6GVNnA6/WhKd9Tcka32UU6YgBm
      T4A7+qwU0wli0RjegcOIigVRgKDbzEwkjSpJeF0WYrkqfcEukE3YLBI1u5V0IoYa6kHMFpDX
      cT3tt1v4tXtbc4ByuVyYTCYuvmpnzNu6hN5e8jMnDvGB3ubKCX6/H0mSuPL0n3SoVu3hB4Z7
      GFS2MRUkQCi4NLHy1bmL/ONjW9eR3VUDWJBHl00mqNex2pxYbaseOs3DqMMDGNjdfuzLXElk
      VUVTVazWxlK+zwcYOqsTAHo1hR8dbS0ngN/vx2w2c7qSoVqtUigUluIWbjI9PU1PT8+mscid
      4r19QcqB5j4u3d3dyLLMf3k+RKGwNC++sCAGjeD6hR+A/cLbAm7GzM0fQ0VREEWRyclJBgcH
      F7cvzwMh3HcPb+/rajk75OJ5t5oqxHYwmUwrkip88pOf5OMf/zhW6/7QD1quCrFVlsud/Nf/
      +l959NFHGRpqvrDYSZarQmzEwo/Wk08+yVNPtVfTb6XpGXXOnz1LVTJz4sgwlXKBVF7H77Gh
      6xCdD+MPdoFeR5RkdL2OrKibLj7UynmuTEzT36o04hZ5M57mn3zp2W2fLwgC4jKnuPTLb/D5
      z/45/89jD/DE8cPtqOKO+BfPvsqbke2tBDc8OBs3KPfdl3n00UfbWLOd8+lTF/iL81ebHiPe
      TMZyNNZ6oEyrrAqIKWJ29WCr5bgyfhmbWSWSMkjFblCrS8iSTiKdJzp9GU/XEIYkccexY5sa
      QCQS5/DYGIm560wmspgtZgqFCjJFzJ4QqqCgV9LE0zkMQ8dmsXN5fJxDh0fRzFYGepon4qjU
      deYKrS8UbYZRqpDJ5Mjvk4yTsWK5Le0zirvfG2+VVLnacttGtvh60wqr8gNYEaozVCQrboed
      qqBg1/JYrHaKNQlVL2KodsyDh7A4vNhdLuQWXpO9LhsXL1zAYtIwDAPVYsdth0I5RyKTxSjm
      MVmsdPcNgl4il0jR3TuA2Wyip7sF2XNZYsS5fZdfQRSQpaWvYt5qxudz75tMMb12C9ni9ton
      K8qit0HCvv/EAoIW06b3TpIlREHEdL39bw+rrigweOjIyk3rJvBrntVvNSaHhxPH1i7Hu/Gz
      dtbWic+7tcRvxzwOvvKhB7Z0zor6rR4DxMb5+E/94L4ZA/y7B+5uzxhA3Jnb8W7w8btG+ZnD
      zeful8YAZ9pe/vf8INjpdGKxWFAUha9+9aucPHkSk8mEz+friPpaK+xkEKwoCg6HA6vVSjwe
      x2az8bnPfY6Pfexjba7l9mhlECxJEqIoMjc3R1dX48d3oU0Azz33HF6vlzvu2LqubMdcIeLR
      KE6vD2U3skQWSvzRue1p5VislkXty1dfPcPY2FjLigKdIh6tkM9v94ekj+3nLQAADXRJREFU
      jNlcR9MaU6PlUpm5ubn2VW6HpFM1YtFW22Zneqqh/rG8TRfPT3P3PduTS+yIASQjs1RlM8Vs
      mhvpPH6PjXyuTK6QIRjqJjIXIRj0kymU0EtZFFlkKlbicK+bsqES8jWPM53JFfmd11pLjdoM
      4+IEv7bjq7SfSLhCKrmTnnTp3O7e/RUYk4hVuXF9O21bOmdqKsXdW08RB3TIG1TXdTTNRGQ+
      iqYXmJxLYtUULHYrl988h9VpYmJiCtVqJ5mIE4kmCIWCTIxfJZFIdKKKt/kepSM9gLerh9kb
      03T3dJPMFDjc7YRKiVS8wB1vfQvhmTmOjB1GVlSqgW7sLhfZ/7+9c/uN4zzv8DMzu3PeE7kk
      l1weRJGUbDlqG9dJdBPUUVOnaKDASANfOWgRpL0oel3AQJAARRDHV/VFL4pe9D8oWqBQXKNA
      0cIObAQOLYWuKJEURYrnXe6Be9459oIUTUpLcpe7XDqMnkvu8pt3dvad2e/73vf32ykwdfUK
      FfvkHJ2KhfiXb371VLFFwuH9ndH/VKqnGuOsGRvX6E+c/l4VCoXQ9d2fCLIS4D9udyqy9kkk
      ZdRjFMOP4uA5lWutLZocpCsJIAgiyZHd39VPyhpQFF4M7ZZFjIx+LicyuKe6YO5NcJp5YIeC
      Ab6WONocTdd1VlZW0DSNvr7DNTWmae6XC0g3vtJQ+vC8MUyJ4AmOKJIkoaoq+XyeTCbDxMTn
      +kyGYRwqf3jllZPNRLqFpkl4XutfQ10XeHJK45eH0HWdUql11ewLswq0uXl0TXkymeS9935B
      f38/N27cOPN4Os3jtXVqJ3yOuq7T29vL/fuz3Pn0U/7i+99H/CL3ee6xmU5TKJ6f3HtXngDl
      TAaxt5edzQ0SiaP3EFaWFihUHEYGe8mWXKxaiaGhwf2nwVGUii7Tvzq6YWSa+6ysZQ+t9f82
      8eb7HzXtEumnN2FjhVe+9W2uD7RmGXoe/OTjz1p2iewkXUkAp1Zi6cE2VCuk0inCssj6josS
      FFCDsLi0yc3XbuKLCqNxncXVFQTB3HWPTK3zqFgnIDo8XMvw2h9/A7mZ7efnPKcJupIAQT3M
      1eQY+fXH5HeKaKbJlf5eJBEqhRSTkwZBSSIgOKxka0yMXkJUwthWhXqtjG25BGSDyYkwUoPH
      eiAgEO05+lQ0TSOb737/caf4aqKX3hP0biRJQlEUCoZE3q+15JZ+nrzUE+GbI6efxLbLhZkD
      HLcTPDw8zO3bt+nr6/utnAM0sxP8ZIJ/7949pqenefPNN7sUXXs0sxN8lpxpAnRLdbFarZ4o
      jeh53iHNzHYxDKOhTijQ8br15eXlpmRRBEHA87zdJqQTDO5kWT7UXAJgWRZvv/32qTQ+T8vG
      xkbb0ojt8MynND8/RyTaQ3/f8arMtVIOX4mhHSPd/8R20/ccHi0+YmjsMmqL0nXNsFws85OP
      Zjo+7nEEgkEMY7bha7+aXSD97//FD1+5ztdGWiscbMQ/zSyw2OFaeFESCd05bEfkOTbT/zfH
      rfUUf3hCCXqn+LeHq/zvwnJXjtWIZxLAKuVZqjjUill2qh7RWJig4PKbX0+TnLqGXcri+gHC
      YYN8ZRUzAAsrm1ydGCUcGyDR92zr3tbaKvHkKJV8msVMkZ6wSq5oEdElBNVAlRQ8p8xWehsf
      gXhfgnwuQywWpWb7jCYTz4x5kO2qxb8+XO3cp9Im3uY2M598xjcuj3YkAf57ZasrBhm+6+Bv
      pFnK7XQtAT5J5c712j2TAH1DoxQePcY3I/iej+RaeIpKT3+SaNhEG4jgVn2K5RKiYIEoM35p
      DDMUafjlB1DlIKmtLexqGcm1yNd1ek2VXDFDpVBBrFtIIvQMjSB4ZVLL8yxvlxi7JPDC1fPv
      yHrOxaUr8ui+71MulVBUlbplo+01mth2HYQA7p4dkiQFAB/f96lWKqi6TqAJYaydUom7c911
      FzQMY78092l++uMf8aO//ylRTUHvgEfa9P05Sgca3TuBLMuHmsphdw7wD+/8nJ//7Gdowa4s
      EPJg6TFb51jv1aVSCAFzz+HxoPqCJO3VgDRYsguFm69aDIoi/XrrSgeapu2bR6yurpLJZJpW
      FZNluaFbDMAbr7/OYMjYnwO1S48qo9NZwStRFJGtGvEDDjyu6/K979xi5dEiV65c6ejxjiIk
      B/BPce06RXfS/IypOi73s62vJIQj0CPvFlTNbqYpb21w8+bNtuN59dVX2x7jIEuFMvlS55cK
      xVyRUftwYoUmr/LhLz/sWgJsVGqsnOLadYrulELkUiyspRkfv4yIj6bKWJaN49johkmlXEbX
      NSzbwXMsJDxSRYdEj4mHiHrCps69bIE//8Uv24rR31jhB5cT/LCtUc6Gv/vwTlddIi/lN/nB
      977blWP94935NqQR26c7DTE7FV68do21R/NY1So1QSZu6BSsEtWdGqGYQbVkoccHSC/OEFQN
      guEEW4uf4Wpxbrz8pW6E+ZzfQbqSAIPJAR7M3iMWi1G1BUYHB1A9i43lLJcnLrG+vklyZBgz
      EsUvJ9HDEcrFKr3DozjSybXiCV3lr166fOL7nkbVNIy9WvSN+TDjwhdDBuVpXp8Y5uVY+0Z3
      TyOIIj2xZ7vt8rPd21P5o2QfitX6tesU52aS53seviB0pGT3tCZ5kUhkfxI4MzPD0tISt27d
      2n/9aYNu3/fJ5/OH9Pe7QTMmeaIoIooixWIRXdebauiXJKmhStwHH3zA179+epWNVmjFJO/J
      7nY+nycabc0O9Sh+p10ijyMYDB5qKoHdcoq33nqLd955p6PHOolmEiCRSBCNRnn33Xd54403
      9h1ivug0mwCSJDE1tbsn1Enny678BCql00h9feQ21hkaPPrCLD+cY6fiMJbsJVN0qdeKjCSH
      Mc3j+wEe5Ir89fsfdzRmQRTQ1E8O/c33fYJrpzBzaJMffzzD7AnSiLIsEwhIrH70Ke8Horz3
      t3/ZneDa5J8/e8jt2eOlEWF3KV37n10PiMW79/mb3A6XYu1373WtH2DuXhqqFba2NokoEqs5
      G1UWUYM+C4sbvPbtb+FLCuN9OvOPlxGEEJZrkdpaYWF+tx9gfmWbP/vTP0F5qh+gZDtMpzuv
      G/k0vu/z5WrnJBib5X620PT5+dkdyhvdWzFql+VipeVr5xVKVDrkfNmdfgAjwrWRcXKrS2Tz
      BTQzxIsDcSQRyjtbXLka2u0HwGEpW2Xq0gSiEsG2ytSqJWzLIyibXLkSoYE9AJIoYMrt77ie
      iO+ja6fTn3l2KL/pjTI9GGz6/Hxdw2zSe62VGFqhlXGVgNTytfN17cS5Y7MxXIg5gOu6iKLY
      8Yv5xN/gLBTiXNdtetxW3ntWMZzVuOcdw4XoLTxLI4uzGruVcb8IMZzVuOcdw4VIAEEQ8D2b
      TCaP5zrULfvkfzqA7/tktrfxPB/btsH3D6261Go1fN+jVqvjey61evM6nbZVJJev4dgWdcvG
      sS1sx0UQBGyrjuN6WPU6ruth1Wu4DdzqBQGymW1cz6Neq+G1+NC2rSL5nRqu4+B63tExeEfH
      0AjPrZPJFvBch1rdwnUcLNtGEARcx8aynf1j2ZaF4zwrby4IkMtmsR13P4ZW2I/Bc3Ecd++4
      x8TwlMT6hagFAlh6+IB8XaGYT1GsWrxw7SWCTdqGe5U0v555yI2vqCwvrTAyEGFtc5v4yARi
      NcNWegdJkfGqZUQjilMrMX71S5jyyfePB7O/IaBPYFUctrIFZMHDC6hcmxpjbm6egBzAqtko
      hkKtUEWP9TJ5afjwIHaBT6ZnefnLU2xsbBPu6Wcs2bzCxf3Zu8jGJNZOBcfoYWdzFT+ocm3y
      QAzV3RjqxSojyX6i/Sf3MTxauE/BMhC8EKurW8haEMuG6y+9wOLCHDVPQsbGEYOIjgOyxotX
      Di8t4zncuXOX3/uD66yvbKCGI0yNN2d3tRvDLAXbJCBEyRSq+PUSZWs3hocLc9QPxmDboOiH
      YrgQTwCAwaFhKpkUVSFIT1jHaeFGIigxBmNBcoUaPbEwlu0yNDiAZdlYtkcy0Uu57jCciFGs
      w0A8gm03d4CR4WHS6RQIMDo6gmKEUYIivu+hh2MEBRsz2ofo1wnHEgh+g9UNyWBowCS1lSI+
      kMR1WuuzHhkeIZ1KE4vHkQQf1QijBER8z0MP9xAULMxYPyJ1wj0JNLm5J8BgcpjidgoHgcHR
      MRRZxdQVfCCg6BhqEFkLocoCqhFBDjS4IQkSw0P9pFMbmLF+JFozwRhMDlNMp9FicZSAiBhU
      MfXdRYCgomMogc9jMKPPxHBhEsCy6pg9cUbjERxRR230YR+JR92BqBEkl80iqCaZfAnVKxOK
      97NdrHN96hLpisjvX+6jVBeJ6s09PGu1OvG+OLVKhe1snpAqEo5EWdvKoUsOkf7LKEKVeGKS
      ACX6BxrdeX0s22V4bJJacZvBFje5nsSQSqfJ5XYwVZFwNMZaKocm2UQHJlCoEE9MIvolbOX4
      dtgn2PU64Xgct1Yls50mGjaRtRDr62vEQhqqGSNsyJiRBKYKkVhjp0vLsugdGEOhQm9fax10
      T2IobK2RK5SIhAxkPczaXgxauIewHsSMJDAaxHAhVoGe85zT8v+efuea9lYagQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Product' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Shipping' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V4wkSZqg97mHh9YitawsrVrLmZ3Zmbm9vSMIgsABvCOwJAiQ4AsJAkeA
      DwSf9pEAucQ9DEEcb7l7wC33Zvb2uDN70zPT09O6uktXd2mRWmdkaOUersz4EJlRmZWZVZnV
      pSs+oFAenqbc3X4z++3/zUyRUko6dHhJUZ92ATp0eJp0BKDDS01HADq81HQEoMNLTUcAOrzU
      aBt/GLUil2+Mo2oB3nrjFVRF2RKhlFtmYmaGcrnJ4Og+vFaV/sOvENK2BN2ClJI7N65Q1U26
      +kaoLU8z+tp7RL2tv1+9coWTr7zynR7IbNRwtCBhvwbC4frVayxms6TSGQ4dPUks5Nt1Wt9c
      usSrb7zRaSVeYNrfVkrJJ599xdvvvMux0SSffn2ZfD7P6uIs49PzrM+VJrv6eO3kGChRjh4c
      JdMzgM8jyGVXuH71CpVajWtXrmI6AuFYXL96hZpuAmDWl5ldtXn77XcY6ElRLRdZXVnk9uQs
      UkJf/wCO2WBhbp5rN8cRUpLP55idvM3SaoHJOzfIl+tIKZmdvM1itoAUNtnVVa5duULNMLnw
      2e/43edfkS1UQdU4/uprSMfhtTffJORxKFfrTE3N4Lo2N65eodJoYjYqrK6ucuXaTRwh18p9
      mcnZRaSUTN25wcTsIp0J4xePDY2bRPFoeBSIpAYxK8uc+eozbC3M8q0bNKRECMG9ZoMrZ89i
      SJff/e5jxvaP8sEHHzE6lOKLry/x+999yPD+g3z2ycdIwB/uxuvk+PKr05guCNfClF6qc9fJ
      1h3Onj1LPT/DpTtZBpIePvv6W059/gnRzABnP/sdmf5RTn/5BbcufYWuJZm7cYFcocSvP/qC
      A4f2cfqrM4yOjnH05Kv0pGNbHrZRnOcv/vW/IVc1+OyjDxkYO8BXn35CdvYGF26v0B9xuHh7
      gY8+/JCRA0eJhnzkpr5hsREgEwt2BOAFZIMAKEgpkRJcqw7eMIo3yEBPhqDPj9GocPnyZepN
      Z9uEkplWuJ7eXnyBANK1KZWK3Ll5g0gs0epBFA8/+qN/zPfefo3ff/R7VI+Pvt5u/D4vjiva
      aWUyaeKZHkSzgTcYIRWPkEx3E4+EUFXIruQoZOdACyJch+7efgKBIF5PK/796umb3/sJ7752
      lEKxyPitm0RiMVwBAwODBEMhpHBwVY1w0IfP56Nr3yvEZJGz5y5iuu53fuEdni3aI3dFUXj9
      +EFOnz2LYzb5wQ++z40rFwGIpRKEIglef/11ABzLRyoVBSCRyeBBIZNOg6KSSsZRVS+pZIID
      fW+QqzaJxROogGPWOX/pOl6vwqEjxxDVLF4VIvEUfk0lk8kAMDV+E1Gb45U33mJ6/Forn1QK
      gEwmw9EDg3x7YwZ/IEw4FCSTjAMKyWSC1FA/ty9dIeV7lZ50HIBUJoMCaL4QqURL5t95601W
      SjqReIJQREH4NTy+ILGwSrQ3zbnzFzAd0KtlTFfiDwS21Yk6PN8oz5orRGXpBtdzIb736ujT
      LkqHl4BnTgA6dHiSdGb4OrzUdASgw0tNRwA6vNRo0DKCTSwWaRj20y5Ph8dMT0TB53napXh2
      aE+D/vmvLnFrrvA0y9LhCfDPTmh0hTvTuet0hkAdXmo6AtDhpaYjAB1eal4KAdjriPdB4Tsj
      6F0gJUK0bKxCiPv6Z7WCyy2OljshhHhwoF2yCy/+Z5N3XtlPvZAlFE/QqNZR/EECOOgO3JnN
      oQX8nBxOUizXSSTjVKt1Vus2quuQTkTIFSqEohG80malajGaCTO5XGF0IEUm5OX8eJ4fvTnI
      4nKZ1bpDOqiyXG4SD/voSoSZXS5TNV3CmqRhPboP8iyzODfN/NISkVQ/jlFmNlumK6yR6BnC
      tS1OHj1EbmmO2XyFwZ4045OLjOwbxau4RIIBlnIF9g0PsrCwSCzVjU82KRmCgUyMq9+cJzh4
      grGkh0s3JlA9Po4dHCGbzdIzMAJmldPnLzO4/yCJoJeA10O+qqO4DkOjoyzMTNE3tI+Qf29V
      +rkUgJHhXvZlwtSDGQJeH0sKNJo2qWSUDOBTBDcWq+RLdRSPB68HVF+AvriGqwCGwcHhDKrq
      oWELDgwHcATEo0EWlgo0/UlApVZvML5UYf9wF4cHk0SzVer1Oq6UJFIxhrwwu/jyzJyFgj4U
      LUg6naEwu8KRI0eprs4xdecGHl+IQCROJuCjv7cX06ijeAPkV5fxeDwUHYvefQNcuXwNJZIm
      PzVOIbuEFoiyuhJj/+gIeQdWVpY5eOQEleVJxscn6BkeYHx8ntdPjjHQ28OBfUPcuHqdZtMg
      6IXuTIpPPz+F4vVSNCRvnzy0p2d6LgVgdm6F1UKdwRjEkwl8iuTGdA7TtPAFQwhXoCgKsWgY
      17ZYLdYxHNAQeHw+9vUmmV+tMDzUg1uuMr5UIR32slI2GO5P0TAsQBAKhTjYH8fjUSnXm+h6
      k4V8g54uD/PZGn9woo/r9svjSnXj5m38iW58GpRtL38w3Ise10h3D7IwM47X60VikV1ZJh6P
      09/TBaK1GEovrjI+ucBQX4bLd+YYHhoi6tewVT8xv8rk3DI9oyn60gN8c/06Hq+fvu40iWiU
      ZrTVw4YjERQgGo0QjUbweSAWDTM0NES9VqW/J7PnZ1JkC/7nf/n7l8IOEAj60VybuiXIxEPk
      K/pDpZOIR1Btk6L+fBkPn5YdoJDLEe/qQrF0SoYkEw8/8TJsx3PZA3wXmobZvn7Yyg9QrtQf
      RXFeGtJdXa0LX4jM7pdlP3ZeilmgDh12oiMAHV5q2kOggwNJ/N6Ol9SLTk+Ph3igY8lYp7Mi
      rMNLzUMpwXux2nXo8Czz0AJQLBYJBAKPujwdOjxRHnoaNBAIEIlEHmVZOnR44nRmgTq81HQE
      oMNLTUcAOrzUdASgw0tNRwA6vNR0BKDDS01HADq80NzPaCuF6AhAhxebm2c+o7i8sO3f5u9c
      6whAhxcXKSVL49c498HPaOqb128IIbj59ScdAejw4mLUKlTzWYxahXO/+jliwwk/8zcvUy/l
      OgLQ4cVldW6qPf7PzU9x7dRHSCkRrsutM5+iKMrLtySyw8tDbn4KZe1YK0VRmLh4ilTvII5j
      US8XtgqAUS2xsJIl3T9GKvIMLdzs0GGPCNdlZfrOlvuXPvo7PF5fWzA2DYEaxTxz2QVyq1Wk
      lExOTSFdi1vXr1MoFrh+awLRWQbQ4Tmgkl/Bam7d9MCxTMxGrf17Qw8guXHlGnYsjOb1oCgK
      oWAIs5wjNXKAiRvXOD7STdmSRFUXIQSOs/2RqR06PG2Wp+6AlA/cknGDACgcO3mcaytFkvFA
      a9FLbhm1p5fc0h2GBvqZzlU41q2gSA+qqqJpHRWiw7NJbm6yPcy5H5tqsOZVcZ2WzCiKwvFX
      WucC9/T0AdA/0Pq/Mwzq8CxjNZuUVrY3ft3LPdOgCtJtkC80HkOxOnR4MuQWpnCd3e3Yt0kA
      fEE/Ny/fIBDprPXt8PySm5ve1fBHSrlZAOr5PH0HjxLQOvvGdHg+kVKyMn17d2HvdYZzhSAY
      DOJROwbiDs8njUoJvVLcVVjVF9wsAJFUFxFNYLk7RenQ4dkmOzux6z2rgsnMZgFwLBMXwe2b
      Wy1oHTo8D2Sn7+xq/C+EIJjo3igAkrrl4hEKJ04cfIxF7NDh8aBXK+TmJncVVvF48UVidwVA
      SgggcDQ/6i4kqEOHZ41b5z7Dsa32bykleLzbDokC8TSKomzsARwm5pdoFAsdQ1eH545qMcfs
      tUvt4Y8UkkC6j54T7xLp27dJCKSUBJKtAzvuCoC0sUwbvyZYztbo0OF5QUrJ9VMfIdyWb5pE
      ITZymOTwIVTVQ6xvhEj/2F0hUFQCsSSw0RVCCTA4OkbfUB/SE3riD/GsI6XclXLV4clTXJ5n
      eeIGAIrmJzV2DH84tilMrHcYRVWpLUzgi6VQ1dZZGBuGQIJbFy/wxbmLGE2TDncxalXO/+Zv
      Ny2p69CilF3CsZ/eQYGuY3Pxd38HtFr+zOHXt1T+daLdg6QPv0G0d7h9ry0AiqLx/vffQsOh
      XLW2TeBlZWniBvM3v+Xal7976uciSClpVErY1tNvpEy9welf/BXLkzfvG862zMf23qavXqBW
      WF0b13ej+fz3De8Px/BH4u3fmw1h6QwBb5B0qjMEWkdKyfztK60ldZe+YvrqhacmBFJKpq6c
      56O//Bf89s//jG8//YBqIfdUyiOl5PJnv8aoV5i5enHnvXek5Mzf/1v0WuWRl8E2m9w++zmK
      oiClJNoztOc0NgmAaViceONtEiHvIyvk845eLVNanm//vvzx35OdmdgSzrEthBCPrRyObXHx
      d3/Ht7//JUK42E2dyUtf89G//hd8/vN/RTm3ct/4QgikfHTlW7h9lYVbl1EUhfzCNI3y9u4H
      ldwKublJ5m58+8jyBmg2apz91c9prq3u8kWSeIN7P3t4kwB4vCrnvvycfMV4NKV8AVi4fW1T
      xZZScu6Dn1HJZTH1BrM3vuXcB3/Db//8z5i6fO6xlKFeKvD5z/4Vs9cublLEFUVBURSKS3Nc
      +M3f4u6wQk9KydXPf8PNM5/dt7ewmsau3IiNRo3Ln/6q/VsIl5nrl7bNd+LSaVwpmbvxzSPT
      oYorC3z61/+S7EzL6iuFINIz9FCTFJsWxNRzWYqVPEsrNboSnWGQXPtw975YxzL5/Gf/N0I4
      uI7T/vv4hS/Z98pbeDyPZqWcEC4z1y5x/csPsc3mfT9wJbfMja8/5uQP/9GWvy1P3mLym9MA
      hOMpRo69tiVMrZTny3/3lygKHHjz++w78Raab+vGCFJKpq+cx9Qbm3ZcmL/5LUff+xEe7e7o
      odmosXD7CsmRw5Tn7pBfnKV7eGzP72FT3lcvcOXTDxDu3feu+kME4qmHSm/Tl4r39FAtnmFo
      OL0pkN6o4w+EsG2bYPDlWStQya1QK65u+zfHbimhGyulXi2zeOcGw0df2VX6Ukoc20LbsEvB
      +v3C0hxXPvs1pZWFB7ZsQghQFCYufkX/gaOk++/OcjSqZS6tzZIAfPPRLwhGYpsqYq2Y58u/
      /Qua9SoAVz79gDvnv+Tgm99n+OhrKBu8g/VqmfHzX24pk14tk52dpH//kfa9qcvnECiEkt0Y
      pRwzVy/sWgCkEOj1KqahY9TKmI06+cVZ5m9dZmPOUkoi3YMP1frXDPeuAEhpc+qjTxk+OMzC
      QoHUoZ7WfVfnxvUJunuS6PU6I0eP46e14ejjHPM+CyzcubZnBXP84ikGDh1/4AepFXLcOvsZ
      K9N3CEZjxDO9JLr7iHf3MXf9GxbuXEUK0VrYrWogdt6AIDpwAKtRwarkufDbf89P/ov/Do/m
      RQrBpQ//DtO4u8LPdWzOffAzfvjP/lsiiTT1UoFT//4vMe5RUpv1Klc//w3XvvgQNj6LFDu+
      k+kr5+nddwho6Swz1y4SSHSBohBMdLE0cQOjUccffPDo4sbXH3P7zKdI2PIuN+WuaoTTvTuW
      SQiJqm7/Le4UxF0BUBQvr7/1Bheml+nvid7NzIVgUGG1WKUr6kcIkEors6c9Jfg4kVKycPvq
      nuOVVxZYmRmnd3R7h8JKbqVV8adutSo4UCs0qRVWWbh9peWUteGDe+MZUqNHKE7fxK4VYEP7
      J4HY4EEiXf3YzRS5co56Kc/VLz7k1R//x9w+/yWrc+Ob4sDd6cvX/ug/5dyvfoZl7LwEVkrB
      /bZWkFKsVVCF1Zlx9GqZYDTO/M0rGLUKXYOHgZbvTXnuNvM3L7P/9ffu+w4X7lznzrnPQVF4
      ULseSvdt6qFqhkteF5QMKDdBt+GdQYXu6OZhqWG6TJfv2RjLNQ1Uf2jTghjVF6Snd4BUOkml
      2iDiVRBCRVEUPJ4X92T5/OIseqW4965VUZi8+BX9Y4fvGdYIrn/1cevDtoNuk/a6L4uUKJqP
      9OhRVE0jc+Ak1eVZ6svTqKqKlJAYPkw40wuANxDCn+jCrhaYuXKeYDTOrTOfoCjbL26ql/Kc
      +nf/T1uRfhiklER692EUs0jHRAiX+VtXOPz2D5i+cg4tFMUbDLXqiteLNxxj9vpFDrzxPuoO
      i65qxTyXP/7lzu9nA0JCpOfu8MdxBJ/OCHRnc9qn5iTfH3LoiWntKdOJgsCR6uZZIH88jlHM
      Y9l3tXVFUenq7sLj0Ugl47wszN34tt3DSdEahshdDvlyC9OUskvt31IKrn7xIbfPfrbr/KWE
      1Nhx1LWtZxRFIdY3QurAq0hVIz5yt/Kv/z0+MIYQEpDc+PLDViLr6aEgFbX9TN+l4rfKJwmk
      +oj1jxIfPogQLVeRuRvfsDIzTiW33GqdN+QRTHRRzWcpbphW3ohlNjn7q5/h7MLIJ6UklO7b
      ZPjK1lx0Z+szWULhyzlYrjhIKbEdwWS59bdNAuANRumOK6zkt+6o9TLhOg7Lk7farYU/2U3f
      yfeJjxxF8QY2CYKUEiElWjiOXOuwFeDOuc/XDmcQXPn8t4xfOLXrCtdqWUc2WSyhVWmD8RR9
      J98nnO7dEk/zBwmkulu9x4YWVkpIjh2n9+T7RPr2gap9p+GrlBJvNEly+CCKohCIpQgkW/nW
      S3m++egXoKiE1jwu1wkmM0gUZreZMhVC8M1Hv6SSW95dIVQPsf7RTWWaKknuHe6t40iFr+Zh
      qewwXXRpuq1wm5Tg61euMbdU4f0jwd0V4jGwPgMyfvEr4pkexl57l0Bo+wO5pRCbPvSjwLFt
      Zq5dpNlozYh4/GGSI4dRVJVwppdQuge9uEojt9iqcPEM/lgCj+ZtD1EURWFp4ga1Yo7pKxeY
      uPTVniq/Fo63P+7GFnude595Y5h4/z6yxexdt2AJidGjBOOtmb1Y3wiR7kEauSXqq3NIx95z
      T+DxB0ntO9Yuh6IoJIYOkK0WUaRLs1HDH+/C4/UhpaRUt0lGvGi+AN5QhMU71zjy3o9ByrVZ
      ngqrc5MsrFncd/OOwt2DeLx3p2kNyyXbuH9cRyp8vSDxrOksAIpce3tSulw6c5pSw+St9/+A
      RHhnnwohBLquP9KT4oUQ5BemuXX2c/LzU7TKJPH6A4yefIuDb36fQDhKs1EnNz/F8uRN6qUC
      P/yn/w1e/3ebmpVSUivmmLl2kYVbVzDq1Vbrr6h0HXkTb2B3NhEpBNkb55F2E4BAJIZRqzzw
      o64f46OoHrRgmNTYCTSfv1WupktZFwynd96suGo4GJakJ96agy/O3KJZXEFKSWzoENHugW3j
      CcehsjSFnl/a1SIoubbVYHLsBKFEZsvfG/kVKrM3kUDqwKsE4ylqhsOn04If71OJBjWqK3PU
      l6ZQPRquY7eq4TbDse0Ev42q0XPiXdQN9pbbWYtL2b03hhuUYAej6RKJhBHuk53edB2b07/8
      67uWvTUFUJES22wyfuEU05fPEU5mqBWyCNdth5u6fI7D7/xw23SllIxf/IrM4D6SPf1bX7IQ
      rM5Pc/vcZ+QXZlo9ytrHEFKSHD2y68oPrZY5PnSQ4sQVVFWhuSZI25VLSvD4/PhjabyhKL5w
      FG8g1G5VpZQYlsuXM4Kmq5AKO0QCWw1srhBcWBTULPjjoEvQ5yHWN4pRzBLpG92x8gOomkZy
      +BDhrgEq8+PYtdK2PaqUEhQVf7KbSFf/lqHZOqF0D3opi9PUCUQTuEJwaUnQcFRmy4LjAUkw
      0UVtcQop3B0VYSklWiiOqmlY1cIWG0m0d2RT5RdCMFPe8THvy4ZpUD9/8OM/fLhUvgPrlXS9
      8q+VhtTYcbzBMI3cMvXVORzboro2PtxogRy/cIp9r7yNL7B12LYydZtrX/wWFIXefYc4/O6P
      SPUOIqUgOzPB7bOfk1+cIZDswRtOYBt1hG0BkkjfPoLbtHI74QqBAgTjKfyJDFYlv6XyCynx
      heP4YymCyS40f3DH3sFyBF/MCKp2q5JcWBD8cExsqjRSSsZXHbL6ehiX748qaP4AmcOv4wtF
      t037XnzBMJmDr2KUC1j1Mq5tIWwL4dgoqkow3UMo1YvnAXvBKopCYvgQRinfmg3L2SytDUtm
      ynCkW+INBPEEQkhre3cbKSWqL0j6wAlUj0Z5fgIjv3jX6usNEO7q2xSnrAtK5sMp9E99d9ta
      Kd/26IM1BbBvX7uVifYOEe7qo55bopGdQ24wgQOYRoPJb05z9P2fbErXsSyufvFb1hJlZeo2
      K1O36Ro5gN002ntH+hNdpPYdbfcorm3hmAb+SHzXY2PbEVxYcIj74Wivl8TQAVarRdYn0KWU
      KF4/6dGju0rXsl2+mnEpmXcr+7KuMJF3ONjlbZe1ortczd1Na6GuMJ5zONTt3dEnficURSGU
      zBBK7l7ot8PrD+LtHaKiO1xZvTvWrtkKuZpLX0IlmOiikZ3dYXjjIb3/RNulIjF0AI/PT31p
      CqQkNrCvvZgF1twjSgL5kIcdPdUdsIRw+fbj/9B2wJJS4g0nNi1YAFA9GrHeYbqOvo03mtw0
      C9NyUz6NqW825oxf+ppaMbclz9zsBOVsq0VRNF9Lwd3Qo2g+P77w7qd7m5bLqRmHmarCjbzS
      Mq/7AkR6R9szRMF0Pz3H3iYQTTyw8tuO4MycS9a499MoXFltpQ/gCsn5RYEjlS1hio0Hb1sv
      pcS0XWqGQ75mM1+ymcjZNPewKZSUktWqTbZqYzlue9zuuK1hmS02l22q1NJ1gsmubY8vbU39
      ntzk1akoCrHeYeKjR9HC8S0zS7YrWPgOK3ifag8wc+3Spm2sFY+X5FprvB2az0/mwCs08stU
      FydBtHQBq6kzfulrTvzBPwSgVipw59xdP/Ht0hNSkt53bJPzFrQ+6rVlm2ITxpIKvVEVr6Zu
      q6TVmy5fzYl2S21LuLQk+OGYJNo7SLNWJNo92N6B4H7YjmCx4nAzB2Vr+3bJFgrnFwU/GhPc
      XnXIN7eGc6TC2QXBH+138Xk3GyqllLhCkqu5TJUkyw0FR9CevgW4mXd5s0/QF9d2LLOUkkbT
      5UpWMFdVkEDQ45IJuQzEFOqmZNXYGneprqCbLqFgmK4jb2GU85jVArZeByTxkSMEYgmgNaQE
      2kbZcKqHULJ7S5lWqmLbuf/d0p4F2guPYhbIqFX5+N/8tH2Kh5CS1P5XCK559a1/LMeVOEJi
      OpKgVyXkb31Ux2xSnL6Bo1fXWu4Af/xf/3P8wRCnf/nX7VVK/mQ3dr2KsJubhlnh3lHiG+aR
      11mt2nw2C+5ayxrSBMMx6Ikom1xiLBcur0gazr2VUPJuv2Rf2rtFeTNtQd0U+DUFzQNeT8sw
      NV9yuVmAqnV3yLAzkn0xwVxNbZdxO1J+QSIAQQ2CXoWAFypNyUy5NRy5Xz4qkgNJycleT1uI
      1quJkJKZgsO3WQVL7L3ivdYtONq7eUbLsUxcq4kvHENRFBxXcGnBpm4rvNmvEgt6dpxM+HLK
      ZrHx8AOZpyIAUkrO/urnLN652m6lQ93DJAZbnoJCSm4s20yUWi3aeisV8Qq+P6SSDLdeiHBd
      CpNXseutKYDD7/4hqb5hzvzyr5BCEO4dbc2nS0mjuEp9ZRZhGWjhOF0HX90y42HZLh9NulR3
      aIF3i98j+ccH7gqrlJKlssPF5ZbAKEg0BTS11fbq7m4q/pMn7hPsS4DpgmFD0wHd2a2gbk/C
      J/jjgxoez/bv2HEE5xdaQ0pQ8KmSV7ol+zPetlPbemOyWnc5s6jctyF4EE9EAIQQmHqDanGV
      yuoyhcVZliZvth2/YkOHCKd728JwO2vz7aqyqWtex++RfG+Qu34dQpCfvIZdK+L1B9B8foxa
      hWC6n8SapXIdKQS1Qo5gLL7FdiCl5NKCzZ3So1GLRmOC90a82I7g22WXqfL2z/PyIfkHo9Ad
      27rq0HEEZ+cd5mr3CphkMCI52qVQ0CUrdcgbD9cD3csTEYDLn3/IxIUvkfLuNN76zEhq33H8
      kVj73lTe5sKygrhPZdEUyVt9ktG1YYYUguLMLcxyy3ffF8+QHjvWdgQTazMmMyXBfBWiPnil
      VyUVvtu1LpdtvpjjvvnuBQXJyYxgpqp85x7lRWNfTPDuiHfTkNRxBefm3W0q/0Z2dnV4WJ6I
      ANy+dpns3DRGpUCzUsBuVPFFEqT2HW2bs6WULJRsTu+yS1ORHM9I9qc9BHwqSElx5hZSuKTH
      joOiYDmCpYrLVKnVYmys3B5Fsj8hOdbjQQF+P+lSszsV9UngVSUnuyS2aLkrN22o21D5DkOr
      h+WJCUA+u4LpSBqmoFB3kIqHoFch6IWAplA1JacXuGda78H4VMlAVLIvqZAOqygSyk3BdEmy
      UAXDvX+lDngkcZ8ga7y4rt0dduaJTIPeybmcu+Og2wq2VIB7x3+t0fHDjJEtoTBdUZiuSOI+
      F02FYlPZtWGk6So0O5X/pWXXfb5eLXLt5p2H2ji30FSoWOpa5d+OR6EgtvIoNNWOstlh1+xa
      AIpVndFUkMrT2wWvQ4dHzq4FIBkNMlPQ2Wb2qkOH55Zd6wDheJoT8fTalJWLYRh3/djvsXjC
      Zj/uTETjQO/ed+3q0OFx81CzQBvZjQBsF2Y735qN91zX3bLo/kHp7Dbve8Pcm9duyvcwYVy3
      5QO/l3fzPDzTXr/Twz73ds90b5i95v2dBeBxsZMT2/Oc131XOT2GvF6kfB5XXk/d8mMYWxdG
      NKolanqT+elJ5hazQMvvv1iuUa8UWF4t7Dmf3MoCSyv5VlpNA7e1EJSluRnKlRrTU1OYa7th
      FHKrWI7L0vwM9ebetf5CIY+4p12xTJ1iuUqjWmqX33UsVnMF7GaDmfkl9tIUSSnI5XLUKwXq
      zc3uz7ZpMDU1Q7VSYnahtYhIuDbZ1TyOZTA9u7DnZ1pn/XvV6w2kcJmdnqJutHZxaFSK1HST
      3MoiperOew3dD1OvUm1s3Z6/UStRa5jYzQaFcr0V1mhQLFeplvKs5Ep7y0gKZqcmn/6CmHKl
      TGFlAVPxYek1Mn0jxH0qVcOkf6CflWLrYVWPl6ZRYDG7RPIhtsEulyuE4xrfXOlG5boAACAA
      SURBVDxPOBLDlApHDu4nFIlSymcpV8uEU310J4IgXJq1AnMrJY6letlqt7gfktLKPI4ryOYK
      JBNxFMVDTyaJaVRoODZIiZRpQMGyTGZnVpD+KHsx9UshmZ2bIx1REb4erhdzHBgdRFVVouEw
      QU3ievwIp7W4X1nLa342h6UEERJ22DDtvhRWV1A1lUoTjowN4VEcytUGkaAfrwcKep2F2SX2
      Hdrbgpx2+oUyllSxmkFwbYrFAvHuYZIRlWqhScUu4LgB0onIWp2okl9eJL2NZ+99cZsUq/rT
      7QFMvUap0qBSKVMpl0h39yJdl2qlxNLKKsViia5MkmqtgdGosrS0TCQap1ze+wLQeKqLnmSE
      ar0BioJj2wjXYWJ8ElXT8Kge6rUKtisoFXPkKjrRoI9yeW/72rtGlYrloZqdR7cc6g2T3p5u
      TKPGwsISrmtRb9rUalVcq8nS4gJaIEytUrnfBmzb0hUNYHuC6I0qtVIF26xTabpUCytkq01W
      56dpOpJqtYrrWCwvLaJ6g5j1MuZDbNRcWF3CcmFuZhoUDeE6NE0Hy2igGxaVcpnlbIF4LES5
      8jCLdCXlUoFyucLqygIr2SxN06DWsKiWSixnl9B1g0qtTLWmYzSqLCytEInFHiI/D6Gg9uzq
      AOu4jo3tSgL+nXdFeFQYuk4guPM63T3hGOjCT8i3fRuj6zqh0KPdgbuYzxFLZdA2Nu1SohvG
      I89rI1bTQPH68e7g4vzQCIep6Rl6B0cJ+e8OVlzbxMZDwPvdBzDPvAB06PA4eepKcIcOT5OO
      AHR4qekIQIeXmo4AdHip6QhAh5eatgDo9SrLy8tYznc/yc80GmRXc7hCkFvN3zdscTXHTts4
      1SsllpZX2hbanVjNbX+O15ZwS3PMLt0nrHSpVFu7LOVXcwjbYLW4ddclvVrkxu1JJODaFisr
      WRxXIByL1Vy+5fIgJfV6y4gnhctqdoWm9eANqzo8WdoCcPr010jh8unHn2ALQX41S61htE3f
      hmFgNXVWsjmElDimzu8/+ohSpYbV1FnNF1uGHOFw6uuzmHqdcq3G+K07ZLOruFKysLCA2WxS
      yOdoWi0Xg/nxCVYKOQzT3pQXwOkzXyNdmy++PIXZbFKvVnBdl1w2i+W4COGwml3h5u3bNM0m
      IDGMJq5tkV3NkZu/zRdnv0E3bRyryanTF4lFQtSrZcrVOsKxaDYN6o1Wfvn5Cf7+w09xhGR6
      fBLXrDK+0BJg4dit5xAuX3z2BdFEawOnmelJLMvg6zMXOH3qFLVyjnPf3mJxdpIPfv8JAOdP
      n6JhWjSbT/909w6baQuAqnnpHxjkeH+Q2bzOwvwiv/nwI+ZuXmKu0ODcufN89eXnlMpFTLtl
      OjAtE6TLV1+foVZY5MqtGVBUEhEfCys5ggE/xUKeamGeG3dWmF+Y5dLZryk2dE6d+hoA4ZjU
      6wZff32aK+fPUK5XufDNtU2F1Dwapz79kLnlPFcunqWiG5w+fZaLZ06jmzauK/jmm4uAy5kz
      Zzn99SmazSa2bW/q0YSUmNVVLl4dZ+LaJSbGr/Prj8/grplCJhdy/ODkMFPLW62KZ09/hWHU
      OXv+W1xXtHcs27f/ANmFWbr7BxHeAPsPHsWplxgYPUAm0XIBX1hcpphdJlt4yC2MOzw2NukA
      Ugpmc00C9WlqShhFcTn06ltc/uTfE+/bzyuvvY5eWGBmuYzmDxKPx4lHQihePwP9feh6Aynh
      4NFXeeXQIN9cu0Wmu4/BwT5cs+Xg5PEGGRocwKO2Kp3q8TMwOICmSl597Ti/+f9+weihY3cL
      6PHy/e+/RziR4djh/Zi2zcDAAEgH3XQY6OtF87S2RrHMJpYjEKgM9Pe1ypdIEvRpaL4AyWSK
      sFchkuiiKxnGaDocPfEK8UgIKSxWVlbJ10ym71zf8qIcV2FgYADXsognkmTSSRTg9BefMXLs
      TY7s60dYJqZRxfVstlpnunt45fU3WJi686i/X4fviOdP//RP/xTApwjGp2YZPXKCnu5uSqtL
      DAyPkklnmJ5Z5P333qReLlCzVA4dGEFTVTQcCnWHwUyU6cUir544ikeF5flplos6r5w4SjgU
      JByNEggGSSZiFFeXyZWrHD5yglDQjy+gMTMxydihY8TiCeaWlnnz1WMoQCgcpa+vD4+q4g8E
      CIfDdHdluHXzFgeOHGeoN8ntiVn6Bobo70oyNb/C4OAg+wZ7uD0xQ8/gKPXcIt5QnKDfSzAY
      IN0ziFlZoalGOTg6SCAYIuDTEJZB19B+DuwfIxL0ks5kCEeiBIMBwkE/6USEm3emOH7yFWKx
      MNFIFEWBaqVEsVCg6cDB0X5uTc7x2muvsjB1G6Np03QVjh4Y5satOxw7+RoBf2dJ3bPEA10h
      6uU8RV0w3N/9SDLM53Iku7rYbh+G/MoCri9GT+rhPAk7dNgrHV+gDi81HTtAh5eap74g5nlD
      CIFY27v+3iV6Qtzd+3T92nEFTcsmEvRvCWNbFkK4+NeOdxJC4NoWdtMgEI1vSQvAsS0svQEK
      BCLxTUcmbZf/vdd6rQJr5fcGgmg+/6Y9Otevd5PWxiWeG6/rhoVHVQiu6Tu7ib/bPO+X1nbP
      cW+4fKWBoqjEQn48aqcHACTLC7MUylWce4yApqFjb2MY9Hg8aJqGqqrt6/Xf916vlHQ+/3au
      fd/j8bTjFFZXuHL+7Kb0Zq+e55O/+um2aWmaRmV1iU/+6qd8+v/+X5vub0x3p7JomsaFX/8N
      n/zVT/nkr37K4u2r7b95PJ4d4+x0vTHPjde/OTfJjdnCnuLvNs/7Xe/mu/zZz8/yv/7118yu
      Vlv3n1Q1e5YplyvEVcmliXm64grS46dhmIT8ATyaQr7UIOIT9I0cIhp6/AtzOjw5Oj0AklAw
      SNOBSNBLrd6gXimiWzZCQFPXUVQFpEOpWn/ahe3wiOn0AKiM7D+4+ZZjYgiNoG/rZO36+H+3
      RII+hrq3n9YNhiN09/Vvuhfv7mPk+Bs7phcIRRk5/kb77IO90jt2mGRPK89ouusBoR+Osf4U
      mdh3O7z8cfHWkX6khPjaQfCdadA9slEJ3qhc3ft7r9ffJb5lmgghkFIQDIW3hHMcB23tjN/t
      8hSui+PYSCkJBEOt46e+gxK8mzIXqgZCtFxKUrHgruLopk25ZpCOhfD7tEfyXl+YHqCUz1Ks
      W4yNDu24sYjrOiiqtmk7kFq9TnSPZ515PK2TZe7d6W1jRdvpemMcx3Haae02/nbXt658Q61S
      QVVV3v3Dn2wJ16hVCSRTW+6vz5YszU6zvDAPwKtvv0coEtlV/usNgaqqm653U+b//ednaFoO
      fakI/8t/+YNdxfnq4jR/8cG3/E//+fu8e2xwx/e6p++yh+/+TFOpVkANMjd5CxM/jVqN/v4+
      NI+CR/MwOzVLKKiihbvJLc7QPzhApWHg9/lZmZtECXeRDMBquUHYJzGED5p1QtEYC/NL9A/1
      EQzHySQ7VuoXiRdGCdY8LVmuN3R0XcfW67hOk3zVQPNoCEtHC8ZwLR3bNCmWyq0WWNPQDQNV
      VTB0Hdd1qNV0dL2OrjfR9TpSUZCqj65U4ik/ZYdHzQvTAwyOjK1d3d01rlIqkO5O4Nc8vP7u
      99r3D+wfwzQMvMFgqwUYGgCgaRgMBINrQyiBYVgEg/eeJvk4n+LhSKa7CIZ3HsZp3vtP3UZi
      cbr7XCSgeZ+Ms967RwewHLetjO6Goa44P3ljlK7Eo9tpvKME75FHpQTrpk2tYaKqKl2J0JZw
      eqNOIBhqj68flRK9cQx87992YwnOVxpIqRDwaUSCLWG5nxLctBwq9SaJSGCL4vowlmDHcXDs
      lmu9oqr41467vd97KdV0HBdCAS9Bn+f5VoJNvcbCSoHBoUH89+wMVqvViUY3tIRSYDkC3z3h
      hOvgSgWvtvPZYLV6jWgkuu3fHoUSfObGLL8+Mw7A//Hf/yNUVWmHk1Jy/dIFjr/+JrFEclfp
      rlfe9e3DtwvnOA5W0yCQSG6JI6VszcrcJz7AX/z6CrmKzhuH+viTPzoB3F8Jvj6e5d/+/ip/
      8g9P8vaRgR2V6N2+P71R58Y3FwHo6u1j/5Fjm97rdt/lbz+/xZ2FEj95Yx//0Ttjz7cSrNdr
      2K7g5rVv6e8fYHJ6gcGBbgxL4vMIJm5dJ5pMYzgqJ/f3sLBSRC9VGTt8mJW5cXTTIR6J4iIw
      HI2Q2iTeNUgiGmR64g6aL0hNbxLweymurqBoXhqGQFpV+vcdIdaxBL9QPHdKsNcfwDEbRGIp
      9Hodx2lSruk4joPXo2I6Ll6vl1qpiCsltivo7+tFCJdoIkNPTy+qsFA8HsqlIpZlY5pNHFdg
      WzaWZWE7NqpHw7JMLNMg3dWDV5VUOpbgF47nrgeIxFOciKfav0f3H8QwDILBljFlYGgUgJGR
      EQAOj94dEkWCa5bPrtb/I0Mjm9I+dOzEPbndVai7U68De7cE78RgV4z3jg2sddVb/97V14/X
      t3sFcTeoivJAhfhBvHqgh0bTZrgnvqvw3YkQ7x0beGSKq6Z529bzcGx3ZTgynCEdDzOyTZk7
      SvAe+S5KcK6soyqQjm9VencTf6dry2ziugIpJaHwVkvwTteGrqN5NbxrQrGTElwvF/EHQ3j9
      gUdmCb43/nd5/vtdr/9u2m7LTVtRSEZ86NXK86kE74Z8dglb8dOVim+a8XCtJqZUCT1gq3XT
      0FG8fnw7KMkPqwT/2d+coT8d4X/8p+8/YkvwzftagrdViG2baxfPMXrwEH2Dw/dVgi988DP2
      v/4++155+5FZgu+N/12eHx5sCT5/e5FffX2H4e4Y/9UPBvnib/4cKeWLKQDVahVvMMrFS1P0
      ZeLUHQ3NMfD5fAivxtJSjnfefJXLly6S7u6jbjTpynTh0wTT4xOE4xlCoQB60yTkU3EUL/Xc
      EunhQ/R3dYxhLxIvpAAEAwGqTYtELEJdNzCFB9s20bw+hG21xsGujSMVFFWhr7cbYVs0Gja2
      UPD6NBzHxrFtGo6LFghh2S6eR30ARIenzgspAH1Do/RturPZqntg7e7777+/Je7w8PCm320F
      e//+VkrfQQl+//jgY5lGTWW6CIWjuz1eDGgZkXr6B9reo/ej/+Dxx+Y6/aQYyET53vFBktEA
      /lCE0ZNvIYToKMF75Vl0h37Y+Pf+llJimU00zYuiqt/JHdp2HEo1k4BfQzFrKEAgHEXVvE9F
      CX6u3aGlcJmbnSGR6SMSCuw8FHEt7kzO0DswTCy8dUFGPrtErSkZHRm421g6JrcnZ+jp6ycY
      DLaty4au4w+FtjWUPGvu0LA7S/D94qwrwRM3r9PTP0Cmp+87uUMXawb/28/P8M6RflKzv8Oo
      V3njj/8J/QePPxUl+Ll2h5auQ62uI8Qi8zb4cPBHwthNl2pxhUT3AF7Ny0BXhGi6l8LSDGa6
      G0NvYFugl5fIDB/FMgyausXERAOv5qNpCQ4NpajoJsFijrzixahUyWQSLK/kCfolqi+M63qQ
      VpWBsY4l+EXj+dDqFJWA34Oi+fF5wHZcTNOkt7sLVyp4VAXdMJCKysriHJo/yOLcNFXdpK87
      heUK9IaB3x9kdGyMeCyBzyNxbAupqGgeFaSLLWCgrxej2cTr9WE7Dj5NIdPdg0+jYwl+Aeno
      AHtECIGiKM/kEGg3zmw7xVm/Xp6fI5ZIEIpEv9MQqFo3+N2FaUZ6E4Ty13Esk6FjrxHL9D5T
      Q6COAOyRF0kJNhoNNK8Xr++uJbhu2Oim3Q4X8GlEg95t4z8KS3BrPXNr7yWfP9AW4KemBDcb
      VeaX82S6u0jGooCk0TAIh1vm+0a1RiAaRm/oGLpBKBQkcs+a2kajgV9TuDU+xcDwPhLRILbt
      4vPtvNjCsQxcxU+xsEpXOkG+1KC3O71j+HWka1EzXGKRIM1GhYnpeUbGDhINtfxoLKuJonjx
      ej1kl+YRngDpdKpt5TVNE79/3edG0GgYGLpOPJlqu0s3Gg3CoQCmLfFq6guhBDu2zbVL57dY
      gj/5ZoZTV+fb6b12oJc/+aPje+4BdmsJXpydprh2ws+r77zf/hZPTQnO5kuEvQrZQpFmpUDd
      UbCqJWJdvSzP3CES7+fAsf0Ucyvkyzo9mSTLC3P4/EHqhkEsGmM5V+CdN14lGomiWg3mF0t4
      PILicgHF5yMcjVKvVghFYtQKy4QTXeiNEkP7X6OSW8YwdExLMjtxk96BYep1g0hYoW56CKg2
      qF6WF5cZGB7E5/OjYTO36HLi8D6ikTLSKHHmRpZkSMEfjWM3JWNjfTQdjVRQcv3KNfr600zP
      5xkd6sGolekdPkjIL7ly8RKjB8a4dvU6fX0pZhaKpKMa6a40phukJ723BfQdnm22KMFBr0qp
      XEHRvFi2jW3ZaJoHx6wjFA+W6bakrGkw2JvBUn3Yjt1aTytdGnrL5QDA6/UipEJvTxeucOnt
      66Mnk0Z4gvT19hIL+3GlgiJcFI8Xjwqp7h6apk3IK5BCxTBd+rpT1A0T22pimha1chnNF0TR
      fPT39RGLRqhVysi1PBsNHem4aB6VWt0A4SLQsPQSxWqTkaFBqrUaOC6OEEQSaZxmAyEVRvaN
      ousmo4MDVOt1cB18fj/NponoDBZfOJ4zHUCyMDtDvKu/PcR5VBiGQaC9HnhnXhQl2HVdZifH
      SWW6SKTS7fhXpnJMLhWRQqCoKkNdMd481PvYhkC5lWX0tcME+0dGn/gQ6DkTgKfPbpRgx7Yx
      m01UtXWyDYqyK2WtXi4g3ZZC6A0ECYSj943zOCzBj2J36IeJ/zDlXynUQFEIB3yEA9rzZAmW
      Lb0hmiYd335MXatViUZbe/A4lkG5bpFJtRY02HZrlsKvqdyZnKKnf5h4JNiOa9s2Xq+XcmGV
      hi1IRBOE1yzD9WoNPCqRNb95o1FFtyRYDZrSSzzkI5/P4Y8k6dughDcaDcJrcR6kBK8uLTI7
      OY6iKBw5+RqReHxXPcDlj/8DpZXWBlWH3/0RR9/78aZ073f9qCzBe4n/tN2h/89fXqRpufzh
      qyP8J987+PxYgoVt4qh+korBnZkKem6OaNcAsXCIer2Kq3jxYnH7+lVGj72OqBeomBK9ksMU
      KqVCnr6BQYa6YkTTfZRW5jCTGfRKiUpTIholDpx4jUrdYGiom8uXbtDV18PM9Cx9vf1I2SSR
      7iOTiuMLhChXcyRiUfRynbruYts2zXKR7Mwt4j3DOK7ENsoMjh5s7/Pf4cXgqViCFY8Xo1qk
      WK7R3ZVBSFA8HhaXV1CEg2PbeBSF1rm/JtVajUaljBZOkIzFSMajrdZDUckuzuLxB1lemKXp
      gF6rksy0TnBUhM1itsDgyChOo4ZUVVA8BAIBzGaDcrVBo1JicSXL1NQUjm2Cx084EmVspB9H
      8VCvtA7KDvh9mGtnG3d4cXhmdAC72UB31E1DmceJcGxsqWzaWsVo1PD4w/i0nduF3SjBlWKR
      Qi675nI8iM/v39UQ6M7FrzBqrbOEu4cP0Dd2eFO697t+VJbg52kI9MtTN3FcODCY4sRopqME
      PwmeRUuwaRi4wkVKSTjy8Irz86YEP8wzruuH6/efC2/QvSNZmp/FG06QiEbwbmjlTUMHjw+/
      7+Ef/VmzBN8av7XnNcHw/CvBDzMNWi2XCWYyd+8/4Fs/t9TrdcIqfDM5TyIsUHxhmqZJKBAA
      IVgpVHnn1cNMLq7SLGcJRjM0zQaKx0cyEsKwJcl4BLtZZ3xynuHRYcLRRGd36BeM58Md+iEI
      +ANYrkIs7MdyXJxmHcOyQfHgui7RaAQpJN29fSiKB5/mo6evn+7uDLZl4TgOeq0EHh+hSBSP
      L9jZHfoF5AXtARSGxw5svuXaNN3Wpq4bSQGpN9/ZHLare9PP/v6B9vWzqDGlu3oIRzs9027w
      +TdPY3eU4D2yWyV4MVfF79PIxEO7Vtb0RgOQFBsuKNCdiODzejqW4CfpDv1MIwXzszME4ykq
      uSzRdA92o0Qo0Y3PQ9tSC63jkFA8eDach7Q+A7C6vIDuqIwM9W/r+yNdBxcVbAtT2Fi2Qjjo
      x7vmzr0bJfinv7jAQCbGP//P3tu1EjwzcZtGtcpfnikTikT4H/7JO+wfSHUswU/SHfpZptmo
      gMeHaTaoVhu4YplQspt4JEg2m6WUz2K4Co1SgXA0iOpLkFuYpG9ohGq9gWOZjIwdpKHrGKZg
      /GaOpuLHazkEY1Ea9TqRaASzWsIIJDmUDnN5ep6DQ73cnBpnYOwgqWjoab+GDo+Q50oA/KEo
      1nKOoC9OOBwkGEvh1IuUA/5W6x8OE0OQs5vEUhn0hkkkGkH1BhgdTqI3dCSQSKYJ2w6NWhnN
      56VcNUj2BFp7AIWjDPZ1MbNcQguEOH5wlFrNoL+/by/b7nR4TujoAEiEkJvGjPdDCNEeu947
      1nRdtz2EuDqVJRTwsb8/uen+/caq5WIRIVzmijaKqnJgME044N0Uf6fre9PbTRwpJVK2nn3j
      9V7iw/Y6wF7j7zbOTtcbLfT3+y73Xj9XPcDjQUFV99a2r7/o9TH0+gfcWIFO7Ove9KHX71uW
      id8faMff+KHiySQej4dM99aKslFxvPe6WDW4OpVFUeCHr47uKs769XpluVcAdnO9PoY3mwal
      Qh6ARCpNKBzBsW2y2WUAAsEQyXRmx/h7yfNB1w/6LluuN37YUqm0/Rdfo7C6zJ3JmU3hXLfJ
      1NQcE5NT6LoOQKO4iu600pPCZfz2TUrVBgCruRy51dymdBuNBlZTx7ln10GjVuLWnQlst/WH
      +Zlp5uZmqOrmpnArcxNcvj6OAGzDoGYYVIurNJ27YfR6iRvXb2M67qbnrZULnL9wkabt3n0H
      rsFqobbje1h/uff+2/i3na5t02z/vje9h71eLTf4xanb/Or0xJ7iP0z5t4vfqNWYm5xgbnKC
      Rq3WVvDX7xVzq48l//ultdt0N/UAZrPJ6sI0569OMdwfI5BIUis4BHwm3nCS3mQI26qTyy6x
      tLJKdu4OqYFBZNODpUq8isvN67cYHhnBE9Wpliq8dnw/kUQPUi9zZXYC6Y2QCHg4/dllAskM
      Hi2AqdfoSSVpCIlp2Pg1F9UXJeL3cPDgAWYnblE3BZZRR0pJMbdK0XBRjQoDh15jrCuDE5Bc
      /OpTPMEMqqeJpgWRiyvkyk1+/IN3sG0L15XMz0zR0C0iQQ+Go3Li6CG6uuosT15nrmyTDkIx
      HKLecDl3Zomf/PE/IOTd+SyxDs83mwTAMuoomo/9+/eRiPpwFYXegxlK+Xm84XBrmkzz0NMz
      hCIlfo8g2d2N3xNG4OCYBmMH9pNIJHFVhf+/vTP9jts67/CDwToABrNxE4eUKJKK4tip0tjt
      h3Q5p81/3Gw9buq058SxErtHtkWJkrnvs6/YMQD6gSJNUiJFipS1mL8vvDODu2B5ifvc9973
      JsMESdHxB7tgmMiyRrFcRBWBm7dQDYtBb0B5YhxJUpCFFFsMGR/Z38RNkwWWl5YxdR1BFSnf
      nAIg8mysIIGgRD5vIkgipp4yMj6FqKi4ToZieYQkTjCsmHq9Qd7UkKUM+dIo42MZ+t02ora/
      dtmycoSSQEUDceiiW0V0I0VVVTrNBtrEGL7jgKyhXRvDe6UfAQRfDHJP6kVOlaMQfPR1eh5Y
      C8MQRZbhgrB2Vtr2Qtb3ukDKR7Pj585/VRAchSF2vweAkbNQNY0oirB7+1O7ZUXBfLad0Wng
      epnzP1nWRcr9ERjA1eoA3F7kcLnMDbxs/pOOrB/CAM5yhB09btDvYff2DSSXL2Ba1nP5L3v+
      ZznC3olRoOrOJk4kkNM1xsZG6XQ6FIvFw9/TOKDVGdDt2RTzOcojzwfN6reqbNY6zNyew8zu
      d28i1yXIZDA1jXZ1izhbZjR/PmdWFPggKcgnolGfBloHv52VPvn3qtMXzXN0+sPR9EXP5azz
      cgYDNleXAZi5c5dcPv/Cci6TPguAz8r/1hiAH/iQyeI5AxYf1YjThM31DURRJExiPvj5Pdq1
      HaKMhuuJPPz0PsXKPDkjS2tvA8EYY37CYvb2NE8WvqXa6VEZsZDUHHbo8cu/u8duvUEq9qhu
      pKiaiqpILD5eZGKygp/KCHaN/NgUnushqxKarBB4Dnsdj4IaMTl3j4nyizfPvta7qbfGAAzd
      oO8nWPk8SRyj6AZ2r0ehNIphKIiCgGkVMc0soaBSuXWb/MgYge9TmZoiVXJISsr6xi4zs7cw
      2gMsXSaKM4xoBeI4ZnximlRIcfs9lKzBMEmZnZ3DKuQZuBFqQUFUDNIUxibGyYoCA9tGs2JU
      IUKWrn3B75uuGeCCOpgNelHYepEn+CoZ4KyyXycEH80PL/bqeq6L7+37iLSsTlb/fpvYNw3B
      b80b4F3SUY/jUdi6jCfzvMe5/S7V1SeH39/5+J8O04KwH4BrZbfDxl6H0aLBz2fHzyz3NAM4
      b/rg81leXS2bxXgWQPkAUA909EG9Sk/wue/LmXf6DardblGt1uh02pAmPH26RAr4gzbNvnvs
      2NCzCZ85eAftNkOgVq9/f0Dk0rb9w++iwCd65nbutNsA2I5NHAU8+Oor6u39EYv2M493vXak
      LC7nyTwN/M6b3+13ePTnT3n0509Z/OK/X9iOx+sNfvPFEn9d3D13Wy6bvuy1uOr6z1vHW/sG
      2NtcIX/jDqnv4w1a7O3uoGgqvVYNY2Qar9uCdMj6yiql0RKyOcLao2+ozNwm2tlGy1psLn2G
      YI4xVTLYatrIQsSDr77kxsw8piLR6fQxcgo7e1Ucx+aXH3/CyMgohjzkP37zO+bnZ9nZrpLL
      KXz2n19y68NPuF15t3dLvNZxvbUGMD37032nUdZgGA/55B8+pt/roekmoedg6hLOUGDq5jRG
      voDrhczMzmJYORwvpFTKk5NnkPQCE0UdvZxh6PXQNZ1csUjQb9PqDZi7+wtEOJzMlbMsMpkM
      c7Oz5EyDKMmQz+ncmp2jaL18S9FrvVt6ByE4ZThMkKTLTUlI4pg4SY+F0CHhjwAACdpJREFU
      TDlXvktC8GUdYb5j063vAvt92IPgWUf747WOTaPjYBkaN8fzPxgEv4oj7U1D8DtoAG9WPwZP
      cJLE7G1tImQyZHUDq1B8af6XeYIHz6ZFWPniMU/wWQ+q3a5T31wlTRI0w+Tmz/7+XAZw2n35
      3683+NWHlcN/enEcv1kI3t1cZ2Nrf854Gg9xPB+AYeCxs7VGszugN3C+z5DGLD1ZpNHuHykl
      xra9w6nYJ1Wv14h9h4cLD6m1ekd+GWLbPoQ23yw8Zq9ax/XDw1977Tbx88UBbxaCzyr3qiA0
      iRO21lbZWl2hWateun5nMGBrdYWt1RUce3Dudrb3tnn8+X/x+C9/ZPnBF5e+Fr+/v0RyYq3A
      G2UARZVxnJAvP/8M5DyCpuLWdyhP3kYWPBw/pe8MKOkSj1Z2+PWv/x1Flui1drj/+efMzs9g
      ZGVqDZfxEZNBf4AkyniBTdYwWV2v8cEHtykZGmGc0NzZZHc7QUwiElkm9CU++bBCEA2JvB7L
      3R7RYEC+ZNHvOQSL35DNFUnIEttVJu/8ghvXnuD3Sm/UAJIkRZJERiemkbM5/MBnRL+NbpUQ
      CEFQKBZMwjBiflZBElJSQDfy3Jmfo1A0GSIyVhL355ckQ5Rsnmlril6/z9yMgmVZZGSVu3c/
      IBM5bOw2KeUNojRD6HogqZiagqbnGDFlrMkJHHdAHGcYKedQ1Cx6rsygJaOeETT3Wu+mrhng
      gnrTEHye/vyr5DnZn++2WmQyArKioun6pSDYc939mKyAegFPcOAMGLTrJEmKomqUK7cuBcFP
      NpvMTxYPB1CuIfgVdBSCz2sAa3sd1va63JooMDNuncsAtjfWGJu4gaJqlzKgZs/l66U9FFni
      X+/deqUH+DwG9JeFLbwg4lcf3SSrSpcaBeo0mzjOgIyQYWJqijTlQmVdZHDiNb/TY5r1Jr1+
      nzgKCKLjWNlut/EHLWotmwTYXF1k4cnac8cAdKvb7HUGPFxYOLPGeq1O4PR5tPCQvXqb8Eid
      7Xb7hbC8sbrETvX4OmX72cZtL9JFgFIQBFZ2O/z2iyWebjbPBcEA22urBL7/ykB88Lnecfjd
      /WX+8NflC7X5ouk/PVjnt18s4QXRpSG8Va+yvbbK1toKSZxcuC0XGRB47Qzgez7b2yuYuoGT
      alhZmUGvhVW6QRr02e51SLUx4qhPoTyK5ot89ukfyJduYJRKxE6LVndAOSvTb+/i+DFPvv2K
      tpeiKyKirFIsFOi1W2w2+/xsdhozKxJGEYNem0Gzjh0G5Ewdx48oWll6zQ6iqhAMPG5+9BGK
      IuN5NqvLXcIgoOMNEeOQrJqh5QqU9ZRgGDM+OU9lovjyk77WO6PXbAACubyJ6xoUR8YwYwE/
      DDF1g1wuh1IwqExO0OwPGZ8okwQuGTHDzO1Z9JyF7UZMzsztNzSFvAD5/BiJ10PLC5TKZSLX
      pVpvkCsUua3nsPIWkiKjqRq5nIUsSkxmJfq9HhlJw8rplApj+HaDv61sMiNkDvuYzXqdudvT
      yB0HVRiSkWRySYZSwURIE+D0ne6v9W7qR8sAaZoyHMZI0rPYnGlKnKSI4tm9wleB4EbHptn3
      KeezlHPasaV7p/Xh280GVr6AJJ8vMNZpfXjbDdmodZEkkbvT5dfGAMvbLcJhwvxUCUUSL8UA
      jj043GbWKhRJ0/TaE/y26FUg+GXpQa9LLl+40lGk2sYy/UYVo1Bi/Pbd66kQL4PgNI1YXFig
      0+nghid8oGlCrVbHcVp8+/Uj2j372BThxt42jx89wj/NdXpMMfVak0Z1h+X1LVzXoV47DqDL
      Tx+xvLZFvV479v0BELfre3y3vEIUP2+7rus+B7CBa7O+tUt1e5O1zd0XtqrXqrG8tkUKtPbW
      aQ4CvltcoNUdUKvVOFrTRSH4tOMO1O92rhRIBUGgtr7E47/8kc3Fry/d5lep/yqPe51tOcIA
      IoosEvbrLG23EIIusprFUCBIJAxNxfddwjCm1WqiZODzP31KYeqn5JUhAinffPk5yCaaBEno
      oZk5vCBFIIEkRZEiuqHI1MgYohCQERQazQZDz+P//nafX/7zvzFeNAmCEDET4Tk+//PpV1hj
      N9GtPE5jC+HDj7G9kKycsrK0hK6JfP1wkbn5O4TRkJKpUWu20MSUXqzyL//4C1TdRO3ZCKmA
      77isrzyl7wSM3pgmdZok2TJRv0sQJWxtbVMpW9TDFEEAz+khyfp1YNz3VEcMICYlg5S1uKFl
      Kej78WV2t9fJ5/MYmoog6JTLBaKhg5CCMDOLZuXJKhmmbuWo7mwyFBTyVg633yYRJIRuj8LI
      ODlNotNro6cilmkiSRa5XI5Ot02qm8zdgdDuEloGpmmQyhqWLjM1M0vWzOP5Q2bv/ASGEcW8
      wXatxej4DXIqzM9HjIyOk1VF4uGQjJghI4rkEanVm1i6TKPRYnS0gKKoZLMiqm5RKlj4MsSp
      gDYxzla1TaVSobm7Rj+yUWUN1/a4OTuBaw+uA2O9h3opA5wMlfE6deV1pftTJy5TZhAEKKp6
      +Aa4Ck/wyfg1ge+hZfUrnQ3aa9bxnT5qVidXHn/tDPAqMX7eBgZ46TDoD/Xwv5a6BOHSXRf1
      xJ5S8L1Xcr+K7y/0edeuiqLI9ncPcbptRiozlCu3LpT/tDXF8P0DGLg2xbFJNMM8NLQX5T/v
      muDvtttsNwaM5jXuzd94Lr8gCK/U5le5fm4w5P7jHSplgw9mxl5Y1rnXWp+8uT+kOo0q3y2t
      0Bsch9YocPH9gHb39AjNB/KcDgvffMvq+s6x6ctHQdi3e6xt7rL85BFumDxXxtD38aOIwB2w
      uPj0MFL0gQ7g+6guC36bjx6w+MVnNLZWXwv41TeW8J3+lUHowmqd399f4sFS9Y1D8MAN+f39
      JR6vN0495rxlvdHZoFpWY9josLz8lBHTwJN0dp5+Q35sAtMaxeu3qGoqds9GULJkdYUkEcgM
      PcLAwxMM7t2dJI5T3EGXbx+0ULUMwxg818MyswwFhdnKKJ47IHRdVpefEg8TrEKODAHteh9i
      UEZHGNdFbs3dobH5lMXtLpWiiqyZ2F7E2tOHjM/dY3LkejfG90lv1ADiOEGSZKZHKiQxjJfL
      iKFDrlgiDIZUfnKXyPeQK9MkZLCdHlGcoVyo4Nk9/ERCVg1++uGHRKEHQK/fIRZU8qaDLElE
      yMiKxljRYlgukw5D3CBGTEJSOcv83Uni0KPrhhTLJVZWlzHMHDPTOjdGSwTuAEEeYhR1VOUa
      gN83Cem+DiHmWmfrYMzgshDcq+/hew5moYxZKF0o/7kguFVHNy3kM2aTXgSCGz2Pnu1jaBJT
      Y/sbhp83OO5Z4HrRPHEcE8UpG9Uulq5wY+T55ZUXuS//D8+zN89l9S8XAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='What If Forecast' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
